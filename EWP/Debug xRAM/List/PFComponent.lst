###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.2.8542/W32 for ARM        20/Oct/2015  12:12:00
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  arm
#    Endian       =  little
#    Source file  =  
#        D:\IAR projects\HR1_0100_00_I720_new2\component\PFComponent.c
#    Command line =  
#        "D:\IAR projects\HR1_0100_00_I720_new2\component\PFComponent.c" -lcN
#        "D:\IAR projects\HR1_0100_00_I720_new2\EWP\Debug xRAM\List\" -o
#        "D:\IAR projects\HR1_0100_00_I720_new2\EWP\Debug xRAM\Obj\" --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=ARM926EJ-S -e
#        --fpu=VFP9-S --dlib_config "C:\Program Files\IAR Systems\Embedded
#        Workbench 7.40\arm\INC\c\DLib_Config_Normal.h" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\NXP\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\LIB\include\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\inc\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\Igor\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\mal\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\component\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\psupervisor\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\virtualMenu\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\callbackElement\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\logictimers\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\zonaVRT\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\" --interwork --cpu_mode arm -On
#        --use_c++_inline
#    List file    =  
#        D:\IAR projects\HR1_0100_00_I720_new2\EWP\Debug
#        xRAM\List\PFComponent.lst
#    Object file  =  
#        D:\IAR projects\HR1_0100_00_I720_new2\EWP\Debug xRAM\Obj\PFComponent.o
#
###############################################################################

D:\IAR projects\HR1_0100_00_I720_new2\component\PFComponent.c
      1          #ifndef _HIDE_COMPONENT
      2          /*
      3          #include <vcl.h>
      4          #include <strstrea.h>
      5          #include <math.h>
      6          #include <mem.h>
      7          #include <fstream.h>
      8          #include <strstrea.h>
      9          #include <iomanip.h>
     10          #pragma hdrstop
     11          
     12          #include "vmenuDis.h"
     13          */
     14          
     15          #include <stdio.h>
     16          #include <string.h>
     17          
     18          #include "bazisdef.h"
     19          #include "component\componentdef.h"
     20          #include "virtualMenu\systemmenudef.h"
     21          #include "virtualMenu\ustmanagerdef.h"
     22          
     23          #include "virtualMenu\textstreamfnc.h"
     24          #include "virtualMenu\systemmenufnc.h"
     25          #include "virtualMenu\ustmanagerfnc.h"
     26          #include "psuperVisor\psvisor_helpfnc.h"
     27          #include "logictimers\logictimersfnc.h"
     28          
     29          #include "virtualMenu\viewMenuList.h"
     30          
     31          #include "toSpeedOptim.h"
     32          
     33          #include "..\bazis.h"
     34          
     35          //код компонентов
     36          #define KOD_COMPONENT  PF_COMP1
     37          //к-во ступеней
     38          #define CNT_STUPEN_PF  1
     39          
     40          #endif // _HIDE_COMPONENT
     41          
     42          //РАСПРЕДЕЛЕНИЕ УСТАВОК  в менеджере уставок
     43          //к-во уставок в менеджере уставок
     44          #define MNGUST_PF_TOTAL  0
     45          
     46          //РАСПРЕДЕЛЕНИЕ ENA КОМАНД
     47          //к-во ENA команд
     48          #define ENACMD_PF_TOTAL 0
     49          
     50          //РАСПРЕДЕЛЕНИЕ УСТАВОК в супервизоре
     51          //к-во уставок в супервизоре
     52          #define SPVUST_PF_TOTAL  0
     53          
     54          //---------------IO COMMAND------------------
     55          //РАСПРЕДЕЛЕНИЕ IO КОМАНД ДЛЯ PF
     56          //PF1
     57          #define IOCMD1_PF 0
     58          //PF2
     59          #define IOCMD2_PF 1
     60          //PF3
     61          #define IOCMD3_PF 2
     62          //PF4
     63          #define IOCMD4_PF 3
     64          //PF5
     65          #define IOCMD5_PF 4
     66          //PF6
     67          #define IOCMD6_PF 5
     68          //PF7
     69          #define IOCMD7_PF 6
     70          //PF8
     71          #define IOCMD8_PF 7
     72          //PF9
     73          #define IOCMD9_PF 8
     74          //PF10
     75          #define IOCMD10_PF 9
     76          //PF11
     77          #define IOCMD11_PF 10
     78          //PF12
     79          #define IOCMD12_PF 11
     80          //PF13
     81          #define IOCMD13_PF 12
     82          //PF14
     83          #define IOCMD14_PF 13
     84          //PF15
     85          #define IOCMD15_PF 14
     86          //PF16
     87          #define IOCMD16_PF 15
     88          //к-во IO команд
     89          #define IOCMD_PF_TOTAL    16
     90          
     91          //---------------TL COMMAND------------------
     92          //РАСПРЕДЕЛЕНИЕ TL КОМАНД ДЛЯ PF
     93          //к-во TL команд
     94          #define TLCMD_PF_TOTAL    0
     95          
     96          //--------------- TIMERS ------------------
     97          //РАСПРЕДЕЛЕНИЕ ТАЙМЕРОВ ДЛЯ PF
     98          //к-во таймеров
     99          #define TIMERS_PF_TOTAL   0
    100          
    101          #ifndef _HIDE_COMPONENT
    102          
    103          extern COMPONENT_OBJ rpzcomponent_obj;//обект компонента для репозитария
    104          extern int  tmpUSTAVKI[];
    105          extern LineMenuItem sub_menu_cnf[];
    106          extern LineMenuItem sub_menu_tmp[];
    107          extern int  IndexUstSPV;//индекс уставок в супервизоре
    108          extern int  IndexIO;//индекс IO
    109          extern int  spvUSTAVKI[];//текущие уставки супервизора
    110          extern char *bitStringUNI[];
    111          int codecUstPF(char codec, short offset, int ust);
    112          void  logicPF(int idxC);
    113          int   isDISactiv_PF(int idxC);
    114          
    115          int  offsetIOCmdPF;//смещение для IO PF
    116          int  offsetIOCmdPF_loc;//смещение для IO PF
    117          
    118          char PF_TITLE[] = "ПФункции";
    119          
    120          IONAMESTATUS_COMPONENT ionsPF[IOCMD_PF_TOTAL] =
    121          {
    122            {
    123              1,//статус iocmd1
    124              "ПФункция 1"
    125            },
    126            {
    127              1,//статус iocmd1
    128              "ПФункция 2"
    129            },
    130            {
    131              1,//статус iocmd1
    132              "ПФункция 3"
    133            },
    134            {
    135              1,//статус iocmd1
    136              "ПФункция 4"
    137            },
    138            {
    139              1,//статус iocmd1
    140              "ПФункция 5"
    141            },
    142            {
    143              1,//статус iocmd1
    144              "ПФункция 6"
    145            },
    146            {
    147              1,//статус iocmd1
    148              "ПФункция 7"
    149            },
    150            {
    151              1,//статус iocmd1
    152              "ПФункция 8"
    153            },
    154            {
    155              1,//статус iocmd1
    156              "ПФункция 9"
    157            },
    158            {
    159              1,//статус iocmd1
    160              "ПФункция 10"
    161            },
    162            {
    163              1,//статус iocmd1
    164              "ПФункция 11"
    165            },
    166            {
    167              1,//статус iocmd1
    168              "ПФункция 12"
    169            },
    170            {
    171              1,//статус iocmd1
    172              "ПФункция 13"
    173            },
    174            {
    175              1,//статус iocmd1
    176              "ПФункция 14"
    177            },
    178            {
    179              1,//статус iocmd1
    180              "ПФункция 15"
    181            },
    182            {
    183              1,//статус iocmd1
    184              "ПФункция 16"
    185            }
    186          };
    187          
    188          LineMenuItem sub_menu_comp_PF[8] =
    189          {
    190            { PF_TITLE, NULL},//title
    191            { &CONTROL1_COMP,   &sub_menu_cnf,   typeMenuSub},//control_item, parent
    192            { NULL, NULL}
    193          };
    194          
    195          int initUstPF(char init)
    196          {
    197            //инициал уставок
    198          
    199            IndexUstSPV += SPVUST_PF_TOTAL;//индекс уставок в супервизоре
    200            return MNGUST_PF_TOTAL;//к-во уставок в менеджере уставок
    201          }//initUstPF(short mngUst, char init)
    202          
    203          void  prepareUstPF(short idxC)
    204          {
    205            //подготовка ENA команд для клона
    206          }//prepareUstPF(short idxC)
    207          
    208          int initIOCmd_PF()
    209          {
    210            //инициал IO команд
    211            offsetIOCmdPF_loc = IndexIO;//смещение для IO PF
    212            return commonInitIOCmd(IOCMD_PF_TOTAL);
    213          }//initIOCmd_PF()
    214          
    215          int initTLCmd_PF()
    216          {
    217            //инициал TL команд
    218            return 0;
    219          }//initTLCmd_PF()
    220          
    221          int initENACmd_PF()
    222          {
    223            //инициал ENA команд
    224            return 0;
    225          }//initENACmd_PF()
    226          
    227          void initTimersPF(short idxC)
    228          {
    229            //запрос и инициал таймеров
    230          }//initTimersPF()
    231          
    232          int codecUstPF(char codec, short offset, int ust)
    233          //codec=0-кодировать
    234          //codec=1-раскодировать
    235          {
    236            //кодировать-раскодировать уставку
    237            return 1;
    238          }//codecUstPF(char *buf, short offset, int ust)
    239          
    240          int isDISactiv_PF(int idxC)
    241          {
    242           //активность Регистратора ДИС
    243            return 0;//нет активности
    244          }//isDISactiv_PF(int idxC)
    245          
    246          char copyPFToRepozitar(char packet)
    247          {
    248            memset(&rpzcomponent_obj, 0, sizeof(COMPONENT_OBJ));//стереть старое
    249          
    250          //копировать компонент в репозитарий
    251            rpzcomponent_obj.componentEnable = 1;//разрешение компонента
    252            rpzcomponent_obj.kodC   = KOD_COMPONENT;         //код компонента
    253            rpzcomponent_obj.packet = 0;    //номер пакетного компонента
    254            rpzcomponent_obj.permanent = 0; //перманентный компонент
    255          
    256            strcpy(rpzcomponent_obj.nameComponent,  PF_TITLE);       //имя компонента
    257            rpzcomponent_obj.sub_menu_component =  sub_menu_comp_PF;//меню компонента
    258          
    259            rpzcomponent_obj.cntClon      = CNT_STUPEN_PF;   //max к-во клонов
    260            rpzcomponent_obj.numClon      = 1;//номер клона
    261            rpzcomponent_obj.workToSignal = 0; //Работа на сигнал
    262          
    263            rpzcomponent_obj.initUstMng     = initUstPF;    //инициал уставок
    264            rpzcomponent_obj.prepareUstSpv  = prepareUstPF;//подготовка уставок
    265            rpzcomponent_obj.initIOCmd      = initIOCmd_PF;      //инициал IO команд
    266            rpzcomponent_obj.initTLCmd      = initTLCmd_PF;      //инициал TL команд
    267            rpzcomponent_obj.initENACmd     = initENACmd_PF;     //инициал ENA команд
    268            rpzcomponent_obj.bo_bvCmd       = NULL; //настройка БО БВ команд
    269            rpzcomponent_obj.isDISactiv     = isDISactiv_PF; //активность Регистратора ДИС
    270            rpzcomponent_obj.setBOBVtimer   = NULL; //инициал таймеров БО БВ
    271          
    272            rpzcomponent_obj.nameStatusIO = ionsPF;          //имена и статус команд IO
    273            rpzcomponent_obj.initTimers   = initTimersPF;    //запрос и инициал таймеров
    274            rpzcomponent_obj.logic        = logicPF;         //логика компонента
    275          
    276            rpzcomponent_obj.codecUst = codecUstPF;   //кодировать-раскодировать уставку
    277          
    278            return 0;//не пакетная регистрация
    279          }//
    280          
    281          #endif // _HIDE_COMPONENT
    282          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   codecUstPF
      24   copyPFToRepozitar
        24   -> __aeabi_memset
        24   -> strcpy
       0   initENACmd_PF
       8   initIOCmd_PF
         8   -> commonInitIOCmd
       0   initTLCmd_PF
       0   initTimersPF
       0   initUstPF
       0   isDISactiv_PF
       0   prepareUstPF


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
       4  ??DataTable2_6
       4  ??DataTable2_7
       4  ??DataTable2_8
      12  ?_0
      12  ?_1
      12  ?_10
      12  ?_11
      12  ?_12
      12  ?_13
      12  ?_14
      12  ?_15
      12  ?_2
      12  ?_3
      12  ?_4
      12  ?_5
      12  ?_6
      12  ?_7
      12  ?_8
      12  ?_9
      12  PF_TITLE
      12  codecUstPF
     296  copyPFToRepozitar
       8  initENACmd_PF
      32  initIOCmd_PF
       8  initTLCmd_PF
       4  initTimersPF
      28  initUstPF
     128  ionsPF
      12  isDISactiv_PF
       4  offsetIOCmdPF
       4  offsetIOCmdPF_loc
       4  prepareUstPF
      96  sub_menu_comp_PF

 
   8 bytes in section .bss
 236 bytes in section .data
 192 bytes in section .rodata
 440 bytes in section .text
 
 440 bytes of CODE  memory
 192 bytes of CONST memory
 244 bytes of DATA  memory

Errors: none
Warnings: none
