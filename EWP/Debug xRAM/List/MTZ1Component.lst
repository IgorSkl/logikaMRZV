###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        15/Oct/2015  17:17:35
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  arm
#    Endian       =  little
#    Source file  =  
#        D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\component\MTZ1Component.c
#    Command line =  
#        "D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\component\MTZ1Component.c" -lcN
#        "D:\Program Files\IAR Systems\MYWORK\HR1_0100_00_I720_new2\EWP\Debug
#        xRAM\List\" -o "D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\EWP\Debug xRAM\Obj\" --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=ARM926EJ-S -e
#        --fpu=VFP9-S --dlib_config "D:\Program Files\IAR Systems\Embedded
#        Workbench 7.2\arm\INC\c\DLib_Config_Normal.h" -I "D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\NXP\" -I "D:\Program
#        Files\IAR Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\LIB\include\" -I
#        "D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\inc\" -I "D:\Program
#        Files\IAR Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\Igor\" -I
#        "D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\mal\" -I "D:\Program
#        Files\IAR Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\component\" -I
#        "D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\psupervisor\" -I
#        "D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\virtualMenu\" -I
#        "D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\callbackElement\" -I
#        "D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\logictimers\" -I
#        "D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\zonaVRT\" -I "D:\Program
#        Files\IAR Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\" --interwork
#        --cpu_mode arm -On --use_c++_inline
#    List file    =  
#        D:\Program Files\IAR Systems\MYWORK\HR1_0100_00_I720_new2\EWP\Debug
#        xRAM\List\MTZ1Component.lst
#    Object file  =  
#        D:\Program Files\IAR Systems\MYWORK\HR1_0100_00_I720_new2\EWP\Debug
#        xRAM\Obj\MTZ1Component.o
#
###############################################################################

D:\Program Files\IAR Systems\MYWORK\HR1_0100_00_I720_new2\component\MTZ1Component.c
      1          #ifndef _HIDE_COMPONENT
      2          /*
      3          #include <vcl.h>
      4          #include <strstrea.h>
      5          #include <math.h>
      6          #include <mem.h>
      7          #include <fstream.h>
      8          #include <strstrea.h>
      9          #include <iomanip.h>
     10          #pragma hdrstop
     11          
     12          #include "vmenuDis.h"
     13          */
     14          
     15          #include <stdio.h>
     16          #include <string.h>
     17          
     18          #include "bazisdef.h"
     19          #include "component\componentdef.h"
     20          #include "virtualMenu\systemmenudef.h"
     21          #include "virtualMenu\ustmanagerdef.h"
     22          #include "psuperVisor\psvisor_helpdef.h"
     23          
     24          #include "virtualMenu\textstreamfnc.h"
     25          #include "virtualMenu\systemmenufnc.h"
     26          #include "virtualMenu\ustmanagerfnc.h"
     27          #include "psuperVisor\psvisor_helpfnc.h"
     28          #include "virtualMenu\rangmanagerfnc.h"
     29          #include "logictimers\logictimersfnc.h"
     30          
     31          #include "virtualMenu\viewMenuList.h"
     32          
     33          #include "psupervisor\psupervisor.h"
     34          
     35          #include "toSpeedOptim.h"
     36          
     37          #include "..\bazis.h"
     38          
     39          //код компонентa
     40          #define KOD_COMPONENT  MTZ_COMP1
     41          //к-во ступеней
     42          #define CNT_STUPEN_MTZ  5
     43          
     44          #endif // _HIDE_COMPONENT
     45          
     46          //---------------MANAGER UST------------------
     47          //РАСПРЕДЕЛЕНИЕ УСТАВОК  в менеджере уставок
     48          //уставка сработки
     49          #define MNGUST_MTZ1     0
     50          #define MNGUST_MTZ1_V   1
     51          #define MNGUST_MTZ1_N   2
     52          #define MNGUST_MTZ1_PN  3
     53          #define MNGUST_MTZ1_UPN 4
     54          
     55          //уставка выдержки
     56          #define MNGVID_MTZ1    5
     57          #define MNGVID_MTZ1_V  6
     58          #define MNGVID_MTZ1_N  7
     59          #define MNGVID_MTZ1_PN 8
     60          
     61          //уставка управления
     62          #define MNGUPR_MTZ1    9
     63          //к-во уставок в менеджере уставок
     64          #define MNGUST_MTZ1_TOTAL  10
     65          //#define MNGUST_BOBV_MTZ1  MNGUST_MTZ1_TOTAL
     66          
     67          //РАСПРЕДЕЛЕНИЕ ENA команд
     68          #define ENA_MTZ1_HALF1  0
     69          #define ENA_MTZ1_HALF2  1
     70          #define ENA_MTZ1_1      2
     71          #define ENA_MTZ1_2      3
     72          #define ENA_MTZ1_3      4
     73          //к-во ENA команд
     74          #define ENACMD_MTZ1_TOTAL 5
     75          
     76          //РАСПРЕДЕЛЕНИЕ УСТАВОК в супервизоре
     77          //уставка SPV сработки
     78          #define SPVSRABUST_MTZ1     0
     79          #define SPVSRABUST_MTZ1_V   1
     80          #define SPVSRABUST_MTZ1_N   2
     81          #define SPVSRABUST_MTZ1_PN  3
     82          #define SPVSRABUST_MTZ1_UPN 4
     83          //уставка SPV возврата
     84          #define SPVVOZVUST_MTZ1     5
     85          #define SPVVOZVUST_MTZ1_V   6
     86          #define SPVVOZVUST_MTZ1_N   7
     87          #define SPVVOZVUST_MTZ1_PN  8
     88          #define SPVVOZVUST_MTZ1_UPN 9
     89          //уставка SPV выход
     90          #define SPV_OUTA_MTZ1      10
     91          #define SPV_OUTB_MTZ1      11
     92          #define SPV_OUTC_MTZ1      12
     93          
     94          #define SPV_OUTA_MTZ1_V    13
     95          #define SPV_OUTB_MTZ1_V    14
     96          #define SPV_OUTC_MTZ1_V    15
     97          
     98          #define SPV_OUTA_MTZ1_N    16
     99          #define SPV_OUTB_MTZ1_N    17
    100          #define SPV_OUTC_MTZ1_N    18
    101          
    102          #define SPV_OUTA_MTZ1_PN   19
    103          #define SPV_OUTB_MTZ1_PN   20
    104          #define SPV_OUTC_MTZ1_PN   21
    105          
    106          #define SPV_OUTA_MTZ1_UPN  22
    107          #define SPV_OUTB_MTZ1_UPN  23
    108          #define SPV_OUTC_MTZ1_UPN  24
    109          //к-во уставок SPV в супервизоре
    110          #define SPVUST_MTZ1_TOTAL  25
    111          
    112          //---------------IO COMMAND------------------
    113          //РАСПРЕДЕЛЕНИЕ IO КОМАНД ДЛЯ MTZ1
    114          //Стат блок МТЗ1
    115          #define IOCMD1_MTZ1 0
    116          //Сраб ПО МТЗ1
    117          #define IOCMD2_MTZ1 1
    118          //Сраб ПО МТЗ1 ВПД
    119          #define IOCMD3_MTZ1 2
    120          //Сраб ПО МТЗ1 НЗД
    121          #define IOCMD4_MTZ1 3
    122          //Сраб ПО МТЗ1 ПН
    123          #define IOCMD5_MTZ1 4
    124          //Сраб МТЗ1
    125          #define IOCMD6_MTZ1 5
    126          //Сектор МТЗ1 ВПД
    127          #define IOCMD7_MTZ1 6
    128          //Сектор МТЗ1 НЗД
    129          #define IOCMD8_MTZ1 7
    130          //к-во IO команд
    131          #define IOCMD_MTZ1_TOTAL    8
    132          
    133          //---------------TL COMMAND------------------
    134          //РАСПРЕДЕЛЕНИЕ TL КОМАНД ДЛЯ MTZ1
    135          //MTZ1_PO2
    136          #define TLCMD1_MTZ1  0
    137          //MTZ1_PO3
    138          #define TLCMD2_MTZ1  1
    139          //MTZ1_PO4
    140          #define TLCMD3_MTZ1  2
    141          //isFAILU_INVERT
    142          //#define TLCMDFU_MTZ1  3
    143          //ELOLDTRG_NCN_MTZ1
    144          #define TLCMDOLDNCN_MTZ1 4
    145          //ELOUTTRG_NCN_MTZ1
    146          #define TLCMDOUTNCN_MTZ1 5
    147          //к-во TL команд
    148          #define TLCMD_MTZ1_TOTAL 6
    149          
    150          //--------------- TIMERS ------------------
    151          //РАСПРЕДЕЛЕНИЕ ТАЙМЕРОВ ДЛЯ MTZ1
    152          //таймер 0
    153          #define TIMER1_MTZ1   0
    154          //таймер 1
    155          #define TIMER2_MTZ1   1
    156          //таймер 2
    157          #define TIMER3_MTZ1   2
    158          //таймер 3
    159          #define TIMER4_MTZ1   3
    160          //таймер 4 BO
    161          #define TIMER_BO_MTZ1 4
    162          //к-во таймеров
    163          #define TIMERS_MTZ1_TOTAL   5
    164          
    165          #ifndef _HIDE_COMPONENT
    166          
    167          #define _HIDE_COMPONENT
    168          #include "PRM1Component.c"
    169          
    170          extern COMPONENT_OBJ rpzcomponent_obj;//обект компонента для репозитария
    171          extern int  tmpUSTAVKI[];
    172          extern int  spvUSTAVKI[];//текущие уставки супервизора
    173          
    174          extern LineMenuItem sub_menu_MTZ[];
    175          extern LineMenuItem sub_menu_tmp[];
    176          extern int  IndexUstSPV;//индекс уставок в супервизоре
    177          extern int  IndexIO;//индекс IO
    178          
    179          extern COMPONENT_OBJ  cnfCOMPONENT[];//конфигурация
    180          extern char *bitStringUNI[];
    181          extern int offsetUstMngPRM1;//смещение на уставки PRM1
    182          
    183          void PereinitUstListCompMTZ1(short flg);
    184          void UstListCompMTZ1();
    185          void ustRedactorCompMTZ1();
    186          void UstCompMTZ1();
    187          
    188          void PereinitVidListCompMTZ1(short flg);
    189          void VidListCompMTZ1();
    190          void vidRedactorCompMTZ1();
    191          void VidCompMTZ1();
    192          
    193          void PereinitUprListCompMTZ1(short flg);
    194          void UprListCompMTZ1();
    195          void uprRedactorCompMTZ1();
    196          void UprCompMTZ1();
    197          short  KadrMenuFormat_upr_compMTZ1(void *workCntr);
    198          int  initUstMTZ1(char init);
    199          void  prepareUstMTZ1(short idxC);
    200          void UpravlRedactorChooseMTZ(char *nameUpr, short ibit);
    201          
    202          short  KadrMenuFormat_MTZ1(void *workCntr);
    203          
    204          void EditUstMTZ1();
    205          void EditVidMTZ1();
    206          void EditUprMTZ1();
    207          int codecUstMTZ1(char codec, short offset, int ust);
    208          short  KadrMenuFormat_ustvidMTZ(void *workCntr);
    209          short chooseTxtMTZ(char *locTxt, short ibit, UNS_32 ust);
    210          char *selectorUprStrMTZ1(short iBit, UNS_32 ustUpr);
    211          void UpravlChooserMTZInKadr(char *nameUpr, short ibit, void *workCntr);
    212          void  logicMTZ1(int idxC);
    213          int   isDISactiv_MTZ1(int idxC);
    214          
    215          int  offsetIOCmdMTZ1;//смещение для IO MTZ1
    216          
    217          char MTZ1_TITLE[] = "МТЗ1";
    218          
    219          IONAMESTATUS_COMPONENT ionsMTZ1[IOCMD_MTZ1_TOTAL] =
    220          {
    221            {
    222              1,//статус iocmd1
    223              "Стат блок МТЗ1"
    224            },
    225            {
    226              1,//статус iocmd2
    227              "Сраб ПО МТЗ1"
    228            },
    229            {
    230              1,//статус iocmd3
    231              "Сраб ПО МТЗ1 ВПД"
    232            },
    233            {
    234              1,//статус iocmd4
    235              "Сраб ПО МТЗ1 НЗД"
    236            },
    237            {
    238              1,//статус iocmd5
    239              "Сраб ПО МТЗ1 ПН"
    240            },
    241            {
    242              1,//статус iocmd6
    243              "Сраб МТЗ1"
    244            },
    245            {
    246              1,//статус iocmd7
    247              "Сектор МТЗ1 ВПД"
    248            },
    249            {
    250              1,//статус iocmd8
    251              "Сектор МТЗ1 НЗД"
    252            }
    253          };
    254          
    255          LineMenuItem sub_menu_comp_MTZ1[8] =
    256          {
    257            { MTZ1_TITLE, NULL},//title
    258            { &CONTROL1_COMP, &sub_menu_MTZ, typeMenuSub},//control_item, parent
    259            { "Уставки МТЗ1",    (void *)&UstListCompMTZ1, typeMenuProg},
    260            { "Выдержки МТЗ1",   (void *)&VidListCompMTZ1, typeMenuProg},
    261            { "Управление МТЗ1", (void *)&UprListCompMTZ1, typeMenuProg},
    262            { NULL, NULL}
    263          };
    264          
    265          LineMenuItem sub_menu_ust_compMTZ1[] =
    266          {
    267            { "Уставки МТЗ1", NULL},//title
    268            { &CONTROL2_COMP, &sub_menu_comp_MTZ1, typeMenuList},//control_item, parent
    269            { "Уст МТЗ1",         (void *)&UstCompMTZ1, typeMenuProg},
    270            { "Уст МТЗ1 вперед",  (void *)&UstCompMTZ1, typeMenuProg},
    271            { "Уст МТЗ1 назад",   (void *)&UstCompMTZ1, typeMenuProg},
    272            { "Уст МТЗ1 ПH",      (void *)&UstCompMTZ1, typeMenuProg},
    273            { "Уст напр МТЗ1 ПH", (void *)&UstCompMTZ1, typeMenuProg},
    274            { NULL, NULL}
    275          
    276          };
    277          
    278          LineMenuItem sub_menu_vid_compMTZ1[] =
    279          {
    280            { "Выдержки МТЗ1", NULL},//title
    281            { &CONTROL2_COMP, &sub_menu_comp_MTZ1, typeMenuList},//control_item, parent
    282            { "Выдержка МТЗ1",        (void *)&VidCompMTZ1, typeMenuProg},
    283            { "Выдержка МТЗ1 вперед", (void *)&VidCompMTZ1, typeMenuProg},
    284            { "Выдержка МТЗ1 назад",  (void *)&VidCompMTZ1, typeMenuProg},
    285            { "Выдержка МТЗ1 ПH",     (void *)&VidCompMTZ1, typeMenuProg},
    286            { NULL, NULL}
    287          
    288          };
    289          
    290          LineMenuItem sub_menu_upr_compMTZ1[] =
    291          {
    292            { "Управл МТЗ1", NULL},//title
    293            { &CONTROL2_COMP, &sub_menu_comp_MTZ1, typeMenuList},//control_item, parent
    294            { "Вид МТЗ1",           (void *)&UprCompMTZ1, typeMenuProg},
    295            { "Управл МТЗ1",        (void *)&UprCompMTZ1, typeMenuProg},
    296            { "МТЗ1 вперед",        (void *)&UprCompMTZ1, typeMenuProg},
    297            { "МТЗ1 назад",         (void *)&UprCompMTZ1, typeMenuProg},
    298            { NULL, NULL}
    299          
    300          };
    301          
    302          void PereinitUstListCompMTZ1(short flg)
    303          {
    304          //переиниц
    305            //инит компонентного контроля
    306            TxtStreamInit(&CONTROL2_COMP, &KadrMenuFormat_ustvidMTZ, sub_menu_ust_compMTZ1);//инит control и формир кадра
    307            if(flg==0)//END
    308            {
    309              TxtStreamSetEnd(&CONTROL2_COMP, SIZE_PAGE_VIEW/2);//перейти на END
    310            }//if
    311          
    312            ViewDiskrMenuList();//вывести окно отображения
    313            ListPStr();//доступ к уставкам
    314          }//PereinitUstListComp2()
    315          
    316          void UstListCompMTZ1()
    317          {
    318            SelectorMNGBAZA(0);//установка базу уставок
    319          
    320            SelectorSUBMENU(sub_menu_ust_compMTZ1);//уcтановить текущее субменю
    321          
    322            SelectorTEXTCONTROL(&CONTROL2_COMP);//текущий control
    323          
    324            SelectorFHOME(&PereinitUstListCompMTZ1);//указатель на ф-цию HOME
    325            InitFHOME(1);//exe ф-цию HOME
    326          
    327            LanderUpDown();//wkl Up Down
    328          }//UstListCompMTZ1()
    329          
    330          void UstCompMTZ1()
    331          {
    332            SelectorCRRLIGHTLINE();//найти подсвеченную строку текущего текст потока
    333            PrepareEditMenu(sub_menu_ust_compMTZ1);
    334            PassWord(EditUstMTZ1);
    335          }//VidCompMTZ1()
    336          
    337          void EditUstMTZ1()
    338          {
    339          //редактировать уставку
    340            SystemEditUst(sub_menu_ust_compMTZ1);//[LIGHTLINEMENU +1+SUBDATA].Line1, LIGHTLINEMENU);
    341          }//UstCompMTZ1()
    342          
    343          short  KadrMenuFormat_ustvidMTZ(void *pstr)
    344          {
    345            WorkControl *workCntr  = (WorkControl *)pstr;
    346          //формирователь кадра
    347            char locTxt[50];
    348            RESET_COUNTER;//сброс счетчиков
    349            for(int i=0;; i++)
    350            {
    351          //критерий терминатора
    352              if(((LineMenuItem *)workCntr->userPoint)[i+1+SUBDATA].Line1==NULL)break;
    353              COMPARE_COUNTER
    354              {
    355                strcpy((char *)workCntr->twoString, (char *)( ((LineMenuItem *)workCntr->userPoint) )[i+1+SUBDATA].Line1);
    356                sprintf(locTxt, "   %d", getUstOffsetMngUSTAVKI(i));
    357                strcpy((char *)workCntr->twoString + sizeof(WorkVariantChar)/2, locTxt);
    358                return 1;//сравнить счетчики кадров
    359              }
    360            }//for
    361          
    362            return 1;
    363          }//KadrMenuFormat_ust_1(WorkControl *workCntr)
    364          
    365          //--------------------------------------------------
    366          
    367          void PereinitVidListCompMTZ1(short flg)
    368          {
    369          //переиниц
    370            //инит компонентного контроля
    371            TxtStreamInit(&CONTROL2_COMP, &KadrMenuFormat_ustvidMTZ, sub_menu_vid_compMTZ1);//инит control и формир кадра
    372            if(flg==0)//END
    373            {
    374              TxtStreamSetEnd(&CONTROL2_COMP, SIZE_PAGE_VIEW/2);//перейти на END
    375            }//if
    376          
    377            ViewDiskrMenuList();//вывести окно отображения
    378            ListPStr();//доступ к уставкам
    379          }//PereinitUstListComp2()
    380          
    381          void VidListCompMTZ1()
    382          {
    383            SelectorMNGBAZA(MNGVID_MTZ1);//установка базы уставок
    384          
    385            SelectorSUBMENU(sub_menu_vid_compMTZ1);//утановить текущее субменю
    386          
    387            SelectorTEXTCONTROL(&CONTROL2_COMP);//текущий control
    388          
    389            SelectorFHOME(&PereinitVidListCompMTZ1);//указатель на ф-цию HOME
    390            InitFHOME(1);//exe ф-цию HOME
    391          
    392            LanderUpDown();//wkl Up Down
    393          }//VidListCompMTZ1()
    394          
    395          void VidCompMTZ1()
    396          {
    397            SelectorCRRLIGHTLINE();//найти подсвеченную строку текущего текст потока
    398            PrepareEditMenu(sub_menu_vid_compMTZ1);
    399          //  PassWord(EditVidAPV);
    400            EditVidMTZ1();
    401          }//VidCompMTZ1()
    402          
    403          void EditVidMTZ1()
    404          {
    405          //редактировать уставку
    406            SystemEditUst(sub_menu_vid_compMTZ1);//[LIGHTLINEMENU +1+SUBDATA].Line1, LIGHTLINEMENU);
    407          }//
    408          
    409          //--------------------------------------------------
    410          
    411          void PereinitUprListCompMTZ1(short flg)
    412          {
    413          //переиниц
    414            //инит компонентного контроля
    415            TxtStreamInit(&CONTROL2_COMP, &KadrMenuFormat_upr_compMTZ1, NULL);//инит control и формир кадра
    416            if(flg==0)//END
    417            {
    418              TxtStreamSetEnd(&CONTROL2_COMP, SIZE_PAGE_VIEW/2);//перейти на END
    419            }//if
    420          
    421            ViewDiskrMenuList();//вывести окно отображения
    422            ListPStr();//доступ к уставкам
    423          }//PereinitUstListComp2()
    424          
    425          void UprListCompMTZ1()
    426          {
    427            SelectorMNGBAZA(MNGUPR_MTZ1);//установка базы уставок
    428          
    429            SelectorSUBMENU(sub_menu_upr_compMTZ1);//утановить текущее субменю
    430          
    431            SelectorTEXTCONTROL(&CONTROL2_COMP);//текущий control
    432          
    433            SelectorFHOME(&PereinitUprListCompMTZ1);//указатель на ф-цию HOME
    434            InitFHOME(1);//exe ф-цию HOME
    435          
    436            LanderUpDown();//wkl Up Down
    437          }//VidListCompMTZ1()
    438          
    439          void UprCompMTZ1()
    440          {
    441            SelectorCRRLIGHTLINE();//найти подсвеченную строку текущего текст потока
    442            PrepareEditMenu(sub_menu_upr_compMTZ1);
    443            PassWord(EditUprMTZ1);
    444          }//VidCompMTZ1()
    445          
    446          void EditUprMTZ1()
    447          {
    448          //редактировать уставку упр
    449            char *nameUpr = (char *)sub_menu_upr_compMTZ1[LIGHTLINEMENU +1+SUBDATA].Line1;
    450          
    451            switch(LIGHTLINEMENU)
    452            {
    453              case 0: UpravlRedactorChooseMTZ(nameUpr, LIGHTLINEMENU);//редактировать уставку управления
    454              break;
    455              default:UpravlRedactor(nameUpr, LIGHTLINEMENU+1, &selectorUprStrMTZ1);//редактировать уставку управления
    456            }//switch
    457          
    458          }//EditVidMTZ1()
    459          
    460          void UpravlRedactorChooseMTZ(char *nameUpr, short ibit)
    461          {
    462          //редактировать уставку управления
    463          //  CRR_SUBMENU = sub_menu_tmp;//текущее субменю
    464          //  ResetAllButton();//погасить все клавиши
    465          /*
    466            FvmenuDis->EditChooseMTZPanel->Visible = true;
    467          
    468            char locTxt[50];
    469            switch(chooseTxtMTZ(locTxt, ibit, getCurrentMngUSTAVKI()))
    470            {
    471            case 0:
    472              FvmenuDis->Choose1MTZButton->Checked = true;
    473              FvmenuDis->Choose2MTZButton->Checked = false;
    474              FvmenuDis->Choose3MTZButton->Checked = false;
    475              FvmenuDis->Choose4MTZButton->Checked = false;
    476              break;
    477            case 1:
    478              FvmenuDis->Choose1MTZButton->Checked = false;
    479              FvmenuDis->Choose2MTZButton->Checked = true;
    480              FvmenuDis->Choose3MTZButton->Checked = false;
    481              FvmenuDis->Choose4MTZButton->Checked = false;
    482              break;
    483            case 2:
    484              FvmenuDis->Choose1MTZButton->Checked = false;
    485              FvmenuDis->Choose2MTZButton->Checked = false;
    486              FvmenuDis->Choose3MTZButton->Checked = true;
    487              FvmenuDis->Choose4MTZButton->Checked = false;
    488              break;
    489            case 3:
    490              FvmenuDis->Choose1MTZButton->Checked = false;
    491              FvmenuDis->Choose2MTZButton->Checked = false;
    492              FvmenuDis->Choose3MTZButton->Checked = false;
    493              FvmenuDis->Choose4MTZButton->Checked = true;
    494              break;
    495            }//switch
    496          
    497            FvmenuDis->Str1Label->Caption = nameUpr;
    498            FvmenuDis->Str2Label->Caption = locTxt;
    499            FvmenuDis->Str3Label->Caption = "";
    500            FvmenuDis->Str4Label->Caption = "";
    501            */
    502          }//UpravlRedactorMTZ(char *nameUpr)
    503          
    504          short  KadrMenuFormat_upr_compMTZ1(void *pstr)
    505          {
    506            WorkControl *workCntr = (WorkControl *)pstr;
    507          //формирователь кадра
    508            short chooseBit = 2;//к-во бит в choose
    509            RESET_COUNTER;//сброс счетчиков
    510            for(int i=0;; i++)
    511            {
    512          //критерий терминатора
    513              char *nameUpr = (char *)sub_menu_upr_compMTZ1[i+1+SUBDATA].Line1;
    514              if(nameUpr==NULL) break;
    515          
    516              COMPARE_COUNTER
    517              {
    518                strcpy((char *)workCntr->twoString, nameUpr);
    519          
    520                if(i<(chooseBit-1))
    521                  UpravlChooserMTZInKadr(nameUpr, i, workCntr);
    522                else
    523                  //отобразить уставку управления в кадре
    524                  strcpy((char *)workCntr->twoString + sizeof(WorkVariantChar)/2,
    525                  selectorUprStrMTZ1(i+(chooseBit-1), getCurrentMngUSTAVKI()));
    526          
    527                return 1;//сравнить счетчики кадров
    528              }
    529            }//for
    530          
    531            return 1;
    532          }//KadrMenuFormat_upr_compMTZ1(WorkControl *workCntr)
    533          
    534          char *selectorUprStrMTZ1(short iBit, UNS_32 ustUpr)
    535          {
    536            switch(iBit)
    537            {
    538          
    539            default:;
    540            }//switch
    541              if(NumBitCheckWord(iBit, &ustUpr)) return bitStringUNI[UNIUPR_WKL];
    542              return bitStringUNI[UNIUPR_OTKL];
    543          }//selectorUprStrMTZ1(short ibit, UNS_32 ustUpr)
    544          
    545          short chooseTxtMTZ(char *locTxt, short ibit, UNS_32 ust)
    546          {
    547          //отобразить уставку выбора-управления в кадре
    548            switch(NumBitCheckWord(ibit, &ust) + NumBitCheckWord(ibit+1, &ust)*2)
    549            {
    550            case 0:
    551              strcpy(locTxt, "Простая");
    552              return 0;
    553            case 1:
    554              strcpy(locTxt, "Направленная");
    555              return 1;
    556            case 2:
    557              strcpy(locTxt, "Пуск по напр");
    558              return 2;
    559            case 3:
    560              strcpy(locTxt, "Choose 3");
    561              return 3;
    562            }//switch
    563            return -1;
    564          }//
    565          
    566          //choose
    567          void UpravlChooserMTZInKadr(char *nameUpr, short ibit, void *pstr)
    568          {
    569            WorkControl *workCntr = (WorkControl *)pstr;
    570          //отобразить уставку выбора-управления в кадре
    571            char locTxt[50];
    572            chooseTxtMTZ(locTxt, ibit, getCurrentMngUSTAVKI());//отобразить уставку выбора-управления в кадре
    573            strcpy((char *)workCntr->twoString + sizeof(WorkVariantChar)/2, locTxt);
    574          }//UpravlViewerInKadr(char *nameUpr, WorkControl *workCntr)
    575          
    576          int initUstMTZ1(char init)
    577          {
    578            //инициал уставок
    579            if (init)
    580            {
    581          //уставка сработки
    582              tmpUSTAVKI[MNGUST_MTZ1]     = 100;
    583              tmpUSTAVKI[MNGUST_MTZ1_V]   = 110;
    584              tmpUSTAVKI[MNGUST_MTZ1_N]   = 120;
    585              tmpUSTAVKI[MNGUST_MTZ1_PN]  = 130;
    586              tmpUSTAVKI[MNGUST_MTZ1_UPN] = 131;
    587          //уставка выдержки
    588              tmpUSTAVKI[MNGVID_MTZ1]    = 15;
    589              tmpUSTAVKI[MNGVID_MTZ1_V]  = 16;
    590              tmpUSTAVKI[MNGVID_MTZ1_N]  = 17;
    591              tmpUSTAVKI[MNGVID_MTZ1_PN] = 18;
    592          //уставка управления
    593              tmpUSTAVKI[MNGUPR_MTZ1] = 0;
    594          
    595            }//if
    596          
    597            IndexUstSPV += SPVUST_MTZ1_TOTAL;//индекс уставок в супервизоре
    598            return MNGUST_MTZ1_TOTAL;//к-во уставок в менеджере уставок
    599          }//initUstMTZ1(short mngUst, char init)
    600          
    601          void  prepareUstMTZ1(short idxC)
    602          {
    603            //подготовка ENA команд для клона idxC
    604            CopyWideENAToENAcmd(PrepareENACmd(idxC, MNGUPR_MTZ1), ENACMD_MTZ1_TOTAL);
    605            //подготовка уставок
    606            int tmpOffsetUSpv = getOffsetSPVUstCnf(idxC);//смещение уставок внутри супервизора
    607          
    608              //уставка SPV сработки
    609              int tmp1 = 
    610              SPV_UST(SPVSRABUST_MTZ1) = codecUstMTZ1(1, MNGUST_MTZ1, getNativUstMngUSTAVKI(idxC, MNGUST_MTZ1));
    611              //уставка SPV возврата
    612              SPV_UST(SPVVOZVUST_MTZ1) = tmp1 - tmp1/20;//5%
    613          
    614              //уставка SPV сработки
    615                  tmp1 = 
    616              SPV_UST(SPVSRABUST_MTZ1_V) = codecUstMTZ1(1, MNGUST_MTZ1_V, getNativUstMngUSTAVKI(idxC, MNGUST_MTZ1_V));
    617              //уставка SPV возврата
    618              SPV_UST(SPVVOZVUST_MTZ1_V) = tmp1 - tmp1/20;//5%
    619          
    620              //уставка SPV сработки
    621                  tmp1 = 
    622              SPV_UST(SPVSRABUST_MTZ1_N) = codecUstMTZ1(1, MNGUST_MTZ1_N, getNativUstMngUSTAVKI(idxC, MNGUST_MTZ1_N));
    623              //уставка SPV возврата
    624              SPV_UST(SPVVOZVUST_MTZ1_N) = tmp1 - tmp1/20;//5%
    625          
    626              //уставка SPV сработки
    627                  tmp1 =
    628              SPV_UST(SPVSRABUST_MTZ1_PN) = codecUstMTZ1(1, MNGUST_MTZ1_PN, getNativUstMngUSTAVKI(idxC, MNGUST_MTZ1_PN));
    629              //уставка SPV возврата
    630              SPV_UST(SPVVOZVUST_MTZ1_PN) = tmp1 - tmp1/20;//5%
    631          
    632              //уставка SPV сработки DOWN
    633                  tmp1 =
    634              SPV_UST(SPVSRABUST_MTZ1_UPN) = codecUstMTZ1(1, MNGUST_MTZ1_UPN, getNativUstMngUSTAVKI(idxC, MNGUST_MTZ1_UPN));
    635              //уставка SPV возврата
    636              SPV_UST(SPVVOZVUST_MTZ1_UPN) = tmp1 + tmp1/20;//DOWN 5%
    637          
    638            short tmpOffsetT    =
    639              getOffsetTimersCnf(idxC);   //компонент в конфигурации
    640          
    641                    //таймер 1
    642             setTimerPorog(tmpOffsetT+ TIMER1_MTZ1, 
    643                    codecUstMTZ1(1, MNGVID_MTZ1, getNativUstMngUSTAVKI(idxC, MNGVID_MTZ1)));
    644          
    645                    //таймер 2
    646             setTimerPorog(tmpOffsetT+ TIMER2_MTZ1,
    647                    codecUstMTZ1(1, MNGVID_MTZ1_V, getNativUstMngUSTAVKI(idxC, MNGVID_MTZ1_V)));
    648          
    649                    //таймер 3
    650             setTimerPorog(tmpOffsetT+ TIMER3_MTZ1, 
    651                    codecUstMTZ1(1, MNGVID_MTZ1_N, getNativUstMngUSTAVKI(idxC, MNGVID_MTZ1_N)));
    652          
    653                    //таймер 4
    654             setTimerPorog(tmpOffsetT+ TIMER4_MTZ1, 
    655                    codecUstMTZ1(1, MNGVID_MTZ1_PN, getNativUstMngUSTAVKI(idxC, MNGVID_MTZ1_PN)));
    656          
    657                   //таймер 5 BO
    658             setTimerPorog(tmpOffsetT+ TIMER_BO_MTZ1, 10);
    659          
    660          }//prepareUstMTZ1(short idxC)
    661          
    662          int initIOCmd_MTZ1()
    663          {
    664            //инициал IO команд
    665            offsetIOCmdMTZ1 = IndexIO;//смещение для IO MTZ1
    666            return commonInitIOCmd(IOCMD_MTZ1_TOTAL);
    667          }
    668          
    669          int initTLCmd_MTZ1()
    670          {
    671            //инициал TL команд
    672            return commonInitTLCmd(TLCMD_MTZ1_TOTAL);
    673          }//initTLCmd_MTZ1()
    674          
    675          int initENACmd_MTZ1()
    676          {
    677            //инициал ENA команд
    678            return commonInitENACmd(ENACMD_MTZ1_TOTAL);
    679          }//initENACmd_MTZ1()
    680          
    681          void initTimersMTZ1(short idxC)
    682          {
    683            //запрос и инициал таймеров
    684            commonInitTimers(TIMERS_MTZ1_TOTAL);//должен быть первым!
    685          }//initTimersMTZ1()
    686          
    687          int codecUstMTZ1(char codec, short offset, int ust)
    688          //codec=0-кодировать
    689          //codec=1-раскодировать
    690          {
    691            //кодировать-раскодировать уставку
    692          int grzHI = 0;//верх граница
    693          int grzLOW= 0;//низ граница
    694          int step  = 1;//шаг
    695            switch(offset)
    696            {
    697             //уставки
    698             case MNGUST_MTZ1:
    699             case MNGUST_MTZ1_V:
    700             case MNGUST_MTZ1_N:
    701             case MNGUST_MTZ1_PN:
    702             case MNGUST_MTZ1_UPN:
    703                 grzHI = 1000000;//верх граница
    704                 grzLOW= 0;//низ граница
    705                 step  = 1;//шаг
    706             break;
    707          
    708            //выдержки
    709          //   case MNGUST_BOBV_MTZ1://уставка БО БВ
    710             case MNGVID_MTZ1:
    711             case MNGVID_MTZ1_V:
    712             case MNGVID_MTZ1_N:
    713             case MNGVID_MTZ1_PN:
    714                 grzHI = 2000000;//верх граница
    715                 grzLOW= 0;//низ граница
    716                 step  = 1;//шаг
    717             break;
    718          
    719             default:return ust;//уставка управления
    720            }//switch
    721          
    722          //  if((MNGUPR_MTZ1)==offset)
    723          //    return ust;//уставка управления
    724            if(codec) return ust*step;
    725          //раскодировать уставку
    726            if(ust<grzLOW) return ERROR_UST;//-ust;
    727            if(ust>grzHI)  return ERROR_UST;//-ust;
    728            return ust/step;
    729          }//codecUstMTZ1(char *buf, short offset, int ust)
    730          
    731          int isDISactiv_MTZ1(int idxC)
    732          {
    733           //таймерная активность Регистратора ДИС
    734              int tmpOffsetT    =
    735                          cnfCOMPONENT[idxC].offsetTimers;   //таймера компонента в конфигурации
    736              for(int i=0; i<TIMERS_MTZ1_TOTAL; i++)
    737              {
    738                if(getTimerBUSY(tmpOffsetT+i) |
    739                   getTimerFINISH(tmpOffsetT+i)
    740                   )
    741                   return 1;//есть активность
    742              }//
    743            return 0;//нет активности
    744          }//isDISactiv_MTZ1(int idxC)
    745          
    746          void SaveUprMTZ(short ibit)
    747          {
    748            /*
    749          //персональное сохр upr для MTZ
    750            UNS_32 tmpU = getCurrentMngUSTAVKI();//текущая уст упр
    751              //Управление МТЗ
    752              if(ibit<1)
    753              {
    754                if(FvmenuDis->Choose1MTZButton->Checked)
    755                {
    756                  NumBitClearingWord(ibit,   &tmpU);//сброс бита по его индексу
    757                  NumBitClearingWord(ibit+1, &tmpU);//сброс бита по его индексу
    758                }//if
    759                if(FvmenuDis->Choose2MTZButton->Checked)
    760                {
    761                  NumBitSettingWord(ibit,    &tmpU);//сброс бита по его индексу
    762                  NumBitClearingWord(ibit+1, &tmpU);//сброс бита по его индексу
    763                }//if
    764                if(FvmenuDis->Choose3MTZButton->Checked)
    765                {
    766                  NumBitClearingWord(ibit, &tmpU);//сброс бита по его индексу
    767                  NumBitSettingWord(ibit+1,    &tmpU);//сброс бита по его индексу
    768                }//if
    769                if(FvmenuDis->Choose4MTZButton->Checked)
    770                {
    771                  NumBitSettingWord(ibit, &tmpU);//сброс бита по его индексу
    772                  NumBitSettingWord(ibit+1,    &tmpU);//сброс бита по его индексу
    773                }//if
    774              }//
    775              else
    776              {
    777                if(FvmenuDis->UprCheck->Checked)
    778                {
    779                  NumBitSettingWord(ibit+1, &tmpU);//установка бита по его индексу
    780                }//if(FvmenuDis->UprCheck->Checked)
    781                else
    782                {
    783                  NumBitClearingWord(ibit+1, &tmpU);//сброс бита по его индексу
    784                }
    785              }
    786            setCurrentMngUSTAVKI(tmpU);//новая уст упр
    787            */
    788          }//SaveUprMTZ()
    789          
    790          char copyMTZ1ToRepozitar(char packet)
    791          {
    792            memset(&rpzcomponent_obj, 0, sizeof(COMPONENT_OBJ));//стереть старое
    793          //копировать компонент в репозитарий
    794            rpzcomponent_obj.componentEnable = 1;//разрешение компонента
    795            rpzcomponent_obj.kodC   = KOD_COMPONENT;         //код компонента
    796            rpzcomponent_obj.packet = 0;    //номер пакетного компонента
    797            rpzcomponent_obj.permanent = 0; //перманентный компонент
    798          
    799            strcpy(rpzcomponent_obj.nameComponent,  MTZ1_TITLE);       //имя компонента
    800            rpzcomponent_obj.sub_menu_component =  sub_menu_comp_MTZ1;//меню компонента
    801          
    802            rpzcomponent_obj.cntClon     = CNT_STUPEN_MTZ;   //max к-во клонов
    803            rpzcomponent_obj.numClon     = 1;//номер клона
    804            rpzcomponent_obj.workToSignal = 0; //Работа на сигнал
    805          
    806            rpzcomponent_obj.initUstMng     = initUstMTZ1;    //инициал уставок
    807            rpzcomponent_obj.prepareUstSpv  = prepareUstMTZ1;//подготовка уставок
    808            rpzcomponent_obj.initIOCmd      = initIOCmd_MTZ1;      //инициал IO команд
    809            rpzcomponent_obj.initTLCmd      = initTLCmd_MTZ1;      //инициал TL команд
    810            rpzcomponent_obj.initENACmd     = initENACmd_MTZ1;     //инициал ENA команд
    811            rpzcomponent_obj.bo_bvCmd       = NULL; //настройка БО БВ команд
    812            rpzcomponent_obj.isDISactiv     = isDISactiv_MTZ1; //активность Регистратора ДИС
    813            rpzcomponent_obj.setBOBVtimer   = NULL; //инициал таймеров БО БВ
    814          
    815            rpzcomponent_obj.nameStatusIO = ionsMTZ1;          //имена и статус команд IO
    816            rpzcomponent_obj.initTimers   = initTimersMTZ1;    //запрос и инициал таймеров
    817            rpzcomponent_obj.logic        = logicMTZ1;         //логика компонента
    818          
    819            rpzcomponent_obj.codecUst = codecUstMTZ1;   //кодировать-раскодировать уставку
    820          
    821            return 0;//не пакетная регистрация
    822          }//
    823          
    824          #endif // _HIDE_COMPONENT
    825          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   EditUprMTZ1
         8   -> UpravlRedactor
         8   -> UpravlRedactorChooseMTZ
       8   EditUstMTZ1
         8   -> SystemEditUst
       8   EditVidMTZ1
         8   -> SystemEditUst
      24   KadrMenuFormat_upr_compMTZ1
        24   -> UpravlChooserMTZInKadr
        24   -> getCurrentMngUSTAVKI
        24   -> selectorUprStrMTZ1
        24   -> strcpy
      72   KadrMenuFormat_ustvidMTZ
        72   -> getUstOffsetMngUSTAVKI
        72   -> sprintf
        72   -> strcpy
       8   PereinitUprListCompMTZ1
         8   -> ListPStr
         8   -> TxtStreamInit
         8   -> TxtStreamSetEnd
         8   -> ViewDiskrMenuList
       8   PereinitUstListCompMTZ1
         8   -> ListPStr
         8   -> TxtStreamInit
         8   -> TxtStreamSetEnd
         8   -> ViewDiskrMenuList
       8   PereinitVidListCompMTZ1
         8   -> ListPStr
         8   -> TxtStreamInit
         8   -> TxtStreamSetEnd
         8   -> ViewDiskrMenuList
       0   SaveUprMTZ
       8   UprCompMTZ1
         8   -> PassWord
         8   -> PrepareEditMenu
         8   -> SelectorCRRLIGHTLINE
       8   UprListCompMTZ1
         8   -> InitFHOME
         8   -> LanderUpDown
         8   -> SelectorFHOME
         8   -> SelectorMNGBAZA
         8   -> SelectorSUBMENU
         8   -> SelectorTEXTCONTROL
      72   UpravlChooserMTZInKadr
        72   -> chooseTxtMTZ
        72   -> getCurrentMngUSTAVKI
        72   -> strcpy
       0   UpravlRedactorChooseMTZ
       8   UstCompMTZ1
         8   -> PassWord
         8   -> PrepareEditMenu
         8   -> SelectorCRRLIGHTLINE
       8   UstListCompMTZ1
         8   -> InitFHOME
         8   -> LanderUpDown
         8   -> SelectorFHOME
         8   -> SelectorMNGBAZA
         8   -> SelectorSUBMENU
         8   -> SelectorTEXTCONTROL
       8   VidCompMTZ1
         8   -> EditVidMTZ1
         8   -> PrepareEditMenu
         8   -> SelectorCRRLIGHTLINE
       8   VidListCompMTZ1
         8   -> InitFHOME
         8   -> LanderUpDown
         8   -> SelectorFHOME
         8   -> SelectorMNGBAZA
         8   -> SelectorSUBMENU
         8   -> SelectorTEXTCONTROL
      24   chooseTxtMTZ
        24   -> NumBitCheckWord
        24   -> strcpy
      20   codecUstMTZ1
        20 __aeabi_idiv
      24   copyMTZ1ToRepozitar
        24   -> __aeabi_memset
        24   -> strcpy
       8   initENACmd_MTZ1
         8   -> commonInitENACmd
       8   initIOCmd_MTZ1
         8   -> commonInitIOCmd
       8   initTLCmd_MTZ1
         8   -> commonInitTLCmd
       8   initTimersMTZ1
         8   -> commonInitTimers
       0   initUstMTZ1
      24   isDISactiv_MTZ1
        24   -> getTimerBUSY
        24   -> getTimerFINISH
      24   prepareUstMTZ1
        24   -> CopyWideENAToENAcmd
        24   -> PrepareENACmd
        24   -> codecUstMTZ1
        24   -> getNativUstMngUSTAVKI
        24   -> getOffsetSPVUstCnf
        24   -> getOffsetTimersCnf
        24   -> setTimerPorog
        24 __aeabi_idiv
      16   selectorUprStrMTZ1
        16   -> NumBitCheckWord


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable21
       4  ??DataTable21_1
       4  ??DataTable21_10
       4  ??DataTable21_11
       4  ??DataTable21_12
       4  ??DataTable21_13
       4  ??DataTable21_14
       4  ??DataTable21_15
       4  ??DataTable21_16
       4  ??DataTable21_17
       4  ??DataTable21_18
       4  ??DataTable21_19
       4  ??DataTable21_2
       4  ??DataTable21_20
       4  ??DataTable21_21
       4  ??DataTable21_22
       4  ??DataTable21_23
       4  ??DataTable21_24
       4  ??DataTable21_25
       4  ??DataTable21_3
       4  ??DataTable21_4
       4  ??DataTable21_5
       4  ??DataTable21_6
       4  ??DataTable21_7
       4  ??DataTable21_8
       4  ??DataTable21_9
      16  ?_0
      16  ?_1
      16  ?_10
      12  ?_11
      16  ?_12
      16  ?_13
      12  ?_14
      20  ?_15
      16  ?_16
      24  ?_17
      20  ?_18
      20  ?_19
      20  ?_2
      12  ?_20
      12  ?_21
      12  ?_22
      12  ?_23
       8  ?_24
       8  ?_25
      16  ?_26
      16  ?_27
      12  ?_28
      20  ?_3
      16  ?_4
      12  ?_5
      16  ?_6
      16  ?_7
      16  ?_8
      16  ?_9
     100  EditUprMTZ1
      16  EditUstMTZ1
      16  EditVidMTZ1
     220  KadrMenuFormat_upr_compMTZ1
     188  KadrMenuFormat_ustvidMTZ
       8  MTZ1_TITLE
      68  PereinitUprListCompMTZ1
      68  PereinitUstListCompMTZ1
      68  PereinitVidListCompMTZ1
       4  SaveUprMTZ
      28  UprCompMTZ1
      52  UprListCompMTZ1
      72  UpravlChooserMTZInKadr
       4  UpravlRedactorChooseMTZ
      28  UstCompMTZ1
      52  UstListCompMTZ1
      24  VidCompMTZ1
      52  VidListCompMTZ1
     176  chooseTxtMTZ
     204  codecUstMTZ1
     296  copyMTZ1ToRepozitar
      16  initENACmd_MTZ1
      32  initIOCmd_MTZ1
      16  initTLCmd_MTZ1
      20  initTimersMTZ1
     168  initUstMTZ1
      64  ionsMTZ1
      92  isDISactiv_MTZ1
       4  offsetIOCmdMTZ1
     784  prepareUstMTZ1
      60  selectorUprStrMTZ1
      96  sub_menu_comp_MTZ1
      84  sub_menu_upr_compMTZ1
      96  sub_menu_ust_compMTZ1
      84  sub_menu_vid_compMTZ1

 
     4 bytes in section .bss
   432 bytes in section .data
   444 bytes in section .rodata
 3 028 bytes in section .text
 
 3 028 bytes of CODE  memory
   444 bytes of CONST memory
   436 bytes of DATA  memory

Errors: none
Warnings: none
