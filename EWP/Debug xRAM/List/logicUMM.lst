###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        15/Oct/2015  17:17:35
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  arm
#    Endian       =  little
#    Source file  =  
#        D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\component\logicUMM.c
#    Command line =  
#        "D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\component\logicUMM.c" -lcN
#        "D:\Program Files\IAR Systems\MYWORK\HR1_0100_00_I720_new2\EWP\Debug
#        xRAM\List\" -o "D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\EWP\Debug xRAM\Obj\" --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=ARM926EJ-S -e
#        --fpu=VFP9-S --dlib_config "D:\Program Files\IAR Systems\Embedded
#        Workbench 7.2\arm\INC\c\DLib_Config_Normal.h" -I "D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\NXP\" -I "D:\Program
#        Files\IAR Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\LIB\include\" -I
#        "D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\inc\" -I "D:\Program
#        Files\IAR Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\Igor\" -I
#        "D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\mal\" -I "D:\Program
#        Files\IAR Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\component\" -I
#        "D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\psupervisor\" -I
#        "D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\virtualMenu\" -I
#        "D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\callbackElement\" -I
#        "D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\logictimers\" -I
#        "D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\zonaVRT\" -I "D:\Program
#        Files\IAR Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\" --interwork
#        --cpu_mode arm -On --use_c++_inline
#    List file    =  
#        D:\Program Files\IAR Systems\MYWORK\HR1_0100_00_I720_new2\EWP\Debug
#        xRAM\List\logicUMM.lst
#    Object file  =  
#        D:\Program Files\IAR Systems\MYWORK\HR1_0100_00_I720_new2\EWP\Debug
#        xRAM\Obj\logicUMM.o
#
###############################################################################

D:\Program Files\IAR Systems\MYWORK\HR1_0100_00_I720_new2\component\logicUMM.c
      1          
      2          #include "bazisdef.h"
      3          #include "component\componentdef.h"
      4          #include "psuperVisor\psvisor_helpdef.h"
      5          
      6          #include "logictimers\logictimersmac.h"
      7          
      8          #include "logictimers\logictimersfnc.h"
      9          
     10          #include "..\bazis.h"
     11          
     12          #include "toSpeedOptim.h"
     13          
     14          #define _HIDE_COMPONENT
     15          #include "UMMComponent.c"
     16          #include "PRM1Component.c"
     17          
     18          extern int GlobalPO1;
     19          extern int GlobalPO2;
     20          extern int GlobalPO3;
     21          extern int GlobalPO4;
     22          extern int GlobalLevelI_ABC[];
     23          extern int GlobalLevelUL_ABC[];
     24          extern int GlobalLevelUF_ABC[];
     25          
     26          extern COMPONENT_OBJ  cnfCOMPONENT[];//конфигурация
     27          extern int  logMassTimer[];
     28          extern int  ENAcmd[];
     29          extern int  spvUSTAVKI[];//текущие уставки супервизора
     30          extern int   WideCmdRTBuffer[];
     31          extern int   tempLog[];
     32          extern int offsetSPVCmdPRM1;//смещение для SPV PRM1
     33          
     34          void  logicUMM(int idxC)
     35          {
     36          //логика компонента
     37              int tmpOffsetT    =
     38                          cnfCOMPONENT[idxC].offsetTimers;   //таймера компонента в конфигурации
     39              int tmpOffsetIO   =
     40                          cnfCOMPONENT[idxC].offsetIOCmd;    //IO команды
     41              int tmpOffsetENA  =
     42                          cnfCOMPONENT[idxC].offsetENACmd;    //ENA команды
     43              int tmpOffsetUSpv =
     44                          cnfCOMPONENT[idxC].offsetUstSpv;    //уставки SPV
     45          
     46              //int tmpOffsetTL   =
     47                //          cnfCOMPONENT[idxC].offsetTLCmd;    //TL команды
     48          
     49          //напряж UMAX1 FAZ
     50            detectorLevelUP3F(GlobalLevelUF_ABC,
     51                                               tmpOffsetUSpv+SPVSRABUST_UMAX1_UMM,
     52                                               tmpOffsetUSpv+SPVVOZVUST_UMAX1_UMM,
     53                                               tmpOffsetUSpv+SPV_OUTAF_UMAX1);
     54          //напряж UMAX2 FAZ
     55            detectorLevelUP3F(GlobalLevelUF_ABC,
     56                                               tmpOffsetUSpv+SPVSRABUST_UMAX2_UMM,
     57                                               tmpOffsetUSpv+SPVVOZVUST_UMAX2_UMM,
     58                                               tmpOffsetUSpv+SPV_OUTAF_UMAX2);
     59          
     60          //напряж UMAX1 LIN
     61            detectorLevelUP3F(GlobalLevelUL_ABC,
     62                                               tmpOffsetUSpv+SPVSRABUST_UMAX1_UMM,
     63                                               tmpOffsetUSpv+SPVVOZVUST_UMAX1_UMM,
     64                                               tmpOffsetUSpv+SPV_OUTAL_UMAX1);
     65          //напряж UMAX2 LIN
     66            detectorLevelUP3F(GlobalLevelUL_ABC,
     67                                               tmpOffsetUSpv+SPVSRABUST_UMAX2_UMM,
     68                                               tmpOffsetUSpv+SPVVOZVUST_UMAX2_UMM,
     69                                               tmpOffsetUSpv+SPV_OUTAL_UMAX2);
     70          
     71          //напряж UMIN1 FAZ
     72            detectorLevelDOWN3F(GlobalLevelUF_ABC,
     73                                               tmpOffsetUSpv+SPVSRABUST_UMIN1_UMM,
     74                                               tmpOffsetUSpv+SPVVOZVUST_UMIN1_UMM,
     75                                               tmpOffsetUSpv+SPV_OUTAF_UMIN1);
     76          //напряж UMIN2 FAZ
     77            detectorLevelDOWN3F(GlobalLevelUF_ABC,
     78                                               tmpOffsetUSpv+SPVSRABUST_UMIN2_UMM,
     79                                               tmpOffsetUSpv+SPVVOZVUST_UMIN2_UMM,
     80                                               tmpOffsetUSpv+SPV_OUTAF_UMIN2);
     81          //напряж UMIN1 LIN
     82            detectorLevelDOWN3F(GlobalLevelUL_ABC,
     83                                               tmpOffsetUSpv+SPVSRABUST_UMIN1_UMM,
     84                                               tmpOffsetUSpv+SPVVOZVUST_UMIN1_UMM,
     85                                               tmpOffsetUSpv+SPV_OUTAL_UMIN1);
     86          //напряж UMIN2 LIN
     87            detectorLevelDOWN3F(GlobalLevelUL_ABC,
     88                                               tmpOffsetUSpv+SPVSRABUST_UMIN2_UMM,
     89                                               tmpOffsetUSpv+SPVVOZVUST_UMIN2_UMM,
     90                                               tmpOffsetUSpv+SPV_OUTAL_UMIN2);
     91          //int tt1 = SPV_UST(SPVSRABUST_IBLOK1_UMM);
     92          //int tt2 = SPV_UST(SPVVOZVUST_IBLOK1_UMM);
     93          //ток блок UMIN1
     94            detectorLevelUP3F(GlobalLevelI_ABC,
     95                                               tmpOffsetUSpv+SPVSRABUST_IBLOK1_UMM,
     96                                               tmpOffsetUSpv+SPVVOZVUST_IBLOK1_UMM,
     97                                               tmpOffsetUSpv+SPV_OUTIA_UMIN1);
     98          //ток блок UMIN2
     99            detectorLevelUP3F(GlobalLevelI_ABC,
    100                                               tmpOffsetUSpv+SPVSRABUST_IBLOK2_UMM,
    101                                               tmpOffsetUSpv+SPVVOZVUST_IBLOK2_UMM,
    102                                               tmpOffsetUSpv+SPV_OUTIA_UMIN2);
    103          
    104           int LocalPO_UMAX1_LIN_ILI = (  
    105                                        SPV_UST(SPV_OUTAL_UMAX1) |
    106                                        SPV_UST(SPV_OUTBL_UMAX1) |
    107                                        SPV_UST(SPV_OUTCL_UMAX1) 
    108                                        );
    109           int LocalPO_UMAX1_LIN_I = (  
    110                                        SPV_UST(SPV_OUTAL_UMAX1) &
    111                                        SPV_UST(SPV_OUTBL_UMAX1) &
    112                                        SPV_UST(SPV_OUTCL_UMAX1) 
    113                                        );
    114           int LocalPO_UMAX1_FAZ_ILI = (  
    115                                        SPV_UST(SPV_OUTAF_UMAX1) |
    116                                        SPV_UST(SPV_OUTBF_UMAX1) |
    117                                        SPV_UST(SPV_OUTCF_UMAX1) 
    118                                        );
    119           int LocalPO_UMAX1_FAZ_I = (  
    120                                        SPV_UST(SPV_OUTAF_UMAX1) &
    121                                        SPV_UST(SPV_OUTBF_UMAX1) &
    122                                        SPV_UST(SPV_OUTCF_UMAX1) 
    123                                        );
    124          
    125           int LocalPO_UMAX2_LIN_ILI = (  
    126                                        SPV_UST(SPV_OUTAL_UMAX2) |
    127                                        SPV_UST(SPV_OUTBL_UMAX2) |
    128                                        SPV_UST(SPV_OUTCL_UMAX2) 
    129                                        );
    130           int LocalPO_UMAX2_LIN_I = (  
    131                                        SPV_UST(SPV_OUTAL_UMAX2) &
    132                                        SPV_UST(SPV_OUTBL_UMAX2) &
    133                                        SPV_UST(SPV_OUTCL_UMAX2) 
    134                                        );
    135           int LocalPO_UMAX2_FAZ_ILI = (  
    136                                        SPV_UST(SPV_OUTAF_UMAX2) |
    137                                        SPV_UST(SPV_OUTBF_UMAX2) |
    138                                        SPV_UST(SPV_OUTCF_UMAX2) 
    139                                        );
    140           int LocalPO_UMAX2_FAZ_I = (  
    141                                        SPV_UST(SPV_OUTAF_UMAX2) &
    142                                        SPV_UST(SPV_OUTBF_UMAX2) &
    143                                        SPV_UST(SPV_OUTCF_UMAX2) 
    144                                        );
    145          
    146          		// UMAX1 И ИЛИ
    147           int tmp1 =     ENA_LOGIC(ENA_UMAX1_2);
    148           int LocalPO_UMAX1_LIN = LocalPO_UMAX1_LIN_I;
    149           if(tmp1)
    150              LocalPO_UMAX1_LIN = LocalPO_UMAX1_LIN_ILI;
    151          		// UMAX2 И ИЛИ
    152           int tmp2 =     ENA_LOGIC(ENA_UMAX2_2);
    153           int LocalPO_UMAX2_LIN = LocalPO_UMAX2_LIN_I;
    154           if(tmp2)
    155              LocalPO_UMAX2_LIN = LocalPO_UMAX2_LIN_ILI;
    156          
    157           //tmp1 =     ENA_LOGIC(ENA_UMAX1_2);
    158           int LocalPO_UMAX1_FAZ = LocalPO_UMAX1_FAZ_I;
    159           if(tmp1)
    160              LocalPO_UMAX1_FAZ = LocalPO_UMAX1_FAZ_ILI;
    161          		// UMAX2 И ИЛИ
    162          // tmp1 =     ENA_LOGIC(ENA_UMAX2_2);
    163           int LocalPO_UMAX2_FAZ = LocalPO_UMAX2_FAZ_I;
    164           if(tmp2)
    165              LocalPO_UMAX2_FAZ = LocalPO_UMAX2_FAZ_ILI;
    166          
    167          		// UMAX1 ФАЗ ЛИН
    168           tmp1 =     ENA_LOGIC(ENA_UMAX1_3);
    169           int LocalPO_UMAX1 = LocalPO_UMAX1_FAZ;
    170           if(tmp1)
    171               LocalPO_UMAX1 = LocalPO_UMAX1_LIN;
    172          		// UMAX2 ФАЗ ЛИН
    173           tmp2 =     ENA_LOGIC(ENA_UMAX2_3);
    174           int LocalPO_UMAX2 = LocalPO_UMAX2_FAZ;
    175           if(tmp2)
    176               LocalPO_UMAX2 = LocalPO_UMAX2_LIN;
    177          
    178          		// UMIN1 ФАЗ ЛИН 
    179           tmp1 =     ENA_LOGIC(ENA_UMIN1_3);
    180           int locUMIN1_UAB_OR_UA = SPV_UST(SPV_OUTAF_UMIN1);
    181           int locUMIN1_UBC_OR_UB = SPV_UST(SPV_OUTBF_UMIN1);
    182           int locUMIN1_UCA_OR_UC = SPV_UST(SPV_OUTCF_UMIN1);
    183           if(tmp1){
    184               locUMIN1_UAB_OR_UA = SPV_UST(SPV_OUTAL_UMIN1);
    185               locUMIN1_UBC_OR_UB = SPV_UST(SPV_OUTBL_UMIN1);
    186               locUMIN1_UCA_OR_UC = SPV_UST(SPV_OUTCL_UMIN1);
    187                   }//if
    188          
    189          		// UMIN2 ФАЗ ЛИН 
    190           tmp1 =     ENA_LOGIC(ENA_UMIN2_3);
    191           int locUMIN2_UAB_OR_UA = SPV_UST(SPV_OUTAF_UMIN2);
    192           int locUMIN2_UBC_OR_UB = SPV_UST(SPV_OUTBF_UMIN2);
    193           int locUMIN2_UCA_OR_UC = SPV_UST(SPV_OUTCF_UMIN2);
    194           if(tmp1){
    195               locUMIN2_UAB_OR_UA = SPV_UST(SPV_OUTAL_UMIN2);
    196               locUMIN2_UBC_OR_UB = SPV_UST(SPV_OUTBL_UMIN2);
    197               locUMIN2_UCA_OR_UC = SPV_UST(SPV_OUTCL_UMIN2);
    198                   }//if
    199          
    200           int LocalUBLOK_LIN_A =
    201                    SPV_USTOUT(offsetSPVCmdPRM1+SPV_OUTAL_U025) |// &
    202                    SPV_USTOUT(offsetSPVCmdPRM1+SPV_OUTAF_U025) |//^1) &
    203                    SPV_USTOUT(offsetSPVCmdPRM1+SPV_OUTBF_U025) ;//)^1;//^1);
    204           int LocalUBLOK_LIN_B =
    205                    SPV_USTOUT(offsetSPVCmdPRM1+SPV_OUTBL_U025)  |//&
    206                    SPV_USTOUT(offsetSPVCmdPRM1+SPV_OUTCF_U025) |//^1) &
    207                    SPV_USTOUT(offsetSPVCmdPRM1+SPV_OUTBF_U025);//)^1;//^1);
    208           int LocalUBLOK_LIN_C =
    209                    SPV_USTOUT(offsetSPVCmdPRM1+SPV_OUTCL_U025) |//&
    210                    SPV_USTOUT(offsetSPVCmdPRM1+SPV_OUTCF_U025) |//^1) &
    211                    SPV_USTOUT(offsetSPVCmdPRM1+SPV_OUTAF_U025);//)^1;//^1);
    212          
    213           int LocalUBLOK_LIN =
    214                    LocalUBLOK_LIN_A |
    215                    LocalUBLOK_LIN_B |
    216                    LocalUBLOK_LIN_C;
    217          
    218           int LocalUBLOK_FAZ_A =
    219                    SPV_USTOUT(offsetSPVCmdPRM1+SPV_OUTAF_U025);//^1;
    220           int LocalUBLOK_FAZ_B =
    221                    SPV_USTOUT(offsetSPVCmdPRM1+SPV_OUTBF_U025);//^1;
    222           int LocalUBLOK_FAZ_C =
    223                    SPV_USTOUT(offsetSPVCmdPRM1+SPV_OUTCF_U025);//^1;
    224          
    225           int LocalUBLOK_FAZ =
    226                    LocalUBLOK_FAZ_A |
    227                    LocalUBLOK_FAZ_B |
    228                    LocalUBLOK_FAZ_C;
    229          
    230          		// UMIN1 ФАЗ ЛИН 
    231           tmp1 =     ENA_LOGIC(ENA_UMIN1_3);
    232           int LocalUMIN1_UBLOK = LocalUBLOK_FAZ;
    233           if(tmp1)
    234               LocalUMIN1_UBLOK = LocalUBLOK_LIN;
    235          
    236          		// UMIN2 ФАЗ ЛИН 
    237           tmp1 =     ENA_LOGIC(ENA_UMIN2_3);
    238           int LocalUMIN2_UBLOK = LocalUBLOK_FAZ;
    239           if(tmp1)
    240               LocalUMIN2_UBLOK = LocalUBLOK_LIN;
    241          
    242          //-------------UMIN1-----------
    243          
    244          //L1
    245            tmp1 =
    246               locUMIN1_UAB_OR_UA &
    247               locUMIN1_UBC_OR_UB &
    248               locUMIN1_UCA_OR_UC &
    249               // UMIN1 LIN И ИЛИ
    250               (ENA_LOGIC(ENA_UMIN1_2)^1);
    251          
    252          //L2
    253            tmp2 =
    254               locUMIN1_UAB_OR_UA |
    255               locUMIN1_UBC_OR_UB |
    256               locUMIN1_UCA_OR_UC;
    257          //L4
    258            int  tmp3 = 
    259                   tmp2 &
    260                   (
    261          	  // UMIN1 LIN И ИЛИ
    262                    ENA_LOGIC(ENA_UMIN1_2)
    263                   );
    264          
    265          //L6
    266            int  tmp4 =
    267                    tmp1 |
    268                    tmp3;
    269          
    270          //L7
    271            tmp1 =
    272                  LocalUMIN1_UBLOK &
    273          	// UMIN1 блок U
    274                  ENA_LOGIC(ENA_UMIN1_5) &
    275          	(
    276          	// UMIN1 блок I UBLOK
    277          	ENA_LOGIC(ENA_UMIN1_4)^1
    278          	);
    279          
    280          //L8
    281            tmp2 =
    282                  (
    283                  SPV_UST(SPV_OUTIA_UMIN1) | SPV_UST(SPV_OUTIB_UMIN1) | SPV_UST(SPV_OUTIC_UMIN1)//)^1;
    284                  ) &
    285          	// UMIN1 блок I UBLOK
    286          	ENA_LOGIC(ENA_UMIN1_4);
    287          //L9
    288           int  LocalPO_UMIN1 = 
    289                  tmp4 &
    290                  (
    291                   tmp1^1
    292                  )&
    293                  (
    294                   tmp2^1
    295                  );
    296          
    297          
    298          //-------------UMIN2-----------
    299          
    300          //L1
    301            tmp1 =
    302               locUMIN2_UAB_OR_UA &
    303               locUMIN2_UBC_OR_UB &
    304               locUMIN2_UCA_OR_UC &
    305               // UMIN2 LIN И ИЛИ
    306               (ENA_LOGIC(ENA_UMIN2_2)^1);
    307          
    308          //L2
    309            tmp2 =
    310               locUMIN2_UAB_OR_UA |
    311               locUMIN2_UBC_OR_UB |
    312               locUMIN2_UCA_OR_UC;
    313          //L4
    314            tmp3 = 
    315                   tmp2 &
    316                   (
    317          	  // UMIN2 LIN И ИЛИ
    318                    ENA_LOGIC(ENA_UMIN2_2)
    319                   );
    320          
    321          //L6
    322            tmp4 =
    323                    tmp1 |
    324                    tmp3;
    325          
    326          //L7
    327            tmp1 =
    328                  LocalUMIN2_UBLOK &
    329          	// UMIN2 блок U
    330                  ENA_LOGIC(ENA_UMIN2_5) &
    331          	(
    332          	// UMIN2 блок I UBLOK
    333          	ENA_LOGIC(ENA_UMIN2_4)^1
    334          	);
    335          
    336          //L8
    337            tmp2 =
    338                  (
    339                  SPV_UST(SPV_OUTIA_UMIN2) | SPV_UST(SPV_OUTIB_UMIN2) | SPV_UST(SPV_OUTIC_UMIN2)//)^1;
    340                  ) &
    341          	// UMIN2 блок I UBLOK
    342          	ENA_LOGIC(ENA_UMIN2_4);
    343          //L9
    344           int  LocalPO_UMIN2 = 
    345                  tmp4 &
    346                  (
    347                   tmp1^1
    348                  )&
    349                  (
    350                   tmp2^1
    351                  );
    352          
    353          
    354          /*
    355           int locIBlok = (SPV_UST(SPV_OUTIA_UMIN1) | SPV_UST(SPV_OUTIB_UMIN1) | SPV_UST(SPV_OUTIC_UMIN1))^1;
    356          
    357           int locIAL1 = SPV_UST(SPV_OUTAL_UMIN1)&locIBlok;//SPV_UST(SPV_OUTIA_UMIN1);
    358           int locIBL1 = SPV_UST(SPV_OUTBL_UMIN1)&locIBlok;//SPV_UST(SPV_OUTIB_UMIN1);
    359           int locICL1 = SPV_UST(SPV_OUTCL_UMIN1)&locIBlok;//SPV_UST(SPV_OUTIC_UMIN1);
    360          
    361           int locIAF1 = SPV_UST(SPV_OUTAF_UMIN1)&locIBlok;//SPV_UST(SPV_OUTIA_UMIN1);
    362           int locIBF1 = SPV_UST(SPV_OUTBF_UMIN1)&locIBlok;//SPV_UST(SPV_OUTIB_UMIN1);
    363           int locICF1 = SPV_UST(SPV_OUTCF_UMIN1)&locIBlok;//SPV_UST(SPV_OUTIC_UMIN1);
    364          
    365           int LocalPO_UMIN1_LIN_ILI_IBLOK = (
    366                                        (locIAL1) |
    367                                        (locIBL1) |
    368                                        (locICL1)
    369                                        );
    370           int LocalPO_UMIN1_LIN_I_IBLOK = (
    371                                        (locIAL1) &
    372                                        (locIBL1) &
    373                                        (locICL1) 
    374                                        );
    375           int LocalPO_UMIN1_FAZ_ILI_IBLOK = (  
    376                                        (locIAF1) |
    377                                        (locIBF1) |
    378                                        (locICF1) 
    379                                        );
    380           int LocalPO_UMIN1_FAZ_I_IBLOK = (  
    381                                        (locIAF1) &
    382                                        (locIBF1) &
    383                                        (locICF1) 
    384                                        );
    385          
    386           locIBlok = (SPV_UST(SPV_OUTIA_UMIN2) | SPV_UST(SPV_OUTIB_UMIN2) | SPV_UST(SPV_OUTIC_UMIN2))^1;
    387          
    388           int locIAL2 = SPV_UST(SPV_OUTAL_UMIN2)&locIBlok;//SPV_UST(SPV_OUTIA_UMIN2);
    389           int locIBL2 = SPV_UST(SPV_OUTBL_UMIN2)&locIBlok;//SPV_UST(SPV_OUTIB_UMIN2);
    390           int locICL2 = SPV_UST(SPV_OUTCL_UMIN2)&locIBlok;//SPV_UST(SPV_OUTIC_UMIN2);
    391          
    392           int locIAF2 = SPV_UST(SPV_OUTAF_UMIN2)&locIBlok;//SPV_UST(SPV_OUTIA_UMIN2);
    393           int locIBF2 = SPV_UST(SPV_OUTBF_UMIN2)&locIBlok;//SPV_UST(SPV_OUTIB_UMIN2);
    394           int locICF2 = SPV_UST(SPV_OUTCF_UMIN2)&locIBlok;//SPV_UST(SPV_OUTIC_UMIN2);
    395          
    396           int LocalPO_UMIN2_LIN_ILI_IBLOK = (  
    397                                        (locIAL2) |
    398                                        (locIBL2) |
    399                                        (locICL2) 
    400                                        );
    401           int LocalPO_UMIN2_LIN_I_IBLOK = (  
    402                                        (locIAL2) &
    403                                        (locIBL2) &
    404                                        (locICL2)
    405                                        );
    406           int LocalPO_UMIN2_FAZ_ILI_IBLOK = (  
    407                                        (locIAF2) |
    408                                        (locIBF2) |
    409                                        (locICF2) 
    410                                        );
    411           int LocalPO_UMIN2_FAZ_I_IBLOK = (  
    412                                        (locIAF2) &
    413                                        (locIBF2) &
    414                                        (locICF2) 
    415                                        );
    416          
    417          
    418           int LocalPO_UMIN1_LIN_ILI = (  
    419                                        SPV_UST(SPV_OUTAL_UMIN1) |
    420                                        SPV_UST(SPV_OUTBL_UMIN1) |
    421                                        SPV_UST(SPV_OUTCL_UMIN1) 
    422                                        );
    423           int LocalPO_UMIN1_LIN_I = (  
    424                                        SPV_UST(SPV_OUTAL_UMIN1) &
    425                                        SPV_UST(SPV_OUTBL_UMIN1) &
    426                                        SPV_UST(SPV_OUTCL_UMIN1)
    427                                        );
    428           int LocalPO_UMIN1_FAZ_ILI = (  
    429                                        SPV_UST(SPV_OUTAF_UMIN1) |
    430                                        SPV_UST(SPV_OUTBF_UMIN1) |
    431                                        SPV_UST(SPV_OUTCF_UMIN1) 
    432                                        );
    433           int LocalPO_UMIN1_FAZ_I = (  
    434                                        SPV_UST(SPV_OUTAF_UMIN1) &
    435                                        SPV_UST(SPV_OUTBF_UMIN1) &
    436                                        SPV_UST(SPV_OUTCF_UMIN1) 
    437                                        );
    438          
    439           int LocalPO_UMIN2_LIN_ILI = (  
    440                                        SPV_UST(SPV_OUTAL_UMIN2) |
    441                                        SPV_UST(SPV_OUTBL_UMIN2) |
    442                                        SPV_UST(SPV_OUTCL_UMIN2)
    443                                        );
    444           int LocalPO_UMIN2_LIN_I = (  
    445                                        SPV_UST(SPV_OUTAL_UMIN2) &
    446                                        SPV_UST(SPV_OUTBL_UMIN2) &
    447                                        SPV_UST(SPV_OUTCL_UMIN2)
    448                                        );
    449           int LocalPO_UMIN2_FAZ_ILI = (
    450                                        SPV_UST(SPV_OUTAF_UMIN2) |
    451                                        SPV_UST(SPV_OUTBF_UMIN2) |
    452                                        SPV_UST(SPV_OUTCF_UMIN2) 
    453                                        );
    454           int LocalPO_UMIN2_FAZ_I = (  
    455                                        SPV_UST(SPV_OUTAF_UMIN2) &
    456                                        SPV_UST(SPV_OUTBF_UMIN2) &
    457                                        SPV_UST(SPV_OUTCF_UMIN2) 
    458                                        );
    459          
    460           int LocalUBLOK_LIN_A =
    461                    (SPV_USTOUT(offsetSPVCmdPRM1+SPV_OUTAL_U025) |// &
    462                    SPV_USTOUT(offsetSPVCmdPRM1+SPV_OUTAF_U025) |//^1) &
    463                    SPV_USTOUT(offsetSPVCmdPRM1+SPV_OUTBF_U025) )^1;//^1);
    464           int LocalUBLOK_LIN_B =
    465                    (SPV_USTOUT(offsetSPVCmdPRM1+SPV_OUTBL_U025)  |//&
    466                    SPV_USTOUT(offsetSPVCmdPRM1+SPV_OUTCF_U025) |//^1) &
    467                    SPV_USTOUT(offsetSPVCmdPRM1+SPV_OUTBF_U025))^1;//^1);
    468           int LocalUBLOK_LIN_C =
    469                    (SPV_USTOUT(offsetSPVCmdPRM1+SPV_OUTCL_U025) |//&
    470                    SPV_USTOUT(offsetSPVCmdPRM1+SPV_OUTCF_U025) |//^1) &
    471                    SPV_USTOUT(offsetSPVCmdPRM1+SPV_OUTAF_U025))^1;//^1);
    472          
    473           int LocalUBLOK_FAZ_A =
    474                    SPV_USTOUT(offsetSPVCmdPRM1+SPV_OUTAF_U025)^1;
    475           int LocalUBLOK_FAZ_B =
    476                    SPV_USTOUT(offsetSPVCmdPRM1+SPV_OUTBF_U025)^1;
    477           int LocalUBLOK_FAZ_C =
    478                    SPV_USTOUT(offsetSPVCmdPRM1+SPV_OUTCF_U025)^1;
    479          
    480           int LocalPO_UMIN1_LIN_ILI_UBLOK = (  
    481                                        (SPV_UST(SPV_OUTAL_UMIN1)&(LocalUBLOK_LIN_A)) |
    482                                        (SPV_UST(SPV_OUTBL_UMIN1)&(LocalUBLOK_LIN_B)) |
    483                                        (SPV_UST(SPV_OUTCL_UMIN1)&(LocalUBLOK_LIN_C)) 
    484                                        );
    485          
    486           int LocalPO_UMIN1_LIN_I_UBLOK = (  
    487                                        (SPV_UST(SPV_OUTAL_UMIN1)&(LocalUBLOK_LIN_A)) &
    488                                        (SPV_UST(SPV_OUTBL_UMIN1)&(LocalUBLOK_LIN_B)) &
    489                                        (SPV_UST(SPV_OUTCL_UMIN1)&(LocalUBLOK_LIN_C))
    490                                        );
    491           int LocalPO_UMIN1_FAZ_ILI_UBLOK = (  
    492                                        (SPV_UST(SPV_OUTAF_UMIN1)&LocalUBLOK_FAZ_A) |//(SPV_USTOUT(offsetSPVCmdPRM1+SPV_OUTAF_U025)^1)) |
    493                                        (SPV_UST(SPV_OUTBF_UMIN1)&LocalUBLOK_FAZ_B) |//(SPV_USTOUT(offsetSPVCmdPRM1+SPV_OUTBF_U025)^1)) |
    494                                        (SPV_UST(SPV_OUTCF_UMIN1)&LocalUBLOK_FAZ_C)//(SPV_USTOUT(offsetSPVCmdPRM1+SPV_OUTCF_U025)^1)) 
    495                                        );
    496           int LocalPO_UMIN1_FAZ_I_UBLOK = (  
    497                                        (SPV_UST(SPV_OUTAF_UMIN1)&LocalUBLOK_FAZ_A) &//(SPV_USTOUT(offsetSPVCmdPRM1+SPV_OUTAF_U025)^1)) &
    498                                        (SPV_UST(SPV_OUTBF_UMIN1)&LocalUBLOK_FAZ_B) &//(SPV_USTOUT(offsetSPVCmdPRM1+SPV_OUTBF_U025)^1)) &
    499                                        (SPV_UST(SPV_OUTCF_UMIN1)&LocalUBLOK_FAZ_C)//(SPV_USTOUT(offsetSPVCmdPRM1+SPV_OUTCF_U025)^1)) 
    500                                        );
    501          
    502           int LocalPO_UMIN2_LIN_ILI_UBLOK = (  
    503                                        (SPV_UST(SPV_OUTAL_UMIN2)&(LocalUBLOK_LIN_A)) |
    504                                        (SPV_UST(SPV_OUTBL_UMIN2)&(LocalUBLOK_LIN_B)) |
    505                                        (SPV_UST(SPV_OUTCL_UMIN2)&(LocalUBLOK_LIN_C))
    506                                        );
    507           int LocalPO_UMIN2_LIN_I_UBLOK = (  
    508                                        (SPV_UST(SPV_OUTAL_UMIN2)&(LocalUBLOK_LIN_A)) &
    509                                        (SPV_UST(SPV_OUTBL_UMIN2)&(LocalUBLOK_LIN_B)) &
    510                                        (SPV_UST(SPV_OUTCL_UMIN2)&(LocalUBLOK_LIN_C))
    511                                        );
    512           int LocalPO_UMIN2_FAZ_ILI_UBLOK = (
    513                                        (SPV_UST(SPV_OUTAF_UMIN2)&LocalUBLOK_FAZ_A) |//(SPV_USTOUT(offsetSPVCmdPRM1+SPV_OUTAF_U025)^1)) |
    514                                        (SPV_UST(SPV_OUTBF_UMIN2)&LocalUBLOK_FAZ_B) |//(SPV_USTOUT(offsetSPVCmdPRM1+SPV_OUTBF_U025)^1)) |
    515                                        (SPV_UST(SPV_OUTCF_UMIN2)&LocalUBLOK_FAZ_C)//(SPV_USTOUT(offsetSPVCmdPRM1+SPV_OUTCF_U025)^1)) 
    516                                        );
    517           int LocalPO_UMIN2_FAZ_I_UBLOK = (  
    518                                        (SPV_UST(SPV_OUTAF_UMIN2)&LocalUBLOK_FAZ_A) &//(SPV_USTOUT(offsetSPVCmdPRM1+SPV_OUTAF_U025)^1)) &
    519                                        (SPV_UST(SPV_OUTBF_UMIN2)&LocalUBLOK_FAZ_B) &//(SPV_USTOUT(offsetSPVCmdPRM1+SPV_OUTBF_U025)^1)) &
    520                                        (SPV_UST(SPV_OUTCF_UMIN2)&LocalUBLOK_FAZ_C)//(SPV_USTOUT(offsetSPVCmdPRM1+SPV_OUTCF_U025)^1)) 
    521                                        );
    522          
    523           int LocalPO_UMIN1_LIN_ILI_IBLOK_UBLOK = (
    524                                        ((locIAL1)&(LocalUBLOK_LIN_A)) |
    525                                        ((locIBL1)&(LocalUBLOK_LIN_B)) |
    526                                        ((locICL1)&(LocalUBLOK_LIN_C))
    527                                        );
    528           int LocalPO_UMIN1_LIN_I_IBLOK_UBLOK = (
    529                                        ((locIAL1)&(LocalUBLOK_LIN_A)) &
    530                                        ((locIBL1)&(LocalUBLOK_LIN_B)) &
    531                                        ((locICL1)&(LocalUBLOK_LIN_C)) 
    532                                        );
    533           int LocalPO_UMIN1_FAZ_ILI_IBLOK_UBLOK = (  
    534                                        ((locIAF1)&LocalUBLOK_FAZ_A) |//(SPV_USTOUT(offsetSPVCmdPRM1+SPV_OUTAF_U025)^1)) |
    535                                        ((locIBF1)&LocalUBLOK_FAZ_B) |//(SPV_USTOUT(offsetSPVCmdPRM1+SPV_OUTBF_U025)^1)) |
    536                                        ((locICF1)&LocalUBLOK_FAZ_C)//(SPV_USTOUT(offsetSPVCmdPRM1+SPV_OUTCF_U025)^1)) 
    537                                        );
    538           int LocalPO_UMIN1_FAZ_I_IBLOK_UBLOK = (  
    539                                        ((locIAF1)&LocalUBLOK_FAZ_A) &//(SPV_USTOUT(offsetSPVCmdPRM1+SPV_OUTAF_U025)^1)) &
    540                                        ((locIBF1)&LocalUBLOK_FAZ_B) &//(SPV_USTOUT(offsetSPVCmdPRM1+SPV_OUTBF_U025)^1)) &
    541                                        ((locICF1)&LocalUBLOK_FAZ_C) //(SPV_USTOUT(offsetSPVCmdPRM1+SPV_OUTCF_U025)^1)) 
    542                                        );
    543          
    544           int LocalPO_UMIN2_LIN_ILI_IBLOK_UBLOK = (
    545                                        ((locIAL2)&(LocalUBLOK_LIN_A)) |
    546                                        ((locIBL2)&(LocalUBLOK_LIN_B)) |
    547                                        ((locICL2)&(LocalUBLOK_LIN_C))
    548                                        );
    549           int LocalPO_UMIN2_LIN_I_IBLOK_UBLOK = (
    550                                        ((locIAL2)&(LocalUBLOK_LIN_A)) &
    551                                        ((locIBL2)&(LocalUBLOK_LIN_B)) &
    552                                        ((locICL2)&(LocalUBLOK_LIN_C)) 
    553                                        );
    554           int LocalPO_UMIN2_FAZ_ILI_IBLOK_UBLOK = (  
    555                                        ((locIAF2)&LocalUBLOK_FAZ_A) |//(SPV_USTOUT(offsetSPVCmdPRM1+SPV_OUTAF_U025)^1)) |
    556                                        ((locIBF2)&LocalUBLOK_FAZ_A) |//(SPV_USTOUT(offsetSPVCmdPRM1+SPV_OUTBF_U025)^1)) |
    557                                        ((locICF2)&LocalUBLOK_FAZ_A)//(SPV_USTOUT(offsetSPVCmdPRM1+SPV_OUTCF_U025)^1)) 
    558                                        );
    559           int LocalPO_UMIN2_FAZ_I_IBLOK_UBLOK = (  
    560                                        ((locIAF2)&LocalUBLOK_FAZ_A) &//(SPV_USTOUT(offsetSPVCmdPRM1+SPV_OUTAF_U025)^1)) &
    561                                        ((locIBF2)&LocalUBLOK_FAZ_B) &//(SPV_USTOUT(offsetSPVCmdPRM1+SPV_OUTBF_U025)^1)) &
    562                                        ((locICF2)&LocalUBLOK_FAZ_C) //(SPV_USTOUT(offsetSPVCmdPRM1+SPV_OUTCF_U025)^1)) 
    563                                        );
    564          
    565          //-------------UMIN1-----------
    566          		// UMIN1 LIN И ИЛИ
    567              tmp1 =     ENA_LOGIC(ENA_UMIN1_2);
    568           int LocalPO_UMIN1_LIN = LocalPO_UMIN1_LIN_I;
    569           if(tmp1)
    570              LocalPO_UMIN1_LIN = LocalPO_UMIN1_LIN_ILI;
    571          
    572          		// UMIN1 FAZ И ИЛИ
    573              tmp1 =     ENA_LOGIC(ENA_UMIN1_2);
    574           int LocalPO_UMIN1_FAZ = LocalPO_UMIN1_FAZ_I;
    575           if(tmp1)
    576              LocalPO_UMIN1_FAZ = LocalPO_UMIN1_FAZ_ILI;
    577          
    578          		// UMIN1 ФАЗ ЛИН
    579           tmp1 =     ENA_LOGIC(ENA_UMIN1_3);
    580           int LocalPO_UMIN1_LOC = LocalPO_UMIN1_FAZ;
    581           if(tmp1)
    582               LocalPO_UMIN1_LOC = LocalPO_UMIN1_LIN;
    583           
    584          //IBLOK
    585          		// UMIN1 LIN IBLOK И ИЛИ
    586              tmp1 =     ENA_LOGIC(ENA_UMIN1_2);
    587           int LocalPO_UMIN1_LIN_IBLOK = LocalPO_UMIN1_LIN_I_IBLOK;
    588           if(tmp1)
    589               LocalPO_UMIN1_LIN_IBLOK = LocalPO_UMIN1_LIN_ILI_IBLOK;
    590          
    591          		// UMIN1 FAZ IBLOK И ИЛИ
    592              tmp1 =     ENA_LOGIC(ENA_UMIN1_2);
    593           int LocalPO_UMIN1_FAZ_IBLOK = LocalPO_UMIN1_FAZ_I_IBLOK;
    594           if(tmp1)
    595               LocalPO_UMIN1_FAZ_IBLOK = LocalPO_UMIN1_FAZ_ILI_IBLOK;
    596          
    597          		// UMIN1 ФАЗ ЛИН IBLOK
    598           tmp1 =     ENA_LOGIC(ENA_UMIN1_3);
    599           int LocalPO_UMIN1_IBLOK = LocalPO_UMIN1_FAZ_IBLOK;
    600           if(tmp1)
    601               LocalPO_UMIN1_IBLOK = LocalPO_UMIN1_LIN_IBLOK;
    602          
    603          // UMIN1 блок I 
    604           tmp1 =     ENA_LOGIC(ENA_UMIN1_4);
    605          // int LocalPO_UMIN1_LOC = 
    606           if(tmp1)
    607               LocalPO_UMIN1_LOC = LocalPO_UMIN1_IBLOK;
    608          
    609          //UBLOK
    610          		// UMIN1 LIN И ИЛИ UBLOK
    611              tmp1 =     ENA_LOGIC(ENA_UMIN1_2);
    612           int LocalPO_UMIN1_LIN_UBLOK = LocalPO_UMIN1_LIN_I_UBLOK;
    613           if(tmp1)
    614              LocalPO_UMIN1_LIN_UBLOK = LocalPO_UMIN1_LIN_ILI_UBLOK;
    615          
    616          		// UMIN1 FAZ И ИЛИ UBLOK
    617              tmp1 =     ENA_LOGIC(ENA_UMIN1_2);
    618           int LocalPO_UMIN1_FAZ_UBLOK = LocalPO_UMIN1_FAZ_I_UBLOK;
    619           if(tmp1)
    620              LocalPO_UMIN1_FAZ_UBLOK = LocalPO_UMIN1_FAZ_ILI_UBLOK;
    621          
    622          		// UMIN1 ФАЗ ЛИН UBLOK
    623           tmp1 =     ENA_LOGIC(ENA_UMIN1_3);
    624           int LocalPO_UMIN1_LOC_UBLOK = LocalPO_UMIN1_FAZ_UBLOK;
    625           if(tmp1)
    626               LocalPO_UMIN1_LOC_UBLOK = LocalPO_UMIN1_LIN_UBLOK;
    627          
    628          //IBLOK UBLOK
    629          		// UMIN1 LIN IBLOK И ИЛИ UBLOK
    630              tmp1 =     ENA_LOGIC(ENA_UMIN1_2);
    631           int LocalPO_UMIN1_LIN_IBLOK_UBLOK = LocalPO_UMIN1_LIN_I_IBLOK_UBLOK;
    632           if(tmp1)
    633               LocalPO_UMIN1_LIN_IBLOK_UBLOK = LocalPO_UMIN1_LIN_ILI_IBLOK_UBLOK;
    634          
    635          		// UMIN1 FAZ IBLOK И ИЛИ UBLOK
    636              tmp1 =     ENA_LOGIC(ENA_UMIN1_2);
    637           int LocalPO_UMIN1_FAZ_IBLOK_UBLOK = LocalPO_UMIN1_FAZ_I_IBLOK_UBLOK;
    638           if(tmp1)
    639               LocalPO_UMIN1_FAZ_IBLOK_UBLOK = LocalPO_UMIN1_FAZ_ILI_IBLOK_UBLOK;
    640          
    641          		// UMIN1 ФАЗ ЛИН IBLOK UBLOK
    642           tmp1 =     ENA_LOGIC(ENA_UMIN1_3);
    643           int LocalPO_UMIN1_IBLOK_UBLOK = LocalPO_UMIN1_FAZ_IBLOK_UBLOK;
    644           if(tmp1)
    645               LocalPO_UMIN1_IBLOK_UBLOK = LocalPO_UMIN1_LIN_IBLOK_UBLOK;
    646          
    647          // UMIN1 блок I UBLOK
    648           tmp1 =     ENA_LOGIC(ENA_UMIN1_4);
    649          // int LocalPO_UMIN1_LOC = 
    650           if(tmp1)
    651               LocalPO_UMIN1_LOC_UBLOK = LocalPO_UMIN1_IBLOK_UBLOK;
    652          
    653          	// UMIN1 блок U
    654           tmp1 =     ENA_LOGIC(ENA_UMIN1_5);
    655           if(tmp1 &
    656          	(
    657          	// UMIN1 блок I UBLOK
    658          	ENA_LOGIC(ENA_UMIN1_4)^1
    659          	)
    660              )
    661               LocalPO_UMIN1_LOC = LocalPO_UMIN1_LOC_UBLOK;
    662          
    663           int  LocalPO_UMIN1 = LocalPO_UMIN1_LOC;
    664          
    665          //-------------UMIN2-----------
    666          		// UMIN2 LIN И ИЛИ
    667              tmp1 =     ENA_LOGIC(ENA_UMIN2_2);
    668           int LocalPO_UMIN2_LIN = LocalPO_UMIN2_LIN_I;
    669           if(tmp1)
    670              LocalPO_UMIN2_LIN = LocalPO_UMIN2_LIN_ILI;
    671          
    672          		// UMIN2 FAZ И ИЛИ
    673              tmp1 =     ENA_LOGIC(ENA_UMIN2_2);
    674           int LocalPO_UMIN2_FAZ = LocalPO_UMIN2_FAZ_I;
    675           if(tmp1)
    676              LocalPO_UMIN2_FAZ = LocalPO_UMIN2_FAZ_ILI;
    677          
    678          		// UMIN2 ФАЗ ЛИН
    679           tmp1 =     ENA_LOGIC(ENA_UMIN2_3);
    680           int LocalPO_UMIN2_LOC = LocalPO_UMIN2_FAZ;
    681           if(tmp1)
    682               LocalPO_UMIN2_LOC = LocalPO_UMIN2_LIN;
    683           
    684          //IBLOK
    685          		// UMIN2 LIN IBLOK И ИЛИ
    686              tmp1 =     ENA_LOGIC(ENA_UMIN2_2);
    687           int LocalPO_UMIN2_LIN_IBLOK = LocalPO_UMIN2_LIN_I_IBLOK;
    688           if(tmp1)
    689               LocalPO_UMIN2_LIN_IBLOK = LocalPO_UMIN2_LIN_ILI_IBLOK;
    690          
    691          		// UMIN2 FAZ IBLOK И ИЛИ
    692              tmp1 =     ENA_LOGIC(ENA_UMIN2_2);
    693           int LocalPO_UMIN2_FAZ_IBLOK = LocalPO_UMIN2_FAZ_I_IBLOK;
    694           if(tmp1)
    695               LocalPO_UMIN2_FAZ_IBLOK = LocalPO_UMIN2_FAZ_ILI_IBLOK;
    696          
    697          		// UMIN2 ФАЗ ЛИН IBLOK
    698           tmp1 =     ENA_LOGIC(ENA_UMIN2_3);
    699           int LocalPO_UMIN2_IBLOK = LocalPO_UMIN2_FAZ_IBLOK;
    700           if(tmp1)
    701               LocalPO_UMIN2_IBLOK = LocalPO_UMIN2_LIN_IBLOK;
    702          
    703          // UMIN2 блок I 
    704           tmp1 =     ENA_LOGIC(ENA_UMIN2_4);
    705           if(tmp1)
    706               LocalPO_UMIN2_LOC = LocalPO_UMIN2_IBLOK;
    707          
    708          //
    709          //UBLOK
    710          		// UMIN2 LIN И ИЛИ UBLOK
    711              tmp1 =     ENA_LOGIC(ENA_UMIN2_2);
    712           int LocalPO_UMIN2_LIN_UBLOK = LocalPO_UMIN2_LIN_I_UBLOK;
    713           if(tmp1)
    714              LocalPO_UMIN2_LIN_UBLOK = LocalPO_UMIN2_LIN_ILI_UBLOK;
    715          
    716          		// UMIN2 FAZ И ИЛИ UBLOK
    717              tmp1 =     ENA_LOGIC(ENA_UMIN2_2);
    718           int LocalPO_UMIN2_FAZ_UBLOK = LocalPO_UMIN2_FAZ_I_UBLOK;
    719           if(tmp1)
    720              LocalPO_UMIN2_FAZ_UBLOK = LocalPO_UMIN2_FAZ_ILI_UBLOK;
    721          
    722          		// UMIN2 ФАЗ ЛИН UBLOK
    723           tmp1 =     ENA_LOGIC(ENA_UMIN2_3);
    724           int LocalPO_UMIN2_LOC_UBLOK = LocalPO_UMIN2_FAZ_UBLOK;
    725           if(tmp1)
    726               LocalPO_UMIN2_LOC_UBLOK = LocalPO_UMIN2_LIN_UBLOK;
    727          
    728          //IBLOK UBLOK
    729          		// UMIN1 LIN IBLOK И ИЛИ UBLOK
    730              tmp1 =     ENA_LOGIC(ENA_UMIN2_2);
    731           int LocalPO_UMIN2_LIN_IBLOK_UBLOK = LocalPO_UMIN2_LIN_I_IBLOK_UBLOK;
    732           if(tmp1)
    733               LocalPO_UMIN2_LIN_IBLOK_UBLOK = LocalPO_UMIN2_LIN_ILI_IBLOK_UBLOK;
    734          
    735          		// UMIN1 FAZ IBLOK И ИЛИ UBLOK
    736              tmp1 =     ENA_LOGIC(ENA_UMIN2_2);
    737           int LocalPO_UMIN2_FAZ_IBLOK_UBLOK = LocalPO_UMIN2_FAZ_I_IBLOK_UBLOK;
    738           if(tmp1)
    739               LocalPO_UMIN2_FAZ_IBLOK_UBLOK = LocalPO_UMIN2_FAZ_ILI_IBLOK_UBLOK;
    740          
    741          		// UMIN1 ФАЗ ЛИН IBLOK UBLOK
    742           tmp1 =     ENA_LOGIC(ENA_UMIN2_3);
    743           int LocalPO_UMIN2_IBLOK_UBLOK = LocalPO_UMIN2_FAZ_IBLOK_UBLOK;
    744           if(tmp1)
    745               LocalPO_UMIN2_IBLOK_UBLOK = LocalPO_UMIN2_LIN_IBLOK_UBLOK;
    746          
    747          // UMIN2 блок I UBLOK
    748           tmp1 =     ENA_LOGIC(ENA_UMIN2_4);
    749           if(tmp1)
    750               LocalPO_UMIN2_LOC_UBLOK = LocalPO_UMIN2_IBLOK_UBLOK;
    751          
    752          	// UMIN2 блок U
    753           tmp1 =     ENA_LOGIC(ENA_UMIN2_5);
    754           if(tmp1 &
    755          	(
    756          	// UMIN2 блок I UBLOK
    757          	ENA_LOGIC(ENA_UMIN2_4)^1
    758          	)
    759              )
    760               LocalPO_UMIN2_LOC = LocalPO_UMIN2_LOC_UBLOK;
    761          
    762           int  LocalPO_UMIN2 = LocalPO_UMIN2_LOC;
    763          */
    764          
    765              //*******UMM1********
    766              //L3 UMIN1
    767              LSIGNAL_TIMER(TIMER1_UMM)  = //UMIN1_TIM1
    768              //Сраб ПО UMIN1
    769              IO_LOGIC(IOCMD9_UMM) =
    770                            //Стат блок UMIN1
    771                           (IO_LOGIC(IOCMD3_UMM)^1) &
    772                           //Управл UMIN1
    773                           ENA_LOGIC(ENA_UMIN1_1) &
    774                           (
    775                           //L1
    776                           //ПО UMM1
    777                           (GlobalPO1 | LocalPO_UMIN1) |
    778                            //Пуск UMIN1
    779                            IO_LOGIC(IOCMDPUSK1_UMM)
    780                           );
    781          
    782           int tmp = 
    783           //таймер BO UMIN1
    784           LSIGNAL_TIMER(TIMER_BOUMIN1)  = 
    785                  //UMIN1_TIM1
    786                  PLOG_TIMER(TIMER1_UMM);
    787          
    788              //Сраб UMIN1
    789              IO_LOGIC(IOCMD10_UMM) =
    790                   //таймер BO UMIN1
    791                    ILOG_TIMER(TIMER_BOUMIN1)|tmp;
    792          
    793              //L4 UMIN2
    794              LSIGNAL_TIMER(TIMER2_UMM)  = //UMIN2_TIM1
    795              //Сраб ПО UMIN2
    796              IO_LOGIC(IOCMD11_UMM) =
    797                            //Стат блок UMIN2
    798                           (IO_LOGIC(IOCMD4_UMM)^1) &
    799                           //Управл UMIN2
    800                           ENA_LOGIC(ENA_UMIN2_1) &
    801                           (
    802                           //L2
    803                           //ПО UMM2
    804                           (GlobalPO2 | LocalPO_UMIN2) |
    805                            //Пуск UMIN2
    806                            IO_LOGIC(IOCMDPUSK2_UMM)
    807                           );
    808          
    809           tmp = 
    810           //таймер BO UMIN2
    811           LSIGNAL_TIMER(TIMER_BOUMIN2)  = 
    812                  //UMIN2_TIM1
    813                  PLOG_TIMER(TIMER2_UMM);
    814          
    815              //Сраб UMIN2
    816              IO_LOGIC(IOCMD12_UMM) =
    817                   //таймер BO UMIN2
    818                    ILOG_TIMER(TIMER_BOUMIN2)|tmp;
    819          
    820              int tt1 = IO_LOGIC(IOCMD12_UMM);
    821              int tt2=0;
    822              if(tt1==1){
    823                int tt2=1;
    824              }//if
    825                
    826                
    827              //L5 UMAX1
    828              LSIGNAL_TIMER(TIMER3_UMM)  = //UMAX1_TIM1
    829              //Сраб ПО UMAX1
    830              IO_LOGIC(IOCMD5_UMM) =
    831                            //Стат блок UMAX1
    832                           (IO_LOGIC(IOCMD1_UMM)^1) &
    833                           //Управл UMAX1
    834                           ENA_LOGIC(ENA_UMAX1_1) &
    835                           //ПО UMM1
    836                           (GlobalPO1 | LocalPO_UMAX1);
    837          
    838           tmp = 
    839           //таймер BO UMAX1
    840           LSIGNAL_TIMER(TIMER_BOUMAX1)  = 
    841                  //UMAX1_TIM1
    842                  PLOG_TIMER(TIMER3_UMM);
    843          
    844              //Сраб UMAX1
    845              IO_LOGIC(IOCMD6_UMM) =
    846                   //таймер BO UMAX1
    847                    ILOG_TIMER(TIMER_BOUMAX1)|tmp;
    848          
    849              //L6 UMAX2
    850              LSIGNAL_TIMER(TIMER4_UMM)  = //UMAX2_TIM1
    851              //Сраб ПО UMAX2
    852              IO_LOGIC(IOCMD7_UMM) =
    853                            //Стат блок UMAX2
    854                           (IO_LOGIC(IOCMD2_UMM)^1) &
    855                           //Управл UMAX2
    856                           ENA_LOGIC(ENA_UMAX2_1) &
    857                           //ПО UMM2
    858                           (GlobalPO2 | LocalPO_UMAX2);
    859          
    860           tmp = 
    861           //таймер BO UMAX2
    862           LSIGNAL_TIMER(TIMER_BOUMAX2)  = 
    863                  //UMAX2_TIM1
    864                  PLOG_TIMER(TIMER4_UMM);
    865          
    866              //Сраб UMAX2
    867              IO_LOGIC(IOCMD8_UMM) =
    868                   //таймер BO UMAX2
    869                    ILOG_TIMER(TIMER_BOUMAX2)|tmp;
    870          
    871          }//logicUMM(int idxC)
    872          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
     184   logicUMM
       184   -> ILogTimer
       184   -> PLogTimer
       184   -> detectorLevelDOWN3F
       184   -> detectorLevelUP3F


   Section sizes:

   Bytes  Function/Label
   -----  --------------
    3048  logicUMM

 
 3 048 bytes in section .text
 
 3 048 bytes of CODE memory

Errors: none
Warnings: 2
