###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        15/Oct/2015  16:25:09
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  arm
#    Endian       =  little
#    Source file  =  
#        D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\virtualMenu\ViewMenuReg.c
#    Command line =  
#        "D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\virtualMenu\ViewMenuReg.c" -lcN
#        "D:\Program Files\IAR Systems\MYWORK\HR1_0100_00_I720_new2\EWP\Debug
#        xRAM\List\" -o "D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\EWP\Debug xRAM\Obj\" --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=ARM926EJ-S -e
#        --fpu=VFP9-S --dlib_config "D:\Program Files\IAR Systems\Embedded
#        Workbench 7.2\arm\INC\c\DLib_Config_Normal.h" -I "D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\NXP\" -I "D:\Program
#        Files\IAR Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\LIB\include\" -I
#        "D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\inc\" -I "D:\Program
#        Files\IAR Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\Igor\" -I
#        "D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\mal\" -I "D:\Program
#        Files\IAR Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\component\" -I
#        "D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\psupervisor\" -I
#        "D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\virtualMenu\" -I
#        "D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\callbackElement\" -I
#        "D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\logictimers\" -I
#        "D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\zonaVRT\" -I "D:\Program
#        Files\IAR Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\" --interwork
#        --cpu_mode arm -On --use_c++_inline
#    List file    =  
#        D:\Program Files\IAR Systems\MYWORK\HR1_0100_00_I720_new2\EWP\Debug
#        xRAM\List\ViewMenuReg.lst
#    Object file  =  
#        D:\Program Files\IAR Systems\MYWORK\HR1_0100_00_I720_new2\EWP\Debug
#        xRAM\Obj\ViewMenuReg.o
#
###############################################################################

D:\Program Files\IAR Systems\MYWORK\HR1_0100_00_I720_new2\virtualMenu\ViewMenuReg.c
      1          /*
      2          #include <vcl.h>
      3          #include <strstrea.h>
      4          #include <math.h>
      5          #include <mem.h>
      6          #include <fstream.h>
      7          #include <strstrea.h>
      8          #include <iomanip.h>
      9          #pragma hdrstop
     10          
     11          #include "vmenuDis.h"
     12          */
     13          
     14          #include <stdio.h>
     15          #include <string.h>
     16          
     17          #include "psuperVisor\supermanager.h"
     18          
     19          #include "bazisdef.h"
     20          #include "virtualMenu\systemmenudef.h"
     21          #include "component\componentdef.h"
     22          #include "virtualMenu\rangmanagerdef.h"
     23          
     24          #include "virtualMenu\systemmenufnc.h"
     25          #include "virtualMenu\textstreamfnc.h"
     26          #include "virtualMenu\ustmanagerfnc.h"
     27          #include "virtualMenu\rangmanagerfnc.h"
     28          #include "psuperVisor\psvisor_helpfnc.h"
     29          
     30          #include "virtualMenu\viewMenuSub.h"
     31          #include "virtualMenu\viewMenuRang.h"
     32          #include "virtualMenu\viewMenuReg.h"
     33          #include "virtualMenu\viewMenuWideLog.h"
     34          #include "virtualMenu\viewMenuTip.h"
     35          
     36          #include "..\bazis.h"
     37          
     38          #include "toSpeedOptim.h"
     39          #include "toSpeedDIS.h"
     40          
     41          extern REGISTRATOR_DIS registrator_dis;//массив ДИС
     42          //массив имен и статуса ранжирования плюс имена расширенной логики
     43          extern IONAMESTATUS_RANGIR  nameStatusRANGIR[];
     44          
     45          void PereinitReg(short flg);
     46          
     47          short  KadrMenuFormat_reg(void *pstr)
     48          {
     49           WorkControl *workCntr = (WorkControl *)pstr;
     50          //формирователь кадра
     51            ELEMENT_DIS tmpDStr;
     52          
     53            UNS_32 tmpTmp[DQUADRO];//промежуточные
     54            UNS_32 cmdTmpOld[DQUADRO];//текущие old
     55          
     56            UNS_32 IntElement[DQUADRO];
     57          
     58            RESET_COUNTER;//сброс счетчиков
     59            //сформировать old
     60            memcpy(cmdTmpOld, registrator_dis.title_dis.oldDIS, 4*DQUADRO);
     61          
     62            int len_dis = registrator_dis.title_dis.len_dis;//длина масс ДИС
     63            if(len_dis==0)//длина масс ДИС
     64                           return -1;
     65            for(int i=0; i<len_dis; i++){
     66              memcpy((char*)&tmpDStr, (char*)&(registrator_dis.bodyDIS[i]), sizeof(ELEMENT_DIS));//прочитать запись
     67              memcpy(IntElement, tmpDStr.pActualCMD, 4*DQUADRO);//скопировать текущие
     68          
     69              CNTRLOC_USER1 = tmpDStr.reltime;//время
     70              for(int i=0; i<DQUADRO; i++) tmpTmp[i] = IntElement[i]^cmdTmpOld[i];//сформировать промежуточные
     71          
     72              if(KadrFinder(tmpTmp, &KadrMaker,
     73                            workCntr,
     74                            IntElement
     75                           )) break;//кадр сформирован
     76          
     77              memcpy(cmdTmpOld, tmpDStr.pActualCMD, 4*DQUADRO);//скопировать текущие
     78          
     79            }//for
     80          
     81            return 1;
     82          }//KadrFormat(WorkControl *workCntr)
     83          
     84          /**********************************************
     85          ФУНКЦИЯ-РАБОТНИК ДЛЯ БРИГАДИРА
     86          Активизация байта команды по номеру
     87          idx - индекс активного бита
     88          Выход - 0-не покидать бригадира
     89          **********************************************/
     90          void KadrMaker(short idx, void *pstr, UNS_32 *integE)
     91          {
     92            char locTxt[100];
     93          
     94           WorkControl *workCntr = (WorkControl *)pstr;
     95            sprintf(locTxt, "// %dмс ", CNTRLOC_USER1);//время
     96            char tmpOst = idx%32;//остаток индекс бита в слове
     97            if((  integE[(idx - tmpOst)/32] & (1<<tmpOst))!=0)
     98            {
     99              strcat(locTxt, "+++Пришел");//первая строка
    100              strcpy((char *)workCntr->twoString, locTxt);
    101            }//if
    102            else
    103            {
    104              strcat(locTxt, "---Ушел");//первая строка
    105              strcpy((char *)workCntr->twoString, locTxt);
    106            }
    107          
    108            strcpy((char *)workCntr->twoString + sizeof(WorkVariantChar)/2, 
    109                   "\\\\");//вторая строка
    110            strcat((char *)workCntr->twoString + sizeof(WorkVariantChar)/2, 
    111          //locTxt
    112                   nameStatusRANGIR[idx].nameIORang
    113                  );
    114          
    115            return ;//покинуть бригадир
    116          
    117          }//KadrMaker()
    118          
    119          /**********************************************
    120          БИТОВЫЙ БРИГАДИР ДЛЯ ДИСКР РЕГИСТРАТОРА
    121          pQuadro - указатель на массив INTU[4]
    122          pfW - указатель на функцию-работника
    123          функция-работник работает только с глобальной памятью
    124          если функция-работник возвратит 1 то MultiBitWorker завершается
    125          **********************************************/
    126          char KadrFinder(UNS_32 *pQuadro,
    127                          void (*pKadrMaker)(short , void *, UNS_32 *),
    128                          void *pstr,
    129                          UNS_32 *integerE
    130                         )
    131          {
    132            short cntBit=0;//счетчик бит
    133           WorkControl *workCntr = (WorkControl *)pstr;
    134            for (char i=0; i<DQUADRO; i++)
    135            {
    136              if (pQuadro[i]==0)
    137              {
    138                cntBit+=32;
    139                continue;
    140              }//if (pQuadro[i]==0)
    141              else
    142              {
    143                for (char b=0; b<32; b++)
    144                {
    145                  if (pQuadro[i]&(1<<b))
    146                  {
    147                    //есть единица
    148                    COMPARE_COUNTER //сравнить счетчики кадров
    149                    { (*pKadrMaker)(cntBit, workCntr, integerE); return 1; }//покинуть бригадир
    150                  }//if (pQuadro[i]&(1<<b))
    151                  cntBit++;
    152                }//for
    153              }
    154            }//for
    155            return 0;
    156          }//KadrFinder()
    157          
    158          void OpenMenuReg()
    159          {
    160          //открыть меню reg
    161            TxtStreamCorrect(CRR_TEXTSTREAM);//коррекция текущий control
    162          //  CRR_TEXTSTREAM = &CONTROL_DIS;//текущий control
    163            SelectorTEXTCONTROL(&CONTROL_DIS);//установить текущую ссылку на текстовый поток
    164            PereinitReg(1);//ф-ция переинит reg
    165          
    166          //  CRR_FHOME = &PereinitReg;//указатель на ф-цию HOME
    167            SelectorFHOME(&PereinitReg);//указатель на ф-цию HOME
    168          }//OpenMenuReg()
    169          
    170          void PereinitReg(short flg)
    171          {
    172          //ф-ция переинит reg
    173            TxtStreamInit(CRR_TEXTSTREAM, &KadrMenuFormat_reg, NULL);//инит управл структ и формир кадра
    174            if(flg==1)
    175              ViewDiskrMenu(typeMenuReg);//вывести окно отображения
    176          }//PereinitReg()
    177          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      32   KadrFinder
        32   -- Indirect call
     128   KadrMaker
       128   -> sprintf
       128   -> strcat
       128   -> strcpy
       128 __aeabi_idiv
       128 __aeabi_idivmod
     208   KadrMenuFormat_reg
       208   -> KadrFinder
       208   -> __aeabi_memcpy
       8   OpenMenuReg
         8   -> PereinitReg
         8   -> SelectorFHOME
         8   -> SelectorTEXTCONTROL
         8   -> TxtStreamCorrect
       8   PereinitReg
         8   -> TxtStreamInit
         8   -> ViewDiskrMenu


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
       4  ??DataTable3_7
       4  ??DataTable3_8
      12  ?_0
      12  ?_1
       8  ?_2
       4  ?_3
     220  KadrFinder
     232  KadrMaker
     296  KadrMenuFormat_reg
      44  OpenMenuReg
      60  PereinitReg

 
  36 bytes in section .rodata
 888 bytes in section .text
 
 888 bytes of CODE  memory
  36 bytes of CONST memory

Errors: none
Warnings: none
