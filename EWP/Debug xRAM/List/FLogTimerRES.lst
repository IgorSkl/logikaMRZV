###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        15/Oct/2015  14:32:21
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  arm
#    Endian       =  little
#    Source file  =  
#        D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\logictimers\FLogTimerRES.c
#    Command line =  
#        "D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\logictimers\FLogTimerRES.c" -lcN
#        "D:\Program Files\IAR Systems\MYWORK\HR1_0100_00_I720_new2\EWP\Debug
#        xRAM\List\" -o "D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\EWP\Debug xRAM\Obj\" --debug
#        --endian=little --cpu=ARM926EJ-S -e --fpu=VFP9-S --dlib_config
#        "D:\Program Files\IAR Systems\Embedded Workbench
#        7.2\arm\INC\c\DLib_Config_Normal.h" -I "D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\NXP\" -I "D:\Program
#        Files\IAR Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\LIB\include\" -I
#        "D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\inc\" -I "D:\Program
#        Files\IAR Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\Igor\" -I
#        "D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\mal\" -I "D:\Program
#        Files\IAR Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\component\" -I
#        "D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\psupervisor\" -I
#        "D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\virtualMenu\" -I
#        "D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\callbackElement\" -I
#        "D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\logictimers\" -I
#        "D:\Program Files\IAR Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\"
#        --interwork --cpu_mode arm -Ohs --use_c++_inline
#    List file    =  
#        D:\Program Files\IAR Systems\MYWORK\HR1_0100_00_I720_new2\EWP\Debug
#        xRAM\List\FLogTimerRES.lst
#    Object file  =  
#        D:\Program Files\IAR Systems\MYWORK\HR1_0100_00_I720_new2\EWP\Debug
#        xRAM\Obj\FLogTimerRES.o
#
###############################################################################

D:\Program Files\IAR Systems\MYWORK\HR1_0100_00_I720_new2\logictimers\FLogTimerRES.c
      1          
      2          #include "bazisdef.h"
      3          #include "logictimersdef.h"
      4          #include "logictimersfnc.h"
      5          
      6          //массив EL триггеров дл€ лог таймеров
      7          extern int  elTrgOldTimer[];
      8          extern int  elTrgOutTimer[];
      9          //лог массив запуска таймеров
     10          extern int  logMassTimer[];
     11          //главный массив лог таймеров
     12          extern BAZIS_TIMER_MEM  bazisTimerMem[];
     13          //глобальный сброс всех таймеров
     14          extern int  globalTimerReset;
     15          
     16          /**********************************************
     17          ѕ–яћќ… ‘ќ–ћ»–ќ¬ј“≈Ћ№
     18          tNumber - номер таймера
     19          RES - сброс таймера
     20          ¬ыход - флаг работы
     21          **********************************************/
     22          int FLogTimerRES(int tNumber, int RES) @ "Fast_function"
     23          {
     24            if (globalTimerReset)
     25            {
     26          //   return LogTimerRES(tNumber, 0, 1);
     27          //#include "logTimerRES.ci"
     28              int tmp = *bazisTimerMem[tNumber].pntInputSignal;
     29          //if (RES)
     30          //{
     31              elTrgOldTimer[tNumber] = tmp;
     32              elTrgOutTimer[tNumber] = 0;//выход триг ускор переноса
     33              bazisTimerMem[tNumber].RESET = 1;
     34          //}//if
     35          
     36          //#ifndef  _ILOGTIMER_
     37          //поймать фронт
     38              if ((tmp^elTrgOldTimer[tNumber])&tmp)  elTrgOutTimer[tNumber] = 1;
     39              /*
     40              #else
     41              //поймать фронт
     42              if ((tmp^elTrgOldTimer[tNumber])&(tmp^1))  elTrgOutTimer[tNumber] = 1;
     43          
     44              #endif // _ILOGTIMER_
     45              */
     46          
     47              elTrgOldTimer[tNumber] = tmp;
     48          
     49          //если таймер досчитал
     50              if (bazisTimerMem[tNumber].FINISCH)
     51              {
     52                bazisTimerMem[tNumber].RESET = 1;
     53                elTrgOutTimer[tNumber] = 0;
     54              }//if
     55          /*    
     56              else
     57              {
     58                if (!RES)
     59                  bazisTimerMem[tNumber].RESET = 0;
     60              }
     61          */    
     62              return elTrgOutTimer[tNumber];
     63            }//if (globalTimerReset)
     64          
     65          //  return LogTimerRES(tNumber, 0, RES);
     66          //#define _IS_RES_
     67          //#include "logTimerRES.ci"
     68            int tmp = *bazisTimerMem[tNumber].pntInputSignal;
     69            if (RES)
     70            {
     71              elTrgOldTimer[tNumber] = tmp;
     72              elTrgOutTimer[tNumber] = 0;//выход триг ускор переноса
     73              bazisTimerMem[tNumber].RESET = 1;
     74            }//if
     75          
     76          //#ifndef  _ILOGTIMER_
     77          //поймать фронт
     78            if ((tmp^elTrgOldTimer[tNumber])&tmp)  elTrgOutTimer[tNumber] = 1;
     79            /*
     80            #else
     81            //поймать фронт
     82            if ((tmp^elTrgOldTimer[tNumber])&(tmp^1))  elTrgOutTimer[tNumber] = 1;
     83          
     84            #endif // _ILOGTIMER_
     85            */
     86          
     87            elTrgOldTimer[tNumber] = tmp;
     88          
     89          //если таймер досчитал
     90            if (bazisTimerMem[tNumber].FINISCH)
     91            {
     92              bazisTimerMem[tNumber].RESET = 1;
     93              elTrgOutTimer[tNumber] = 0;
     94            }//if
     95            else
     96            {
     97              if (!RES)
     98                bazisTimerMem[tNumber].RESET = 0;
     99            }
    100            return elTrgOutTimer[tNumber];
    101          
    102          }//FLogTimerRES(char tNumber, char RES)
    103          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   FLogTimerRES


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     212  FLogTimerRES

 
 212 bytes in section Fast_function
 
 212 bytes of CODE memory

Errors: none
Warnings: none
