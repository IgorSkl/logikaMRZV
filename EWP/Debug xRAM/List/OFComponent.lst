###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.2.8542/W32 for ARM        20/Oct/2015  12:12:00
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  arm
#    Endian       =  little
#    Source file  =  
#        D:\IAR projects\HR1_0100_00_I720_new2\component\OFComponent.c
#    Command line =  
#        "D:\IAR projects\HR1_0100_00_I720_new2\component\OFComponent.c" -lcN
#        "D:\IAR projects\HR1_0100_00_I720_new2\EWP\Debug xRAM\List\" -o
#        "D:\IAR projects\HR1_0100_00_I720_new2\EWP\Debug xRAM\Obj\" --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=ARM926EJ-S -e
#        --fpu=VFP9-S --dlib_config "C:\Program Files\IAR Systems\Embedded
#        Workbench 7.40\arm\INC\c\DLib_Config_Normal.h" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\NXP\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\LIB\include\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\inc\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\Igor\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\mal\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\component\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\psupervisor\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\virtualMenu\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\callbackElement\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\logictimers\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\zonaVRT\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\" --interwork --cpu_mode arm -On
#        --use_c++_inline
#    List file    =  
#        D:\IAR projects\HR1_0100_00_I720_new2\EWP\Debug
#        xRAM\List\OFComponent.lst
#    Object file  =  
#        D:\IAR projects\HR1_0100_00_I720_new2\EWP\Debug xRAM\Obj\OFComponent.o
#
###############################################################################

D:\IAR projects\HR1_0100_00_I720_new2\component\OFComponent.c
      1          #ifndef _HIDE_COMPONENT
      2          /*
      3          #include <vcl.h>
      4          #include <strstrea.h>
      5          #include <math.h>
      6          #include <mem.h>
      7          #include <fstream.h>
      8          #include <strstrea.h>
      9          #include <iomanip.h>
     10          #pragma hdrstop
     11          
     12          #include "vmenuDis.h"
     13          */
     14          
     15          #include <stdio.h>
     16          #include <string.h>
     17          
     18          #include "bazisdef.h"
     19          #include "component\componentdef.h"
     20          #include "virtualMenu\systemmenudef.h"
     21          #include "virtualMenu\ustmanagerdef.h"
     22          
     23          #include "virtualMenu\textstreamfnc.h"
     24          #include "virtualMenu\systemmenufnc.h"
     25          #include "virtualMenu\ustmanagerfnc.h"
     26          #include "psuperVisor\psvisor_helpfnc.h"
     27          #include "logictimers\logictimersfnc.h"
     28          
     29          #include "virtualMenu\viewMenuList.h"
     30          
     31          #include "psupervisor\psupervisor.h"
     32          
     33          #include "toSpeedOptim.h"
     34          
     35          #include "..\bazis.h"
     36          
     37          //код компонентов
     38          #define KOD_COMPONENT  OF_COMP1
     39          
     40          #endif // _HIDE_COMPONENT
     41          
     42          //РАСПРЕДЕЛЕНИЕ УСТАВОК  в менеджере уставок
     43          //уставка выдержки
     44          #define MNGPAUSA_OF1    0
     45          #define MNGPAUSA_OF2    1
     46          #define MNGPAUSA_OF3    2
     47          #define MNGPAUSA_OF4    3
     48          #define MNGPAUSA_OF5    4
     49          #define MNGPAUSA_OF6    5
     50          #define MNGPAUSA_OF7    6
     51          #define MNGPAUSA_OF8    7
     52          #define MNGPAUSA_OF9    8
     53          #define MNGPAUSA_OF10   9
     54          #define MNGPAUSA_OF11   10
     55          #define MNGPAUSA_OF12   11
     56          #define MNGPAUSA_OF13   12
     57          #define MNGPAUSA_OF14   13
     58          #define MNGPAUSA_OF15   14
     59          #define MNGPAUSA_OF16   15
     60          
     61          #define MNGWORK_OF1     16
     62          #define MNGWORK_OF2     17
     63          #define MNGWORK_OF3     18
     64          #define MNGWORK_OF4     19
     65          #define MNGWORK_OF5     20
     66          #define MNGWORK_OF6     21
     67          #define MNGWORK_OF7     22
     68          #define MNGWORK_OF8     23
     69          #define MNGWORK_OF9     24
     70          #define MNGWORK_OF10    25
     71          #define MNGWORK_OF11    26
     72          #define MNGWORK_OF12    27
     73          #define MNGWORK_OF13    28
     74          #define MNGWORK_OF14    29
     75          #define MNGWORK_OF15    30
     76          #define MNGWORK_OF16    31
     77          
     78          //уставка управления
     79          #define MNGUPR_OF       32
     80          //к-во уставок в менеджере уставок
     81          #define MNGUST_OF_TOTAL  33
     82          
     83          //РАСПРЕДЕЛЕНИЕ ENA команд
     84          #define ENA_OF_1  0
     85          #define ENA_OF_2  1
     86          #define ENA_OF_3  2
     87          #define ENA_OF_4  3
     88          #define ENA_OF_5  4
     89          #define ENA_OF_6  5
     90          #define ENA_OF_7  6
     91          #define ENA_OF_8  7
     92          #define ENA_OF_9  8
     93          #define ENA_OF_10 9
     94          #define ENA_OF_11 10
     95          #define ENA_OF_12 11
     96          #define ENA_OF_13 12
     97          #define ENA_OF_14 13
     98          #define ENA_OF_15 14
     99          #define ENA_OF_16 15
    100          //к-во ENA команд
    101          #define ENACMD_OF_TOTAL 16
    102          
    103          //РАСПРЕДЕЛЕНИЕ УСТАВОК в супервизоре
    104          //к-во уставок в супервизоре
    105          #define SPVUST_OF_TOTAL  0
    106          
    107          //---------------IO COMMAND------------------
    108          //РАСПРЕДЕЛЕНИЕ IO КОМАНД ДЛЯ OF
    109          //ОФ1
    110          #define IOCMD_IN_OF1  0
    111          #define IOCMD_OUT_OF1 1
    112          //ОФ2
    113          #define IOCMD_IN_OF2  2
    114          #define IOCMD_OUT_OF2 3
    115          //ОФ3
    116          #define IOCMD_IN_OF3  4
    117          #define IOCMD_OUT_OF3 5
    118          //ОФ4
    119          #define IOCMD_IN_OF4  6
    120          #define IOCMD_OUT_OF4 7
    121          //ОФ5
    122          #define IOCMD_IN_OF5  8
    123          #define IOCMD_OUT_OF5 9
    124          //ОФ6
    125          #define IOCMD_IN_OF6  10
    126          #define IOCMD_OUT_OF6 11
    127          //ОФ7
    128          #define IOCMD_IN_OF7  12
    129          #define IOCMD_OUT_OF7 13
    130          //ОФ8
    131          #define IOCMD_IN_OF8  14
    132          #define IOCMD_OUT_OF8 15
    133          //ОФ9
    134          #define IOCMD_IN_OF9  16
    135          #define IOCMD_OUT_OF9 17
    136          //ОФ10
    137          #define IOCMD_IN_OF10  18
    138          #define IOCMD_OUT_OF10 19
    139          //ОФ11
    140          #define IOCMD_IN_OF11  20
    141          #define IOCMD_OUT_OF11 21
    142          //ОФ12
    143          #define IOCMD_IN_OF12  22
    144          #define IOCMD_OUT_OF12 23
    145          //ОФ13
    146          #define IOCMD_IN_OF13  24
    147          #define IOCMD_OUT_OF13 25
    148          //ОФ14
    149          #define IOCMD_IN_OF14  26
    150          #define IOCMD_OUT_OF14 27
    151          //ОФ15
    152          #define IOCMD_IN_OF15  28
    153          #define IOCMD_OUT_OF15 29
    154          //ОФ16
    155          #define IOCMD_IN_OF16  30
    156          #define IOCMD_OUT_OF16 31
    157          
    158          //ОT1
    159          #define IOCMD_BKL_OT1  32
    160          #define IOCMD_OTKL_OT1 33
    161          #define IOCMD_OUT_OT1  34
    162          //ОT2
    163          #define IOCMD_BKL_OT2  35
    164          #define IOCMD_OTKL_OT2 36
    165          #define IOCMD_OUT_OT2  37
    166          //ОT3
    167          #define IOCMD_BKL_OT3  38
    168          #define IOCMD_OTKL_OT3 39
    169          #define IOCMD_OUT_OT3  40
    170          //ОT4
    171          #define IOCMD_BKL_OT4  41
    172          #define IOCMD_OTKL_OT4 42
    173          #define IOCMD_OUT_OT4  43
    174          //ОT5
    175          #define IOCMD_BKL_OT5  44
    176          #define IOCMD_OTKL_OT5 45
    177          #define IOCMD_OUT_OT5  46
    178          //ОT6
    179          #define IOCMD_BKL_OT6  47
    180          #define IOCMD_OTKL_OT6 48
    181          #define IOCMD_OUT_OT6  49
    182          //ОT7
    183          #define IOCMD_BKL_OT7  50
    184          #define IOCMD_OTKL_OT7 51
    185          #define IOCMD_OUT_OT7  52
    186          //ОT8
    187          #define IOCMD_BKL_OT8  53
    188          #define IOCMD_OTKL_OT8 54
    189          #define IOCMD_OUT_OT8  55
    190          
    191          //к-во IO команд
    192          #define IOCMD_OF_TOTAL    56
    193          
    194          //---------------TL COMMAND------------------
    195          //РАСПРЕДЕЛЕНИЕ TL КОМАНД ДЛЯ OF
    196          //к-во TL команд
    197          #define TLCMD_OF_TOTAL    0
    198          
    199          //--------------- TIMERS ------------------
    200          //РАСПРЕДЕЛЕНИЕ ТАЙМЕРОВ ДЛЯ OF
    201          //таймер паузы ОФ1
    202          #define TIMERP_OF1  0
    203          //таймер работы ОФ1
    204          #define TIMERR_OF1  1
    205          //таймер паузы ОФ2
    206          #define TIMERP_OF2  2
    207          //таймер работы ОФ2
    208          #define TIMERR_OF2  3
    209          //таймер паузы ОФ3
    210          #define TIMERP_OF3  4
    211          //таймер работы ОФ3
    212          #define TIMERR_OF3  5
    213          //таймер паузы ОФ4
    214          #define TIMERP_OF4  6
    215          //таймер работы ОФ4
    216          #define TIMERR_OF4  7
    217          //таймер паузы ОФ5
    218          #define TIMERP_OF5  8
    219          //таймер работы ОФ5
    220          #define TIMERR_OF5  9
    221          //таймер паузы ОФ6
    222          #define TIMERP_OF6  10
    223          //таймер работы ОФ6
    224          #define TIMERR_OF6  11
    225          //таймер паузы ОФ7
    226          #define TIMERP_OF7  12
    227          //таймер работы ОФ7
    228          #define TIMERR_OF7  13
    229          //таймер паузы ОФ8
    230          #define TIMERP_OF8  14
    231          //таймер работы ОФ8
    232          #define TIMERR_OF8  15
    233          //таймер паузы ОФ9
    234          #define TIMERP_OF9  16
    235          //таймер работы ОФ9
    236          #define TIMERR_OF9  17
    237          //таймер паузы ОФ10
    238          #define TIMERP_OF10  18
    239          //таймер работы ОФ10
    240          #define TIMERR_OF10  19
    241          //таймер паузы ОФ11
    242          #define TIMERP_OF11  20
    243          //таймер работы ОФ11
    244          #define TIMERR_OF11  21
    245          //таймер паузы ОФ12
    246          #define TIMERP_OF12  22
    247          //таймер работы ОФ12
    248          #define TIMERR_OF12  23
    249          //таймер паузы ОФ13
    250          #define TIMERP_OF13  24
    251          //таймер работы ОФ13
    252          #define TIMERR_OF13  25
    253          //таймер паузы ОФ14
    254          #define TIMERP_OF14  26
    255          //таймер работы ОФ14
    256          #define TIMERR_OF14  27
    257          //таймер паузы ОФ15
    258          #define TIMERP_OF15  28
    259          //таймер работы ОФ15
    260          #define TIMERR_OF15  29
    261          //таймер паузы ОФ16
    262          #define TIMERP_OF16  30
    263          //таймер работы ОФ16
    264          #define TIMERR_OF16  31
    265          //к-во таймеров
    266          #define TIMERS_OF_TOTAL   32
    267          
    268          #ifndef _HIDE_COMPONENT
    269          
    270          extern COMPONENT_OBJ rpzcomponent_obj;//обект компонента для репозитария
    271          extern int  tmpUSTAVKI[];
    272          
    273          extern LineMenuItem sub_menu_cnf[];
    274          extern LineMenuItem sub_menu_tmp[];
    275          extern int  IndexUstSPV;//индекс уставок в супервизоре
    276          extern int  IndexIO;//индекс IO
    277          
    278          extern COMPONENT_OBJ  cnfCOMPONENT[];
    279          extern int  spvUSTAVKI[];//текущие уставки супервизора
    280          extern char *bitStringUNI[];
    281          extern int  timerEnableWL;//разрешение работы таймеров РЛ
    282          
    283          void PereinitUstListCompOF(short flg);
    284          void UstListCompOF();
    285          void ustRedactorCompOF();
    286          void UstCompOF();
    287          short  KadrMenuFormat_ust_compOF(void *workCntr);
    288          
    289          void PereinitUprListCompOF(short flg);
    290          void UprListCompOF();
    291          void uprRedactorCompOF();
    292          void UprCompOF();
    293          short  KadrMenuFormat_upr_compOF(void *workCntr);
    294          int  initUstOF(char init);
    295          void  prepareUstOF(short idxC);
    296          
    297          //int ViewerEditUstOF();
    298          //int ViewerEditVidOF();
    299          void EditUstOF();
    300          //void EditVidOF();
    301          void EditUprOF();
    302          int codecUstOF(char codec, short offset, int ust);
    303          int   isDISactiv_OF(int idxC);
    304          void  logicOF(int idxC);
    305          
    306          char *selectorUprStrOF(short iBit, UNS_32 ustUpr);
    307          
    308          int  offsetIOCmdOF;//смещение для IO OF
    309          int  offsetIOCmdOF_loc;//смещение для IO OF
    310          
    311          IONAMESTATUS_COMPONENT ionsOF[IOCMD_OF_TOTAL] =
    312          {
    313            {
    314              1,//статус iocmd1
    315              "Пуск О-функция 1"
    316            },
    317            {
    318              1,//статус iocmd1
    319              "Вых О-функция 1"
    320            },
    321            {
    322              1,//статус iocmd1
    323              "Пуск О-функция 2"
    324            },
    325            {
    326              1,//статус iocmd1
    327              "Вых О-функция 2"
    328            },
    329            {
    330              1,//статус iocmd1
    331              "Пуск О-функция 3"
    332            },
    333            {
    334              1,//статус iocmd1
    335              "Вых О-функция 3"
    336            },
    337            {
    338              1,//статус iocmd1
    339              "Пуск О-функция 4"
    340            },
    341            {
    342              1,//статус iocmd1
    343              "Вых О-функция 4"
    344            },
    345            {
    346              1,//статус iocmd1
    347              "Пуск О-функция 5"
    348            },
    349            {
    350              1,//статус iocmd1
    351              "Вых О-функция 5"
    352            },
    353            {
    354              1,//статус iocmd1
    355              "Пуск О-функция 6"
    356            },
    357            {
    358              1,//статус iocmd1
    359              "Вых О-функция 6"
    360            },
    361            {
    362              1,//статус iocmd1
    363              "Пуск О-функция 7"
    364            },
    365            {
    366              1,//статус iocmd1
    367              "Вых О-функция 7"
    368            },
    369            {
    370              1,//статус iocmd1
    371              "Пуск О-функция 8"
    372            },
    373            {
    374              1,//статус iocmd1
    375              "Вых О-функция 8"
    376            },
    377            {
    378              1,//статус iocmd1
    379              "Пуск О-функция 9"
    380            },
    381            {
    382              1,//статус iocmd1
    383              "Вых О-функция 9"
    384            },
    385            {
    386              1,//статус iocmd1
    387              "Пуск О-функция 10"
    388            },
    389            {
    390              1,//статус iocmd1
    391              "Вых О-функция 10"
    392            },
    393            {
    394              1,//статус iocmd1
    395              "Пуск О-функция 11"
    396            },
    397            {
    398              1,//статус iocmd1
    399              "Вых О-функция 11"
    400            },
    401            {
    402              1,//статус iocmd1
    403              "Пуск О-функция 12"
    404            },
    405            {
    406              1,//статус iocmd1
    407              "Вых О-функция 12"
    408            },
    409            {
    410              1,//статус iocmd1
    411              "Пуск О-функция 13"
    412            },
    413            {
    414              1,//статус iocmd1
    415              "Вых О-функция 13"
    416            },
    417            {
    418              1,//статус iocmd1
    419              "Пуск О-функция 14"
    420            },
    421            {
    422              1,//статус iocmd1
    423              "Вых О-функция 14"
    424            },
    425            {
    426              1,//статус iocmd1
    427              "Пуск О-функция 15"
    428            },
    429            {
    430              1,//статус iocmd1
    431              "Вых О-функция 15"
    432            },
    433            {
    434              1,//статус iocmd1
    435              "Пуск О-функция 16"
    436            },
    437            {
    438              1,//статус iocmd1
    439              "Вых О-функция 16"
    440            },
    441          
    442            {
    443              1,//статус iocmd1
    444              "ВКЛ О-Триггер 1"
    445            },
    446            {
    447              1,//статус iocmd1
    448              "ОТКЛ О-Триггер 1"
    449            },
    450            {
    451              1,//статус iocmd1
    452              "Вых О-Триггер 1"
    453            },
    454            {
    455              1,//статус iocmd1
    456              "ВКЛ О-Триггер 2"
    457            },
    458            {
    459              1,//статус iocmd1
    460              "ОТКЛ О-Триггер 2"
    461            },
    462            {
    463              1,//статус iocmd1
    464              "Вых О-Триггер 2"
    465            },
    466            {
    467              1,//статус iocmd1
    468              "ВКЛ О-Триггер 3"
    469            },
    470            {
    471              1,//статус iocmd1
    472              "ОТКЛ О-Триггер 3"
    473            },
    474            {
    475              1,//статус iocmd1
    476              "Вых О-Триггер 3"
    477            },
    478            {
    479              1,//статус iocmd1
    480              "ВКЛ О-Триггер 4"
    481            },
    482            {
    483              1,//статус iocmd1
    484              "ОТКЛ О-Триггер 4"
    485            },
    486            {
    487              1,//статус iocmd1
    488              "Вых О-Триггер 4"
    489            },
    490            {
    491              1,//статус iocmd1
    492              "ВКЛ О-Триггер 5"
    493            },
    494            {
    495              1,//статус iocmd1
    496              "ОТКЛ О-Триггер 5"
    497            },
    498            {
    499              1,//статус iocmd1
    500              "Вых О-Триггер 5"
    501            },
    502            {
    503              1,//статус iocmd1
    504              "ВКЛ О-Триггер 6"
    505            },
    506            {
    507              1,//статус iocmd1
    508              "ОТКЛ О-Триггер 6"
    509            },
    510            {
    511              1,//статус iocmd1
    512              "Вых О-Триггер 6"
    513            },
    514            {
    515              1,//статус iocmd1
    516              "ВКЛ О-Триггер 7"
    517            },
    518            {
    519              1,//статус iocmd1
    520              "ОТКЛ О-Триггер 7"
    521            },
    522            {
    523              1,//статус iocmd1
    524              "Вых О-Триггер 7"
    525            },
    526            {
    527              1,//статус iocmd1
    528              "ВКЛ О-Триггер 8"
    529            },
    530            {
    531              1,//статус iocmd1
    532              "ОТКЛ О-Триггер 8"
    533            },
    534            {
    535              1,//статус iocmd1
    536              "Вых О-Триггер 8"
    537            },
    538          };
    539          
    540          LineMenuItem sub_menu_comp_OF[8] =
    541          {
    542            { "Опред функции", NULL},//title
    543            { &CONTROL1_COMP, &sub_menu_cnf, typeMenuSub},//control_item, parent
    544            { "Таймера ОФ",    (void *)&UstListCompOF, typeMenuProg},
    545            { "Управление ОФ", (void *)&UprListCompOF, typeMenuProg},
    546            { NULL, NULL}
    547          };
    548          
    549          LineMenuItem sub_menu_ust_compOF[] =
    550          {
    551            { "Таймера Опред функций", NULL},//title
    552            { &CONTROL2_COMP, sub_menu_comp_OF, typeMenuList},//control_item, parent
    553          /*
    554            { "Таймер паузы ОФ1",  (void *)&UstCompOF, typeMenuProg},
    555            { "Таймер работы ОФ1", (void *)&UstCompOF, typeMenuProg},
    556            { "Таймер паузы ОФ2",  (void *)&UstCompOF, typeMenuProg},
    557            { "Таймер работы ОФ2", (void *)&UstCompOF, typeMenuProg},
    558            { "Таймер паузы ОФ3",  (void *)&UstCompOF, typeMenuProg},
    559            { "Таймер работы ОФ3", (void *)&UstCompOF, typeMenuProg},
    560            { "Таймер паузы ОФ4",  (void *)&UstCompOF, typeMenuProg},
    561            { "Таймер работы ОФ4", (void *)&UstCompOF, typeMenuProg},
    562            { "Таймер паузы ОФ5",  (void *)&UstCompOF, typeMenuProg},
    563            { "Таймер работы ОФ5", (void *)&UstCompOF, typeMenuProg},
    564            { "Таймер паузы ОФ6",  (void *)&UstCompOF, typeMenuProg},
    565            { "Таймер работы ОФ6", (void *)&UstCompOF, typeMenuProg},
    566            { "Таймер паузы ОФ7",  (void *)&UstCompOF, typeMenuProg},
    567            { "Таймер работы ОФ7", (void *)&UstCompOF, typeMenuProg},
    568            { "Таймер паузы ОФ8",  (void *)&UstCompOF, typeMenuProg},
    569            { "Таймер работы ОФ8", (void *)&UstCompOF, typeMenuProg},
    570            { "Таймер паузы ОФ9",  (void *)&UstCompOF, typeMenuProg},
    571            { "Таймер работы ОФ9", (void *)&UstCompOF, typeMenuProg},
    572            { "Таймер паузы ОФ10",  (void *)&UstCompOF, typeMenuProg},
    573            { "Таймер работы ОФ10", (void *)&UstCompOF, typeMenuProg},
    574            { "Таймер паузы ОФ11",  (void *)&UstCompOF, typeMenuProg},
    575            { "Таймер работы ОФ11", (void *)&UstCompOF, typeMenuProg},
    576            { "Таймер паузы ОФ12",  (void *)&UstCompOF, typeMenuProg},
    577            { "Таймер работы ОФ12", (void *)&UstCompOF, typeMenuProg},
    578            { "Таймер паузы ОФ13",  (void *)&UstCompOF, typeMenuProg},
    579            { "Таймер работы ОФ13", (void *)&UstCompOF, typeMenuProg},
    580            { "Таймер паузы ОФ14",  (void *)&UstCompOF, typeMenuProg},
    581            { "Таймер работы ОФ14", (void *)&UstCompOF, typeMenuProg},
    582            { "Таймер паузы ОФ15",  (void *)&UstCompOF, typeMenuProg},
    583            { "Таймер работы ОФ15", (void *)&UstCompOF, typeMenuProg},
    584            { "Таймер паузы ОФ16",  (void *)&UstCompOF, typeMenuProg},
    585            { "Таймер работы ОФ16", (void *)&UstCompOF, typeMenuProg},
    586          */
    587            { NULL, NULL}
    588          
    589          };
    590          
    591          LineMenuItem sub_menu_upr_compOF[] =
    592          {
    593            { "Управл Опред функций", NULL},//title
    594            { &CONTROL2_COMP, sub_menu_comp_OF, typeMenuList},//control_item, parent
    595          /*
    596            { "Тип ОФ1",  (void *)&UprCompOF, typeMenuProg},
    597            { "Тип ОФ2",  (void *)&UprCompOF, typeMenuProg},
    598            { "Тип ОФ3",  (void *)&UprCompOF, typeMenuProg},
    599            { "Тип ОФ4",  (void *)&UprCompOF, typeMenuProg},
    600            { "Тип ОФ5",  (void *)&UprCompOF, typeMenuProg},
    601            { "Тип ОФ6",  (void *)&UprCompOF, typeMenuProg},
    602            { "Тип ОФ7",  (void *)&UprCompOF, typeMenuProg},
    603            { "Тип ОФ8",  (void *)&UprCompOF, typeMenuProg},
    604            { "Тип ОФ9",  (void *)&UprCompOF, typeMenuProg},
    605            { "Тип ОФ10",  (void *)&UprCompOF, typeMenuProg},
    606            { "Тип ОФ11",  (void *)&UprCompOF, typeMenuProg},
    607            { "Тип ОФ12",  (void *)&UprCompOF, typeMenuProg},
    608            { "Тип ОФ13",  (void *)&UprCompOF, typeMenuProg},
    609            { "Тип ОФ14",  (void *)&UprCompOF, typeMenuProg},
    610            { "Тип ОФ15",  (void *)&UprCompOF, typeMenuProg},
    611            { "Тип ОФ16",  (void *)&UprCompOF, typeMenuProg},
    612          */
    613            { NULL, NULL}
    614          
    615          };
    616          
    617          void PereinitUstListCompOF(short flg)
    618          {
    619          //переиниц
    620            //инит компонентного контроля
    621            TxtStreamInit(&CONTROL2_COMP, &KadrMenuFormat_ust_compOF, NULL);//инит control и формир кадра
    622            if(flg==0)//END
    623            {
    624              TxtStreamSetEnd(&CONTROL2_COMP, SIZE_PAGE_VIEW/2);//перейти на END
    625            }//if
    626          
    627            ViewDiskrMenuList();//вывести окно отображения
    628            ListPStr();//доступ к уставкам
    629          }//PereinitUstListComp2()
    630          
    631          void UstListCompOF()
    632          {
    633            SelectorMNGBAZA(0);//установка базу уставок
    634          
    635            SelectorSUBMENU(sub_menu_ust_compOF);//уcтановить текущее субменю
    636          
    637            SelectorTEXTCONTROL(&CONTROL2_COMP);//текущий control
    638          
    639            SelectorFHOME(&PereinitUstListCompOF);//указатель на ф-цию HOME
    640            InitFHOME(1);//exe ф-цию HOME
    641          
    642            LanderUpDown();//wkl Up Down
    643          }//UstListCompOF()
    644          
    645          void UstCompOF()
    646          {
    647            SelectorCRRLIGHTLINE();//найти подсвеченную строку текущего текст потока
    648            PrepareEditMenu(sub_menu_ust_compOF);
    649            PassWord(EditUstOF);
    650          }//VidCompOF()
    651          
    652          void EditUstOF()
    653          {
    654          //редактировать уставку
    655            SystemEditUst(sub_menu_ust_compOF);//[LIGHTLINEMENU +1+SUBDATA].Line1, LIGHTLINEMENU);
    656          }//UstCompOF()
    657          
    658          short  KadrMenuFormat_ust_compOF(void *pstr)
    659          {
    660           WorkControl *workCntr = (WorkControl *)pstr;
    661          //формирователь кадра
    662            char locTxt[50];
    663            RESET_COUNTER;//сброс счетчиков
    664            for(int i=0;; i++)
    665            {
    666          //критерий терминатора
    667              if(sub_menu_ust_compOF[i+1+SUBDATA].Line1==NULL)break;
    668          
    669              COMPARE_COUNTER
    670              {
    671                strcpy((char *)workCntr->twoString, (char *)sub_menu_ust_compOF[i+1+SUBDATA].Line1);
    672                sprintf(locTxt, "   %d", getUstOffsetMngUSTAVKI(i));
    673                strcpy((char *)workCntr->twoString + sizeof(WorkVariantChar)/2, locTxt);
    674                return 1;//сравнить счетчики кадров
    675              }
    676            }//for
    677          
    678            return 1;
    679          }//KadrMenuFormat_ust_compOF(void *pstr)
    680          
    681          //--------------------------------------------------
    682          
    683          void PereinitUprListCompOF(short flg)
    684          {
    685          //переиниц
    686            //инит компонентного контроля
    687            TxtStreamInit(&CONTROL2_COMP, &KadrMenuFormat_upr_compOF, NULL);//инит control и формир кадра
    688            if(flg==0)//END
    689            {
    690              TxtStreamSetEnd(&CONTROL2_COMP, SIZE_PAGE_VIEW/2);//перейти на END
    691            }//if
    692          
    693            ViewDiskrMenuList();//вывести окно отображения
    694            ListPStr();//доступ к уставкам
    695          }//PereinitUstListComp2()
    696          
    697          void UprListCompOF()
    698          {
    699            SelectorMNGBAZA(MNGUPR_OF);//установка базы уставок
    700          
    701            SelectorSUBMENU(sub_menu_upr_compOF);//утановить текущее субменю
    702          
    703            SelectorTEXTCONTROL(&CONTROL2_COMP);//текущий control
    704          
    705            SelectorFHOME(&PereinitUprListCompOF);//указатель на ф-цию HOME
    706            InitFHOME(1);//exe ф-цию HOME
    707          
    708            LanderUpDown();//wkl Up Down
    709          }//VidListCompOF()
    710          
    711          void UprCompOF()
    712          {
    713            SelectorCRRLIGHTLINE();//найти подсвеченную строку текущего текст потока
    714            PrepareEditMenu(sub_menu_upr_compOF);
    715            PassWord(EditUprOF);
    716          
    717          }//UprCompOF()
    718          
    719          void EditUprOF()
    720          {
    721          //редактировать уставку упр
    722            char *nameUpr = (char *)sub_menu_upr_compOF[LIGHTLINEMENU +1+SUBDATA].Line1;
    723            UpravlRedactor(nameUpr, LIGHTLINEMENU, &selectorUprStrOF);//редактировать уставку управления
    724          }//EditUprOF()
    725          
    726          short  KadrMenuFormat_upr_compOF(void *pstr)
    727          {
    728           WorkControl *workCntr = (WorkControl *)pstr;
    729          //формирователь кадра
    730            RESET_COUNTER;//сброс счетчиков
    731            for(int i=0;; i++)
    732            {
    733          //критерий терминатора
    734              char *nameUpr = (char *)sub_menu_upr_compOF[i+1+SUBDATA].Line1;
    735              if(nameUpr==NULL) break;
    736          
    737              COMPARE_COUNTER
    738              {
    739                strcpy((char *)workCntr->twoString, nameUpr);
    740                strcpy((char *)workCntr->twoString + sizeof(WorkVariantChar)/2,
    741                selectorUprStrOF(i, getCurrentMngUSTAVKI()));
    742          
    743                return 1;//сравнить счетчики кадров
    744              }
    745            }//for
    746          
    747            return 1;
    748          }//KadrMenuFormat_upr_compOF(WorkControl *workCntr)
    749          
    750          char *selectorUprStrOF(short iBit, UNS_32 ustUpr)
    751          {
    752            switch(iBit)
    753            {
    754          
    755            default:;
    756            }//switch
    757              if(NumBitCheckWord(iBit, &ustUpr)) return bitStringUNI[UNIUPR_OBRAT];
    758              return bitStringUNI[UNIUPR_PRJAM];
    759          }//selectorUprStrOF(short ibit, UNS_32 ustUpr)
    760          
    761          int initUstOF(char init)
    762          {
    763            //инициал уставок
    764            if (init)
    765            {
    766          //OF1
    767              //таймер паузы
    768              tmpUSTAVKI[MNGPAUSA_OF1] = 41;
    769              //таймер работы
    770              tmpUSTAVKI[MNGWORK_OF1] = 45;
    771          //OF2
    772              //таймер паузы
    773              tmpUSTAVKI[MNGPAUSA_OF2] = 42;
    774              //таймер работы
    775              tmpUSTAVKI[MNGWORK_OF2] = 46;
    776          //OF3
    777              //таймер паузы
    778              tmpUSTAVKI[MNGPAUSA_OF3] = 43;
    779              //таймер работы
    780              tmpUSTAVKI[MNGWORK_OF3] = 47;
    781          //OF4
    782              //таймер паузы
    783              tmpUSTAVKI[MNGPAUSA_OF4] = 44;
    784              //таймер работы
    785              tmpUSTAVKI[MNGWORK_OF4] = 48;
    786          //OF5
    787              //таймер паузы
    788              tmpUSTAVKI[MNGPAUSA_OF5] = 45;
    789              //таймер работы
    790              tmpUSTAVKI[MNGWORK_OF5] = 49;
    791          //OF6
    792              //таймер паузы
    793              tmpUSTAVKI[MNGPAUSA_OF6] = 46;
    794              //таймер работы
    795              tmpUSTAVKI[MNGWORK_OF6] = 50;
    796          //OF7
    797              //таймер паузы
    798              tmpUSTAVKI[MNGPAUSA_OF7] = 47;
    799              //таймер работы
    800              tmpUSTAVKI[MNGWORK_OF7] = 51;
    801          //OF8
    802              //таймер паузы
    803              tmpUSTAVKI[MNGPAUSA_OF8] = 48;
    804              //таймер работы
    805              tmpUSTAVKI[MNGWORK_OF8] = 52;
    806          //OF9
    807              //таймер паузы
    808              tmpUSTAVKI[MNGPAUSA_OF9] = 49;
    809              //таймер работы
    810              tmpUSTAVKI[MNGWORK_OF9] = 53;
    811          //OF10
    812              //таймер паузы
    813              tmpUSTAVKI[MNGPAUSA_OF10] = 50;
    814              //таймер работы
    815              tmpUSTAVKI[MNGWORK_OF10] = 54;
    816          //OF11
    817              //таймер паузы
    818              tmpUSTAVKI[MNGPAUSA_OF11] = 51;
    819              //таймер работы
    820              tmpUSTAVKI[MNGWORK_OF11] = 55;
    821          //OF12
    822              //таймер паузы
    823              tmpUSTAVKI[MNGPAUSA_OF12] = 52;
    824              //таймер работы
    825              tmpUSTAVKI[MNGWORK_OF12] = 56;
    826          //OF13
    827              //таймер паузы
    828              tmpUSTAVKI[MNGPAUSA_OF13] = 53;
    829              //таймер работы
    830              tmpUSTAVKI[MNGWORK_OF13] = 57;
    831          //OF14
    832              //таймер паузы
    833              tmpUSTAVKI[MNGPAUSA_OF14] = 54;
    834              //таймер работы
    835              tmpUSTAVKI[MNGWORK_OF14] = 58;
    836          //OF15
    837              //таймер паузы
    838              tmpUSTAVKI[MNGPAUSA_OF15] = 55;
    839              //таймер работы
    840              tmpUSTAVKI[MNGWORK_OF15] = 59;
    841          //OF16
    842              //таймер паузы
    843              tmpUSTAVKI[MNGPAUSA_OF16] = 56;
    844              //таймер работы
    845              tmpUSTAVKI[MNGWORK_OF16] = 60;
    846          
    847          //уставка управления
    848              tmpUSTAVKI[MNGUPR_OF] = 0;
    849            }//if
    850          
    851            IndexUstSPV += SPVUST_OF_TOTAL;//индекс уставок в супервизоре
    852            return MNGUST_OF_TOTAL;//к-во уставок в менеджере уставок
    853          }//initUstOF(short mngUst, char init)
    854          
    855          void  prepareUstOF(short idxC)
    856          {
    857            //подготовка ENA команд для клона
    858            if(idxC>=0){
    859            //копировать ENA из WideENA в ENAcmd
    860            CopyWideENAToENAcmd(PrepareENACmd(idxC, MNGUPR_OF), ENACMD_OF_TOTAL);
    861            //подготовка уставок
    862            short tmpOffsetT    =
    863              getOffsetTimersCnf(idxC);   //компонент в конфигурации
    864          
    865          //OF1
    866              //таймер паузы
    867             setTimerPorog(tmpOffsetT+ TIMERP_OF1,
    868                    codecUstOF(1, MNGPAUSA_OF1, getNativUstMngUSTAVKI(idxC, MNGPAUSA_OF1)));
    869              //таймер работы
    870             setTimerPorog(tmpOffsetT+ TIMERR_OF1,
    871                    codecUstOF(1, MNGWORK_OF1, getNativUstMngUSTAVKI(idxC, MNGWORK_OF1)));
    872          //OF2
    873              //таймер паузы
    874             setTimerPorog(tmpOffsetT+ TIMERP_OF2,
    875                    codecUstOF(1, MNGPAUSA_OF2, getNativUstMngUSTAVKI(idxC, MNGPAUSA_OF2)));
    876              //таймер работы
    877             setTimerPorog(tmpOffsetT+ TIMERR_OF2,
    878                    codecUstOF(1, MNGWORK_OF2, getNativUstMngUSTAVKI(idxC, MNGWORK_OF2)));
    879          //OF3
    880              //таймер паузы
    881             setTimerPorog(tmpOffsetT+ TIMERP_OF3,
    882                    codecUstOF(1, MNGPAUSA_OF3, getNativUstMngUSTAVKI(idxC, MNGPAUSA_OF3)));
    883              //таймер работы
    884             setTimerPorog(tmpOffsetT+ TIMERR_OF3,
    885                    codecUstOF(1, MNGWORK_OF3, getNativUstMngUSTAVKI(idxC, MNGWORK_OF3)));
    886          //OF4
    887              //таймер паузы
    888             setTimerPorog(tmpOffsetT+ TIMERP_OF4,
    889                    codecUstOF(1, MNGPAUSA_OF4, getNativUstMngUSTAVKI(idxC, MNGPAUSA_OF4)));
    890              //таймер работы
    891             setTimerPorog(tmpOffsetT+ TIMERR_OF4,
    892                    codecUstOF(1, MNGWORK_OF4, getNativUstMngUSTAVKI(idxC, MNGWORK_OF4)));
    893          //OF5
    894              //таймер паузы
    895             setTimerPorog(tmpOffsetT+ TIMERP_OF5,
    896                    codecUstOF(1, MNGPAUSA_OF5, getNativUstMngUSTAVKI(idxC, MNGPAUSA_OF5)));
    897              //таймер работы
    898             setTimerPorog(tmpOffsetT+ TIMERR_OF5,
    899                    codecUstOF(1, MNGWORK_OF5, getNativUstMngUSTAVKI(idxC, MNGWORK_OF5)));
    900          //OF6
    901              //таймер паузы
    902             setTimerPorog(tmpOffsetT+ TIMERP_OF6,
    903                    codecUstOF(1, MNGPAUSA_OF6, getNativUstMngUSTAVKI(idxC, MNGPAUSA_OF6)));
    904              //таймер работы
    905             setTimerPorog(tmpOffsetT+ TIMERR_OF6,
    906                    codecUstOF(1, MNGWORK_OF6, getNativUstMngUSTAVKI(idxC, MNGWORK_OF6)));
    907          //OF7
    908              //таймер паузы
    909             setTimerPorog(tmpOffsetT+ TIMERP_OF7,
    910                    codecUstOF(1, MNGPAUSA_OF7, getNativUstMngUSTAVKI(idxC, MNGPAUSA_OF7)));
    911              //таймер работы
    912             setTimerPorog(tmpOffsetT+ TIMERR_OF7,
    913                    codecUstOF(1, MNGWORK_OF7, getNativUstMngUSTAVKI(idxC, MNGWORK_OF7)));
    914          //OF8
    915              //таймер паузы
    916             setTimerPorog(tmpOffsetT+ TIMERP_OF8,
    917                    codecUstOF(1, MNGPAUSA_OF8, getNativUstMngUSTAVKI(idxC, MNGPAUSA_OF8)));
    918              //таймер работы
    919             setTimerPorog(tmpOffsetT+ TIMERR_OF8,
    920                    codecUstOF(1, MNGWORK_OF8, getNativUstMngUSTAVKI(idxC, MNGWORK_OF8)));
    921          //OF9
    922              //таймер паузы
    923             setTimerPorog(tmpOffsetT+ TIMERP_OF9,
    924                    codecUstOF(1, MNGPAUSA_OF9, getNativUstMngUSTAVKI(idxC, MNGPAUSA_OF9)));
    925              //таймер работы
    926             setTimerPorog(tmpOffsetT+ TIMERR_OF9,
    927                    codecUstOF(1, MNGWORK_OF9, getNativUstMngUSTAVKI(idxC, MNGWORK_OF9)));
    928          //OF10
    929              //таймер паузы
    930             setTimerPorog(tmpOffsetT+ TIMERP_OF10,
    931                    codecUstOF(1, MNGPAUSA_OF10, getNativUstMngUSTAVKI(idxC, MNGPAUSA_OF10)));
    932              //таймер работы
    933             setTimerPorog(tmpOffsetT+ TIMERR_OF10,
    934                    codecUstOF(1, MNGWORK_OF10, getNativUstMngUSTAVKI(idxC, MNGWORK_OF10)));
    935          //OF11
    936              //таймер паузы
    937             setTimerPorog(tmpOffsetT+ TIMERP_OF11,
    938                    codecUstOF(1, MNGPAUSA_OF11, getNativUstMngUSTAVKI(idxC, MNGPAUSA_OF11)));
    939              //таймер работы
    940             setTimerPorog(tmpOffsetT+ TIMERR_OF11,
    941                    codecUstOF(1, MNGWORK_OF11, getNativUstMngUSTAVKI(idxC, MNGWORK_OF11)));
    942          //OF12
    943              //таймер паузы
    944             setTimerPorog(tmpOffsetT+ TIMERP_OF12,
    945                    codecUstOF(1, MNGPAUSA_OF12, getNativUstMngUSTAVKI(idxC, MNGPAUSA_OF12)));
    946              //таймер работы
    947             setTimerPorog(tmpOffsetT+ TIMERR_OF12,
    948                    codecUstOF(1, MNGWORK_OF12, getNativUstMngUSTAVKI(idxC, MNGWORK_OF12)));
    949          //OF13
    950              //таймер паузы
    951             setTimerPorog(tmpOffsetT+ TIMERP_OF13,
    952                    codecUstOF(1, MNGPAUSA_OF13, getNativUstMngUSTAVKI(idxC, MNGPAUSA_OF13)));
    953              //таймер работы
    954             setTimerPorog(tmpOffsetT+ TIMERR_OF13,
    955                    codecUstOF(1, MNGWORK_OF13, getNativUstMngUSTAVKI(idxC, MNGWORK_OF13)));
    956          //OF14
    957              //таймер паузы
    958             setTimerPorog(tmpOffsetT+ TIMERP_OF14,
    959                    codecUstOF(1, MNGPAUSA_OF14, getNativUstMngUSTAVKI(idxC, MNGPAUSA_OF14)));
    960              //таймер работы
    961             setTimerPorog(tmpOffsetT+ TIMERR_OF14,
    962                    codecUstOF(1, MNGWORK_OF14, getNativUstMngUSTAVKI(idxC, MNGWORK_OF14)));
    963          //OF15
    964              //таймер паузы
    965             setTimerPorog(tmpOffsetT+ TIMERP_OF15,
    966                    codecUstOF(1, MNGPAUSA_OF15, getNativUstMngUSTAVKI(idxC, MNGPAUSA_OF15)));
    967              //таймер работы
    968             setTimerPorog(tmpOffsetT+ TIMERR_OF15,
    969                    codecUstOF(1, MNGWORK_OF15, getNativUstMngUSTAVKI(idxC, MNGWORK_OF15)));
    970          //OF16
    971              //таймер паузы
    972             setTimerPorog(tmpOffsetT+ TIMERP_OF16,
    973                    codecUstOF(1, MNGPAUSA_OF16, getNativUstMngUSTAVKI(idxC, MNGPAUSA_OF16)));
    974              //таймер работы
    975             setTimerPorog(tmpOffsetT+ TIMERR_OF16,
    976                    codecUstOF(1, MNGWORK_OF16, getNativUstMngUSTAVKI(idxC, MNGWORK_OF16)));
    977            }//if
    978            else{
    979            //подготовка ENA команд для клона РЛ
    980            //копировать ENA из WideENA в ENAcmd
    981            CopyWideENAToENAcmd_WL(PrepareENACmd(idxC, MNGUPR_OF), ENACMD_OF_TOTAL);
    982            //подготовка уставок
    983            short tmpOffsetT    =
    984              getOffsetTimersCnf_WL(idxC);   //компонент в конфигурации
    985          
    986          //OF1
    987              //таймер паузы
    988             setTimerPorog_WL(tmpOffsetT+ TIMERP_OF1,
    989                    codecUstOF(1, MNGPAUSA_OF1, getNativUstMngUSTAVKI(idxC, MNGPAUSA_OF1)));
    990              //таймер работы
    991             setTimerPorog_WL(tmpOffsetT+ TIMERR_OF1,
    992                    codecUstOF(1, MNGWORK_OF1, getNativUstMngUSTAVKI(idxC, MNGWORK_OF1)));
    993          //OF2
    994              //таймер паузы
    995             setTimerPorog_WL(tmpOffsetT+ TIMERP_OF2,
    996                    codecUstOF(1, MNGPAUSA_OF2, getNativUstMngUSTAVKI(idxC, MNGPAUSA_OF2)));
    997              //таймер работы
    998             setTimerPorog_WL(tmpOffsetT+ TIMERR_OF2,
    999                    codecUstOF(1, MNGWORK_OF2, getNativUstMngUSTAVKI(idxC, MNGWORK_OF2)));
   1000          //OF3
   1001              //таймер паузы
   1002             setTimerPorog_WL(tmpOffsetT+ TIMERP_OF3,
   1003                    codecUstOF(1, MNGPAUSA_OF3, getNativUstMngUSTAVKI(idxC, MNGPAUSA_OF3)));
   1004              //таймер работы
   1005             setTimerPorog_WL(tmpOffsetT+ TIMERR_OF3,
   1006                    codecUstOF(1, MNGWORK_OF3, getNativUstMngUSTAVKI(idxC, MNGWORK_OF3)));
   1007          //OF4
   1008              //таймер паузы
   1009             setTimerPorog_WL(tmpOffsetT+ TIMERP_OF4,
   1010                    codecUstOF(1, MNGPAUSA_OF4, getNativUstMngUSTAVKI(idxC, MNGPAUSA_OF4)));
   1011              //таймер работы
   1012             setTimerPorog_WL(tmpOffsetT+ TIMERR_OF4,
   1013                    codecUstOF(1, MNGWORK_OF4, getNativUstMngUSTAVKI(idxC, MNGWORK_OF4)));
   1014          //OF5
   1015              //таймер паузы
   1016             setTimerPorog_WL(tmpOffsetT+ TIMERP_OF5,
   1017                    codecUstOF(1, MNGPAUSA_OF5, getNativUstMngUSTAVKI(idxC, MNGPAUSA_OF5)));
   1018              //таймер работы
   1019             setTimerPorog_WL(tmpOffsetT+ TIMERR_OF5,
   1020                    codecUstOF(1, MNGWORK_OF5, getNativUstMngUSTAVKI(idxC, MNGWORK_OF5)));
   1021          //OF6
   1022              //таймер паузы
   1023             setTimerPorog_WL(tmpOffsetT+ TIMERP_OF6,
   1024                    codecUstOF(1, MNGPAUSA_OF6, getNativUstMngUSTAVKI(idxC, MNGPAUSA_OF6)));
   1025              //таймер работы
   1026             setTimerPorog_WL(tmpOffsetT+ TIMERR_OF6,
   1027                    codecUstOF(1, MNGWORK_OF6, getNativUstMngUSTAVKI(idxC, MNGWORK_OF6)));
   1028          //OF7
   1029              //таймер паузы
   1030             setTimerPorog_WL(tmpOffsetT+ TIMERP_OF7,
   1031                    codecUstOF(1, MNGPAUSA_OF7, getNativUstMngUSTAVKI(idxC, MNGPAUSA_OF7)));
   1032              //таймер работы
   1033             setTimerPorog_WL(tmpOffsetT+ TIMERR_OF7,
   1034                    codecUstOF(1, MNGWORK_OF7, getNativUstMngUSTAVKI(idxC, MNGWORK_OF7)));
   1035          //OF8
   1036              //таймер паузы
   1037             setTimerPorog_WL(tmpOffsetT+ TIMERP_OF8,
   1038                    codecUstOF(1, MNGPAUSA_OF8, getNativUstMngUSTAVKI(idxC, MNGPAUSA_OF8)));
   1039              //таймер работы
   1040             setTimerPorog_WL(tmpOffsetT+ TIMERR_OF8,
   1041                    codecUstOF(1, MNGWORK_OF8, getNativUstMngUSTAVKI(idxC, MNGWORK_OF8)));
   1042          //OF9
   1043              //таймер паузы
   1044             setTimerPorog_WL(tmpOffsetT+ TIMERP_OF9,
   1045                    codecUstOF(1, MNGPAUSA_OF9, getNativUstMngUSTAVKI(idxC, MNGPAUSA_OF9)));
   1046              //таймер работы
   1047             setTimerPorog_WL(tmpOffsetT+ TIMERR_OF9,
   1048                    codecUstOF(1, MNGWORK_OF9, getNativUstMngUSTAVKI(idxC, MNGWORK_OF9)));
   1049          //OF10
   1050              //таймер паузы
   1051             setTimerPorog_WL(tmpOffsetT+ TIMERP_OF10,
   1052                    codecUstOF(1, MNGPAUSA_OF10, getNativUstMngUSTAVKI(idxC, MNGPAUSA_OF10)));
   1053              //таймер работы
   1054             setTimerPorog_WL(tmpOffsetT+ TIMERR_OF10,
   1055                    codecUstOF(1, MNGWORK_OF10, getNativUstMngUSTAVKI(idxC, MNGWORK_OF10)));
   1056          //OF11
   1057              //таймер паузы
   1058             setTimerPorog_WL(tmpOffsetT+ TIMERP_OF11,
   1059                    codecUstOF(1, MNGPAUSA_OF11, getNativUstMngUSTAVKI(idxC, MNGPAUSA_OF11)));
   1060              //таймер работы
   1061             setTimerPorog_WL(tmpOffsetT+ TIMERR_OF11,
   1062                    codecUstOF(1, MNGWORK_OF11, getNativUstMngUSTAVKI(idxC, MNGWORK_OF11)));
   1063          //OF12
   1064              //таймер паузы
   1065             setTimerPorog_WL(tmpOffsetT+ TIMERP_OF12,
   1066                    codecUstOF(1, MNGPAUSA_OF12, getNativUstMngUSTAVKI(idxC, MNGPAUSA_OF12)));
   1067              //таймер работы
   1068             setTimerPorog_WL(tmpOffsetT+ TIMERR_OF12,
   1069                    codecUstOF(1, MNGWORK_OF12, getNativUstMngUSTAVKI(idxC, MNGWORK_OF12)));
   1070          //OF13
   1071              //таймер паузы
   1072             setTimerPorog_WL(tmpOffsetT+ TIMERP_OF13,
   1073                    codecUstOF(1, MNGPAUSA_OF13, getNativUstMngUSTAVKI(idxC, MNGPAUSA_OF13)));
   1074              //таймер работы
   1075             setTimerPorog_WL(tmpOffsetT+ TIMERR_OF13,
   1076                    codecUstOF(1, MNGWORK_OF13, getNativUstMngUSTAVKI(idxC, MNGWORK_OF13)));
   1077          //OF14
   1078              //таймер паузы
   1079             setTimerPorog_WL(tmpOffsetT+ TIMERP_OF14,
   1080                    codecUstOF(1, MNGPAUSA_OF14, getNativUstMngUSTAVKI(idxC, MNGPAUSA_OF14)));
   1081              //таймер работы
   1082             setTimerPorog_WL(tmpOffsetT+ TIMERR_OF14,
   1083                    codecUstOF(1, MNGWORK_OF14, getNativUstMngUSTAVKI(idxC, MNGWORK_OF14)));
   1084          //OF15
   1085              //таймер паузы
   1086             setTimerPorog_WL(tmpOffsetT+ TIMERP_OF15,
   1087                    codecUstOF(1, MNGPAUSA_OF15, getNativUstMngUSTAVKI(idxC, MNGPAUSA_OF15)));
   1088              //таймер работы
   1089             setTimerPorog_WL(tmpOffsetT+ TIMERR_OF15,
   1090                    codecUstOF(1, MNGWORK_OF15, getNativUstMngUSTAVKI(idxC, MNGWORK_OF15)));
   1091          //OF16
   1092              //таймер паузы
   1093             setTimerPorog_WL(tmpOffsetT+ TIMERP_OF16,
   1094                    codecUstOF(1, MNGPAUSA_OF16, getNativUstMngUSTAVKI(idxC, MNGPAUSA_OF16)));
   1095              //таймер работы
   1096             setTimerPorog_WL(tmpOffsetT+ TIMERR_OF16,
   1097                    codecUstOF(1, MNGWORK_OF16, getNativUstMngUSTAVKI(idxC, MNGWORK_OF16)));
   1098             }//else WL
   1099          }//prepareUstMTZ2(short idxC)
   1100          
   1101          int initIOCmd_OF()
   1102          {
   1103            //инициал IO команд
   1104            offsetIOCmdOF_loc = IndexIO;//смещение для IO OF
   1105            return commonInitIOCmd(IOCMD_OF_TOTAL);
   1106          }
   1107          
   1108          int initTLCmd_OF()
   1109          {
   1110            //инициал TL команд
   1111            return commonInitTLCmd(TLCMD_OF_TOTAL);
   1112          }//initTLCmd_OF()
   1113          
   1114          int initENACmd_OF()
   1115          {
   1116            //инициал ENA команд
   1117            return commonInitENACmd(ENACMD_OF_TOTAL);
   1118          }//initENACmd_OF()
   1119          
   1120          void initTimersOF(short idxC)
   1121          {
   1122            //запрос и инициал таймеров
   1123            if(idxC>=0)
   1124             commonInitTimers(TIMERS_OF_TOTAL);
   1125            else {
   1126             commonInitTimers_WL(TIMERS_OF_TOTAL);
   1127             timerEnableWL = 1;//разрешение работы таймеров РЛ
   1128                 }
   1129          }//initTimersOF()
   1130          
   1131          int codecUstOF(char codec, short offset, int ust)
   1132          //codec=0-кодировать
   1133          //codec=1-раскодировать
   1134          {
   1135            //кодировать-раскодировать уставку
   1136            if(codec) return ust*1;
   1137            return ust/1;
   1138          }//codecUstOF(char *buf, short offset, int ust)
   1139          
   1140          int isDISactiv_OF(int idxC)
   1141          {
   1142           //активность Регистратора ДИС
   1143            return 0;//нет активности
   1144          }//isDISactiv_OF(int idxC)
   1145          
   1146          char copyOFToRepozitar(char packet)
   1147          {
   1148            memset(&rpzcomponent_obj, 0, sizeof(COMPONENT_OBJ));//стереть старое
   1149          //копировать компонент в репозитарий
   1150            rpzcomponent_obj.componentEnable = 1;//разрешение компонента
   1151            rpzcomponent_obj.kodC   = KOD_COMPONENT;         //код компонента
   1152            rpzcomponent_obj.packet = 0;    //номер пакетного компонента
   1153            rpzcomponent_obj.permanent = 0; //перманентный компонент
   1154          
   1155            strcpy(rpzcomponent_obj.nameComponent,  "ОФ");       //имя компонента
   1156            rpzcomponent_obj.sub_menu_component =  sub_menu_comp_OF;//меню компонента
   1157          
   1158            rpzcomponent_obj.cntClon    = 5;   //max к-во клонов
   1159          
   1160            rpzcomponent_obj.initUstMng    = initUstOF;    //инициал уставок
   1161            rpzcomponent_obj.prepareUstSpv = prepareUstOF;//подготовка уставок
   1162            rpzcomponent_obj.initIOCmd     = initIOCmd_OF;      //инициал IO команд
   1163            rpzcomponent_obj.initTLCmd     = initTLCmd_OF;      //инициал TL команд
   1164            rpzcomponent_obj.initENACmd    = initENACmd_OF;     //инициал ENA команд
   1165            rpzcomponent_obj.bo_bvCmd       = NULL; //настройка БО БВ команд
   1166            rpzcomponent_obj.isDISactiv     = isDISactiv_OF; //активность Регистратора ДИС
   1167            rpzcomponent_obj.setBOBVtimer   = NULL; //инициал таймеров БО БВ
   1168          
   1169            rpzcomponent_obj.nameStatusIO = ionsOF;          //имена и статус команд IO
   1170            rpzcomponent_obj.initTimers   = initTimersOF;    //запрос и инициал таймеров
   1171            rpzcomponent_obj.logic        = logicOF;         //логика компонента
   1172          
   1173            rpzcomponent_obj.codecUst = codecUstOF;   //кодировать-раскодировать уставку
   1174          
   1175            return 0;//не пакетная регистрация
   1176          }//
   1177          
   1178          #endif // _HIDE_COMPONENT
   1179          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   EditUprOF
         8   -> UpravlRedactor
       8   EditUstOF
         8   -> SystemEditUst
      24   KadrMenuFormat_upr_compOF
        24   -> getCurrentMngUSTAVKI
        24   -> selectorUprStrOF
        24   -> strcpy
      72   KadrMenuFormat_ust_compOF
        72   -> getUstOffsetMngUSTAVKI
        72   -> sprintf
        72   -> strcpy
       8   PereinitUprListCompOF
         8   -> ListPStr
         8   -> TxtStreamInit
         8   -> TxtStreamSetEnd
         8   -> ViewDiskrMenuList
       8   PereinitUstListCompOF
         8   -> ListPStr
         8   -> TxtStreamInit
         8   -> TxtStreamSetEnd
         8   -> ViewDiskrMenuList
       8   UprCompOF
         8   -> PassWord
         8   -> PrepareEditMenu
         8   -> SelectorCRRLIGHTLINE
       8   UprListCompOF
         8   -> InitFHOME
         8   -> LanderUpDown
         8   -> SelectorFHOME
         8   -> SelectorMNGBAZA
         8   -> SelectorSUBMENU
         8   -> SelectorTEXTCONTROL
       8   UstCompOF
         8   -> PassWord
         8   -> PrepareEditMenu
         8   -> SelectorCRRLIGHTLINE
       8   UstListCompOF
         8   -> InitFHOME
         8   -> LanderUpDown
         8   -> SelectorFHOME
         8   -> SelectorMNGBAZA
         8   -> SelectorSUBMENU
         8   -> SelectorTEXTCONTROL
      12   codecUstOF
        12 __aeabi_idiv
      24   copyOFToRepozitar
        24   -> __aeabi_memset
        24   -> strcpy
       8   initENACmd_OF
         8   -> commonInitENACmd
       8   initIOCmd_OF
         8   -> commonInitIOCmd
       8   initTLCmd_OF
         8   -> commonInitTLCmd
       8   initTimersOF
         8   -> commonInitTimers
         8   -> commonInitTimers_WL
       0   initUstOF
       0   isDISactiv_OF
      16   prepareUstOF
        16   -> CopyWideENAToENAcmd
        16   -> CopyWideENAToENAcmd_WL
        16   -> PrepareENACmd
        16   -> codecUstOF
        16   -> getNativUstMngUSTAVKI
        16   -> getOffsetTimersCnf
        16   -> getOffsetTimersCnf_WL
        16   -> setTimerPorog
        16   -> setTimerPorog_WL
      16   selectorUprStrOF
        16   -> NumBitCheckWord


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable11
       4  ??DataTable11_1
       4  ??DataTable11_2
       4  ??DataTable11_3
       4  ??DataTable11_4
       4  ??DataTable11_5
       4  ??DataTable11_6
       4  ??DataTable11_7
       4  ??DataTable14
       4  ??DataTable14_1
       4  ??DataTable14_10
       4  ??DataTable14_2
       4  ??DataTable14_3
       4  ??DataTable14_4
       4  ??DataTable14_5
       4  ??DataTable14_6
       4  ??DataTable14_7
       4  ??DataTable14_8
       4  ??DataTable14_9
      20  ?_0
      16  ?_1
      20  ?_10
      16  ?_11
      20  ?_12
      16  ?_13
      20  ?_14
      16  ?_15
      20  ?_16
      16  ?_17
      20  ?_18
      20  ?_19
      20  ?_2
      20  ?_20
      20  ?_21
      20  ?_22
      20  ?_23
      20  ?_24
      20  ?_25
      20  ?_26
      20  ?_27
      20  ?_28
      20  ?_29
      16  ?_3
      20  ?_30
      20  ?_31
      16  ?_32
      20  ?_33
      16  ?_34
      16  ?_35
      20  ?_36
      16  ?_37
      16  ?_38
      20  ?_39
      20  ?_4
      16  ?_40
      16  ?_41
      20  ?_42
      16  ?_43
      16  ?_44
      20  ?_45
      16  ?_46
      16  ?_47
      20  ?_48
      16  ?_49
      16  ?_5
      16  ?_50
      20  ?_51
      16  ?_52
      16  ?_53
      20  ?_54
      16  ?_55
      16  ?_56
      12  ?_57
      16  ?_58
      24  ?_59
      20  ?_6
      24  ?_60
       8  ?_61
       4  ?_62
      16  ?_7
      20  ?_8
      16  ?_9
      52  EditUprOF
      16  EditUstOF
     160  KadrMenuFormat_upr_compOF
     188  KadrMenuFormat_ust_compOF
      68  PereinitUprListCompOF
      68  PereinitUstListCompOF
      28  UprCompOF
      52  UprListCompOF
      28  UstCompOF
      52  UstListCompOF
      44  codecUstOF
     272  copyOFToRepozitar
      16  initENACmd_OF
      32  initIOCmd_OF
      16  initTLCmd_OF
      64  initTimersOF
     440  initUstOF
     448  ionsOF
      12  isDISactiv_OF
       4  offsetIOCmdOF
       4  offsetIOCmdOF_loc
    3980  prepareUstOF
      60  selectorUprStrOF
      96  sub_menu_comp_OF
      36  sub_menu_upr_compOF
      36  sub_menu_ust_compOF

 
     8 bytes in section .bss
   616 bytes in section .data
 1 124 bytes in section .rodata
 5 724 bytes in section .text
 
 5 724 bytes of CODE  memory
 1 124 bytes of CONST memory
   624 bytes of DATA  memory

Errors: none
Warnings: none
