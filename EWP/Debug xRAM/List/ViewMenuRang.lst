###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        15/Oct/2015  16:25:09
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  arm
#    Endian       =  little
#    Source file  =  
#        D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\virtualMenu\ViewMenuRang.c
#    Command line =  
#        "D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\virtualMenu\ViewMenuRang.c" -lcN
#        "D:\Program Files\IAR Systems\MYWORK\HR1_0100_00_I720_new2\EWP\Debug
#        xRAM\List\" -o "D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\EWP\Debug xRAM\Obj\" --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=ARM926EJ-S -e
#        --fpu=VFP9-S --dlib_config "D:\Program Files\IAR Systems\Embedded
#        Workbench 7.2\arm\INC\c\DLib_Config_Normal.h" -I "D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\NXP\" -I "D:\Program
#        Files\IAR Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\LIB\include\" -I
#        "D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\inc\" -I "D:\Program
#        Files\IAR Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\Igor\" -I
#        "D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\mal\" -I "D:\Program
#        Files\IAR Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\component\" -I
#        "D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\psupervisor\" -I
#        "D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\virtualMenu\" -I
#        "D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\callbackElement\" -I
#        "D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\logictimers\" -I
#        "D:\Program Files\IAR
#        Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\zonaVRT\" -I "D:\Program
#        Files\IAR Systems\MYWORK\HR1_0100_00_I720_new2\EWP\..\" --interwork
#        --cpu_mode arm -On --use_c++_inline
#    List file    =  
#        D:\Program Files\IAR Systems\MYWORK\HR1_0100_00_I720_new2\EWP\Debug
#        xRAM\List\ViewMenuRang.lst
#    Object file  =  
#        D:\Program Files\IAR Systems\MYWORK\HR1_0100_00_I720_new2\EWP\Debug
#        xRAM\Obj\ViewMenuRang.o
#
###############################################################################

D:\Program Files\IAR Systems\MYWORK\HR1_0100_00_I720_new2\virtualMenu\ViewMenuRang.c
      1          /*
      2          #include <vcl.h>
      3          #include <strstrea.h>
      4          #include <math.h>
      5          #include <mem.h>
      6          #include <fstream.h>
      7          #include <strstrea.h>
      8          #include <iomanip.h>
      9          #pragma hdrstop
     10          
     11          #include "vmenuDis.h"
     12          */
     13          #include <stdio.h>
     14          #include <string.h>
     15          
     16          #include "psuperVisor\supermanager.h"
     17          
     18          #include "bazisdef.h"
     19          #include "virtualMenu\systemmenudef.h"
     20          #include "component\componentdef.h"
     21          #include "virtualMenu\rangmanagerdef.h"
     22          #include "virtualMenu\ustmanagerdef.h"
     23          
     24          #include "virtualMenu\systemmenufnc.h"
     25          #include "virtualMenu\textstreamfnc.h"
     26          #include "virtualMenu\ustmanagerfnc.h"
     27          #include "virtualMenu\rangmanagerfnc.h"
     28          #include "virtualMenu\wideLogManagerfnc.h"
     29          #include "psuperVisor\psvisor_helpfnc.h"
     30          
     31          #include "virtualMenu\viewMenuSub.h"
     32          #include "virtualMenu\viewMenuRang.h"
     33          #include "virtualMenu\viewMenuWideLog.h"
     34          #include "virtualMenu\viewMenuTip.h"
     35          
     36          #include "psupervisor\psupervisor.h"
     37          
     38          #include "..\bazis.h"
     39          
     40          #include "toSpeedOptim.h"
     41          
     42          //номер бита для редактирования
     43          #define RANG_BIT         LIGHTMNGUOFFSET
     44          //к-во открытых команд
     45          #define RANG_CNTOPEN_CMD LIGHTMNGUBAZA
     46          
     47          extern IONAMESTATUS_RANGIR  nameStatusRANGIR[];
     48          extern LineMenuItem sub_menu_editrng[];//редактор ранжир
     49          
     50          extern char titleRang[];
     51          extern COMPONENT_OBJ  cnfCOMPONENT[];
     52          extern StreamControl controlStruct_tip;//управл структура
     53          
     54          extern int workerUniversal1;//данные для работника
     55          extern int workerUniversal2;//данные для работника
     56          extern UNS_32 pActualCMD[];//текущие
     57          extern UNS_32 pRDIScmdMaska[];//регистрацияДИС
     58          extern UNS_32 pAPVcmdMaska[];//APV
     59          extern UNS_32 pUROVcmdMaska[];//UROV
     60          //extern UNS_32 pP1OFcmdMaska[];//P1OF
     61          //extern UNS_32 pP2OFcmdMaska[];//P2OF
     62          //extern UNS_32 pP3OFcmdMaska[];//P3OF
     63          
     64          extern UNS_32 selectorDVLow;//селекция ДВ активный-неактивный для мл 16 DV
     65          extern UNS_32 selectorDVMidd;//селекция ДВ активный-неактивный для cp 16 DV
     66          extern UNS_32 selectorDVHi;//селекция ДВ активный-неактивный для ct 16 DV
     67          extern UNS_32 rele_bdvv1;//селекция реле
     68          
     69          UNS_32 selectorUVVLow;//селекция UVV активный-неактивный для мл 16 UVV
     70          UNS_32 selectorUVVMidd;//селекция UVV активный-неактивный для cp 16 UVV
     71          UNS_32 selectorUVVHi;//селекция UVV активный-неактивный для ct 16 UVV
     72          
     73          char isRangRedactor = 0;//было ли редактировано ранжир
     74          
     75          short  KadrMenuFormat_viewRang(void *pstr)//(WorkControl *workCntr)
     76          {
     77           WorkControl *workCntr = (WorkControl *)pstr;
     78          //формирователь кадра
     79            RESET_COUNTER;//сброс счетчиков
     80            //универсальный просмотр ранжир
     81            Universal_viewRang(workCntr, MngRangGetPointerUVVRANGIRtoEdit(LIGHTRANGUVV));
     82          
     83            return 1;
     84          
     85          }//KadrMenuFormat_viewRang(WorkControl *workCntr)
     86          
     87          short  KadrMenuFormat_viewActual(void *pstr)
     88          {
     89           WorkControl *workCntr = (WorkControl *)pstr;
     90          //формирователь кадра
     91            RESET_COUNTER;//сброс счетчиков
     92            //универсальный просмотр ранжир
     93            Universal_viewRang(workCntr, pActualCMD);
     94          
     95            return 1;
     96          
     97          }//KadrMenuFormat_viewActual(WorkControl *workCntr)
     98          
     99          short  KadrMenuFormat_viewActualDV(void *pstr)
    100          {
    101           WorkControl *workCntr = (WorkControl *)pstr;
    102          //формирователь кадра
    103            RESET_COUNTER;//сброс счетчиков
    104            //универсальный просмотр UVV
    105            Universal_viewUVV(pstr, "ДВ", 1);
    106            return 1;
    107          }//KadrMenuFormat_viewActualDV(WorkControl *workCntr)
    108          short  KadrMenuFormat_viewActualRele(void *pstr)
    109          {
    110           WorkControl *workCntr = (WorkControl *)pstr;
    111          //формирователь кадра
    112            RESET_COUNTER;//сброс счетчиков
    113            //универсальный просмотр UVV
    114            Universal_viewUVV(pstr, "Реле", 1);
    115            return 1;
    116          }//KadrMenuFormat_viewActualRele(WorkControl *workCntr)
    117          
    118          void  Universal_viewUVV(void *pstr, char *inStr, short offset)
    119          {
    120           WorkControl *workCntr = (WorkControl *)pstr;
    121            //универсальный просмотр UVV
    122            short cntKadr = 0;//к-во кадров
    123            short cntKadrLow = 0;//к-во кадров Low
    124            short cntKadrMidd = 0;//к-во кадров Midd
    125            short cntKadrHi = 0;//к-во кадров Hi
    126            short isEmpty = 0;
    127          //unsigned int testDV = 255-1;
    128           char nameUpr[30];
    129           char locTxt[30];
    130          //посчитать к-во кадров
    131            workerUniversal1 = 0;//данные для работника
    132            MultiBitWorkerHostWord( &selectorUVVLow, &pfWorker1);
    133            cntKadrLow = workerUniversal1;//к-во кадров
    134            workerUniversal1 = 0;//данные для работника
    135            MultiBitWorkerHostWord( &selectorUVVMidd, &pfWorker1);
    136            cntKadrMidd = workerUniversal1;//к-во кадров
    137            workerUniversal1 = 0;//данные для работника
    138            MultiBitWorkerHostWord( &selectorUVVHi, &pfWorker1);
    139            cntKadrHi = workerUniversal1;//к-во кадров
    140            cntKadr = cntKadrLow + cntKadrMidd + cntKadrHi;
    141            if(cntKadr==0)
    142            {
    143              isEmpty = 1;
    144              cntKadr=1;
    145            }//if
    146          
    147            for(int i=0;; i++)
    148            {
    149          //критерий терминатора
    150              if(i==cntKadr) break;
    151              COMPARE_COUNTER
    152              {
    153                if(isEmpty)
    154                {
    155                  strcpy((char *)workCntr->twoString, "ПУСТО");
    156                  return;
    157                }//if
    158          
    159          //      int tt1 = selectorUVVLow;
    160          //      int tt2 = selectorUVVMidd;
    161          //      int tt3 = selectorUVVHi;
    162                strcpy(nameUpr, inStr);
    163                //найти индекс i-й активной команды
    164                workerUniversal2 = i;//данные для работника
    165                workerUniversal1 = 0;
    166                if(MultiBitWorkerHostWord(&selectorUVVLow, &pfWorker2)){
    167                   //найти имя команды
    168                   sprintf(locTxt, "%d", workerUniversal2+offset);
    169                   strcat(nameUpr, locTxt);
    170                   strcpy((char *)workCntr->twoString, nameUpr);
    171                }//if
    172                else{
    173                workerUniversal2 = i-cntKadrLow;//данные для работника
    174                workerUniversal1 = 0;
    175                if(MultiBitWorkerHostWord(&selectorUVVMidd, &pfWorker2)){
    176                   //найти имя команды
    177                   sprintf(locTxt, "%d", workerUniversal2+16+offset);
    178                   strcat(nameUpr, locTxt);
    179                   strcpy((char *)workCntr->twoString, nameUpr);
    180                }//if
    181                else{
    182                workerUniversal2 = i-cntKadrLow-cntKadrMidd;//данные для работника
    183                workerUniversal1 = 0;
    184                MultiBitWorkerHostWord(&selectorUVVHi, &pfWorker2);
    185                   //найти имя команды
    186                   sprintf(locTxt, "%d", workerUniversal2+16+16+offset);
    187                   strcat(nameUpr, locTxt);
    188                   strcpy((char *)workCntr->twoString, nameUpr);
    189                }//else
    190                }//else
    191                return;
    192              }//COMPARE_COUNTER
    193            }//for
    194          
    195            return;
    196          }//Universal_viewUVV(char *inStr, short offset)
    197          
    198          short  KadrMenuFormat_viewRDIS(void *pstr)
    199          {
    200           WorkControl *workCntr = (WorkControl *)pstr;
    201          //формирователь кадра РегистрацияДИС
    202            RESET_COUNTER;//сброс счетчиков
    203            //универсальный просмотр ранжир
    204            Universal_viewRang(workCntr, pRDIScmdMaska);
    205          
    206            return 1;
    207          
    208          }//KadrMenuFormat_viewRDIS(void *pstr)
    209          
    210          short  KadrMenuFormat_viewAPV(void *pstr)
    211          {
    212           WorkControl *workCntr = (WorkControl *)pstr;
    213          //формирователь кадра 
    214            RESET_COUNTER;//сброс счетчиков
    215            //универсальный просмотр ранжир
    216            Universal_viewRang(workCntr, pAPVcmdMaska);
    217          
    218            return 1;
    219          
    220          }//KadrMenuFormat_viewAPV(void *pstr)
    221          
    222          short  KadrMenuFormat_viewUROV(void *pstr)
    223          {
    224           WorkControl *workCntr = (WorkControl *)pstr;
    225          //формирователь кадра 
    226            RESET_COUNTER;//сброс счетчиков
    227            //универсальный просмотр ранжир
    228            Universal_viewRang(workCntr, pUROVcmdMaska);
    229          
    230            return 1;
    231          
    232          }//KadrMenuFormat_viewUROV(void *pstr)
    233          
    234          short  KadrMenuFormat_viewP1OF(void *pstr)
    235          {
    236           WorkControl *workCntr = (WorkControl *)pstr;
    237          //формирователь кадра 
    238            RESET_COUNTER;//сброс счетчиков
    239            //универсальный просмотр ранжир
    240          //  Universal_viewRang(workCntr, pP1OFcmdMaska);
    241          
    242            return 1;
    243          
    244          }//KadrMenuFormat_viewP1OF(void *pstr)
    245          
    246          short  KadrMenuFormat_viewP2OF(void *pstr)
    247          {
    248           WorkControl *workCntr = (WorkControl *)pstr;
    249          //формирователь кадра 
    250            RESET_COUNTER;//сброс счетчиков
    251            //универсальный просмотр ранжир
    252          //  Universal_viewRang(workCntr, pP2OFcmdMaska);
    253          
    254            return 1;
    255          
    256          }//KadrMenuFormat_viewP2OF(void *pstr)
    257          
    258          short  KadrMenuFormat_viewP3OF(void *pstr)
    259          {
    260           WorkControl *workCntr = (WorkControl *)pstr;
    261          //формирователь кадра 
    262            RESET_COUNTER;//сброс счетчиков
    263            //универсальный просмотр ранжир
    264          //  Universal_viewRang(workCntr, pP3OFcmdMaska);
    265          
    266            return 1;
    267          
    268          }//KadrMenuFormat_viewP3OF(void *pstr)
    269          
    270          void  Universal_viewRang(void *pstr, UNS_32 *pDQuadro)
    271          {
    272           WorkControl *workCntr = (WorkControl *)pstr;
    273            //универсальный просмотр ранжир
    274            short cntKadr = 0;//к-во кадров
    275            short isEmpty = 0;
    276          //посчитать к-во кадров
    277            workerUniversal1 = 0;//данные для работника
    278            MultiBitWorkerHostQuadro(
    279              pDQuadro, &pfWorker1);
    280            cntKadr = workerUniversal1;//к-во кадров
    281            if(cntKadr==0)
    282            {
    283              isEmpty = 1;
    284              cntKadr=1;
    285            }//if
    286          
    287            for(int i=0;; i++)
    288            {
    289          //критерий терминатора
    290              if(i==cntKadr) break;
    291              COMPARE_COUNTER
    292              {
    293                if(isEmpty)
    294                {
    295                  strcpy((char *)workCntr->twoString, "ПУСТО");
    296                  return;
    297                }//if
    298          
    299                //найти индекс i-й активной команды
    300                workerUniversal2 = i;//данные для работника
    301                workerUniversal1 = 0;
    302                MultiBitWorkerHostQuadro(
    303                  pDQuadro, &pfWorker2);
    304                //найти имя команды
    305                strcpy((char *)workCntr->twoString, nameStatusRANGIR[workerUniversal2].nameIORang);
    306                return;
    307              }//COMPARE_COUNTER
    308            }//for
    309          }//Universal_viewRang(WorkControl *workCntr, UNS_32 *pDQuadro)
    310          
    311          void OpenMenuViewRangDV()
    312          {
    313          //открыть меню rang DV
    314            LIGHTRANGUVV = LIGHTLINEMENU;//номер УВВ ранжир
    315            sprintf(titleRang, "ДВ%d", LIGHTLINEMENU +1);//текущий кадр
    316          
    317            MngRangPrepareArrayRANGIRtoEdit(LIGHTRANGUVV);//Подготовить ArrayRANGIR к редактированию
    318          
    319            TxtStreamCorrect(CRR_TEXTSTREAM);//коррекция текущий control
    320            SelectorTEXTCONTROL(&CONTROL_VRNG);//установить текущую ссылку на текстовый поток
    321          
    322            SelectorFHOME(&PereinitViewRang);//указатель на ф-цию HOME
    323          
    324            InitFHOME(1);//переиниц
    325          
    326          }//OpenMenuViewRangDV()
    327          
    328          void OpenMenuViewRangRele()
    329          {
    330          //открыть меню rang Rele
    331            LIGHTRANGUVV = LIGHTLINEMENU + DV_TOTAL;//номер УВВ ранжир
    332            sprintf(titleRang, "Р%d", LIGHTLINEMENU +1);//текущий кадр
    333          
    334            MngRangPrepareArrayRANGIRtoEdit(LIGHTRANGUVV);//Подготовить ArrayRANGIR к редактированию
    335          
    336            TxtStreamCorrect(CRR_TEXTSTREAM);//коррекция текущий control
    337            SelectorTEXTCONTROL(&CONTROL_VRNG);//установить текущую ссылку на текстовый поток
    338            SelectorFHOME(&PereinitViewRang);//указатель на ф-цию HOME
    339          
    340            InitFHOME(1);//переиниц
    341          
    342          }//OpenMenuViewRangRele()
    343          
    344          void OpenMenuViewRangCDI()
    345          {
    346          //открыть меню rang CDI
    347            LIGHTRANGUVV = LIGHTLINEMENU + DV_TOTAL + RELE_TOTAL;//номер УВВ ранжир
    348            sprintf(titleRang, "СДИ%d", LIGHTLINEMENU +1);//текущий кадр
    349          
    350            MngRangPrepareArrayRANGIRtoEdit(LIGHTRANGUVV);//Подготовить ArrayRANGIR к редактированию
    351          
    352            TxtStreamCorrect(CRR_TEXTSTREAM);//коррекция текущий control
    353            SelectorTEXTCONTROL(&CONTROL_VRNG);//установить текущую ссылку на текстовый поток
    354            SelectorFHOME(&PereinitViewRang);//указатель на ф-цию HOME
    355          
    356            InitFHOME(1);//переиниц
    357          
    358          }//OpenMenuViewRangCDI()
    359          
    360          void OpenMenuViewActual()
    361          {
    362          //открыть меню Текущие
    363            TxtStreamCorrect(CRR_TEXTSTREAM);//коррекция текущий control
    364            SelectorTEXTCONTROL(&CONTROL_ACT);//установить текущую ссылку на текстовый поток
    365            SelectorFHOME(&PereinitViewActual);//указатель на ф-цию HOME
    366          
    367            InitFHOME(1);//переиниц
    368          }//OpenMenuViewActual()
    369          
    370          void OpenMenuViewActualDV()
    371          {
    372          //открыть меню Текущие DV
    373           selectorUVVLow  = selectorDVLow;//селекция UVV активный-неактивный для мл 16 UVV
    374           selectorUVVMidd = selectorDVMidd;//селекция UVV активный-неактивный для cp 16 UVV
    375           selectorUVVHi   = selectorDVHi;//селекция UVV активный-неактивный для ct 16 UVV
    376            TxtStreamCorrect(CRR_TEXTSTREAM);//коррекция текущий control
    377            SelectorTEXTCONTROL(&CONTROL_ACT);//установить текущую ссылку на текстовый поток
    378            SelectorFHOME(&PereinitViewActualDV);//указатель на ф-цию HOME
    379          
    380            InitFHOME(1);//переиниц
    381          }//OpenMenuViewActualDV()
    382          
    383          void OpenMenuViewActualRele()
    384          {
    385          //открыть меню Текущие DV
    386           selectorUVVLow  = rele_bdvv1;//селекция UVV активный-неактивный для мл 16 UVV
    387           selectorUVVMidd = 0;//селекция UVV активный-неактивный для cp 16 UVV
    388           selectorUVVHi   = 0;//селекция UVV активный-неактивный для ct 16 UVV
    389            TxtStreamCorrect(CRR_TEXTSTREAM);//коррекция текущий control
    390            SelectorTEXTCONTROL(&CONTROL_ACT);//установить текущую ссылку на текстовый поток
    391            SelectorFHOME(&PereinitViewActualRele);//указатель на ф-цию HOME
    392          
    393            InitFHOME(1);//переиниц
    394          }//OpenMenuViewActualRele()
    395          
    396          void PereinitViewActual(short flg)
    397          {
    398          //ф-ция переинит Текущие
    399            TxtStreamInit(CRR_TEXTSTREAM, &KadrMenuFormat_viewActual, NULL);//инит управл структ и формир кадра
    400            //if(flg==1)
    401            ViewDiskrMenu(typeMenuSub);//вывести окно отображения
    402          }//PereinitViewActual(short flg)
    403          void PereinitViewActualDV(short flg)
    404          {
    405          //ф-ция переинит Текущие DV
    406            TxtStreamInit(CRR_TEXTSTREAM, &KadrMenuFormat_viewActualDV, NULL);//инит управл структ и формир кадра
    407            //if(flg==1)
    408            ViewDiskrMenu(typeMenuSub);//вывести окно отображения
    409          }//PereinitViewActualDV(short flg)
    410          void PereinitViewActualRele(short flg)
    411          {
    412          //ф-ция переинит Текущие DV
    413            TxtStreamInit(CRR_TEXTSTREAM, &KadrMenuFormat_viewActualRele, NULL);//инит управл структ и формир кадра
    414            //if(flg==1)
    415            ViewDiskrMenu(typeMenuSub);//вывести окно отображения
    416          }//PereinitViewActualRele(short flg)
    417          
    418          void OpenMenuViewRDIS()
    419          {
    420          //открыть меню РегистрацияДИС
    421            LIGHTRANGUVV = REGDIS_SM;//номер УВВ ранжир
    422            MngRangPrepareArrayRANGIRtoEdit(LIGHTRANGUVV);//Подготовить pRDIScmdMaska к редактированию
    423          
    424            TxtStreamCorrect(CRR_TEXTSTREAM);//коррекция текущий control
    425            SelectorTEXTCONTROL(&CONTROL_RDIS);//установить текущую ссылку на текстовый поток
    426            SelectorFHOME(&PereinitViewRDIS);//указатель на ф-цию HOME
    427          
    428            InitFHOME(1);//переиниц
    429          }//OpenMenuViewRDIS()
    430          
    431          void PereinitViewRDIS(short flg)
    432          {
    433          //ф-ция переинит РегистрацияДИС
    434            TxtStreamInit(CRR_TEXTSTREAM, &KadrMenuFormat_viewRDIS, NULL);//инит управл структ и формир кадра
    435            //if(flg==1)
    436            ViewDiskrMenu(typeMenuSub);//вывести окно отображения
    437          }//PereinitViewRDIS(short flg)
    438          
    439          void OpenMenuViewAPV()
    440          {
    441          //открыть меню РегистрацияДИС
    442            LIGHTRANGUVV = PUSKAPV_SM;//номер УВВ ранжир
    443            MngRangPrepareArrayRANGIRtoEdit(LIGHTRANGUVV);//Подготовить к редактированию
    444          
    445            TxtStreamCorrect(CRR_TEXTSTREAM);//коррекция текущий control
    446            SelectorTEXTCONTROL(&CONTROL_APV);//установить текущую ссылку на текстовый поток
    447            SelectorFHOME(&PereinitViewAPV);//указатель на ф-цию HOME
    448          
    449            InitFHOME(1);//переиниц
    450          }//OpenMenuViewAPV()
    451          
    452          void PereinitViewAPV(short flg)
    453          {
    454          //ф-ция переинит APV
    455            TxtStreamInit(CRR_TEXTSTREAM, &KadrMenuFormat_viewAPV, NULL);//инит управл структ и формир кадра
    456            //if(flg==1)
    457            ViewDiskrMenu(typeMenuSub);//вывести окно отображения
    458          }//PereinitViewAPV(short flg)
    459          
    460          void OpenMenuViewUROV()
    461          {
    462          //открыть меню РегистрацияДИС
    463            LIGHTRANGUVV = PUSKUROV_SM;//номер УВВ ранжир
    464            MngRangPrepareArrayRANGIRtoEdit(LIGHTRANGUVV);//Подготовить к редактированию
    465          
    466            TxtStreamCorrect(CRR_TEXTSTREAM);//коррекция текущий control
    467            SelectorTEXTCONTROL(&CONTROL_UROV);//установить текущую ссылку на текстовый поток
    468            SelectorFHOME(&PereinitViewUROV);//указатель на ф-цию HOME
    469          
    470            InitFHOME(1);//переиниц
    471          }//OpenMenuViewAPV()
    472          
    473          void PereinitViewUROV(short flg)
    474          {
    475          //ф-ция переинит APV
    476            TxtStreamInit(CRR_TEXTSTREAM, &KadrMenuFormat_viewUROV, NULL);//инит управл структ и формир кадра
    477            //if(flg==1)
    478            ViewDiskrMenu(typeMenuSub);//вывести окно отображения
    479          }//PereinitViewUROV(short flg)
    480          
    481          void OpenMenuViewP1OF()
    482          {
    483          //открыть меню РегистрацияДИС
    484            LIGHTRANGUVV = PUSK1OF_SM;//номер УВВ ранжир
    485            MngRangPrepareArrayRANGIRtoEdit(LIGHTRANGUVV);//Подготовить к редактированию
    486          
    487            TxtStreamCorrect(CRR_TEXTSTREAM);//коррекция текущий control
    488            SelectorTEXTCONTROL(&CONTROL_P1OF);//установить текущую ссылку на текстовый поток
    489            SelectorFHOME(&PereinitViewP1OF);//указатель на ф-цию HOME
    490          
    491            InitFHOME(1);//переиниц
    492          }//OpenMenuViewP1OF()
    493          
    494          void PereinitViewP1OF(short flg)
    495          {
    496          //ф-ция переинит APV
    497            TxtStreamInit(CRR_TEXTSTREAM, &KadrMenuFormat_viewP1OF, NULL);//инит управл структ и формир кадра
    498            //if(flg==1)
    499            ViewDiskrMenu(typeMenuSub);//вывести окно отображения
    500          }//PereinitViewP1OF(short flg)
    501          
    502          void OpenMenuViewP2OF()
    503          {
    504          //открыть меню РегистрацияДИС
    505            LIGHTRANGUVV = PUSK2OF_SM;//номер УВВ ранжир
    506            MngRangPrepareArrayRANGIRtoEdit(LIGHTRANGUVV);//Подготовить к редактированию
    507          
    508            TxtStreamCorrect(CRR_TEXTSTREAM);//коррекция текущий control
    509            SelectorTEXTCONTROL(&CONTROL_P2OF);//установить текущую ссылку на текстовый поток
    510            SelectorFHOME(&PereinitViewP2OF);//указатель на ф-цию HOME
    511          
    512            InitFHOME(1);//переиниц
    513          }//OpenMenuViewP1OF()
    514          
    515          void PereinitViewP2OF(short flg)
    516          {
    517          //ф-ция переинит APV
    518            TxtStreamInit(CRR_TEXTSTREAM, &KadrMenuFormat_viewP2OF, NULL);//инит управл структ и формир кадра
    519            //if(flg==1)
    520            ViewDiskrMenu(typeMenuSub);//вывести окно отображения
    521          }//PereinitViewP2OF(short flg)
    522          
    523          void OpenMenuViewP3OF()
    524          {
    525          //открыть меню РегистрацияДИС
    526            LIGHTRANGUVV = PUSK3OF_SM;//номер УВВ ранжир
    527            MngRangPrepareArrayRANGIRtoEdit(LIGHTRANGUVV);//Подготовить к редактированию
    528          
    529            TxtStreamCorrect(CRR_TEXTSTREAM);//коррекция текущий control
    530            SelectorTEXTCONTROL(&CONTROL_P3OF);//установить текущую ссылку на текстовый поток
    531            SelectorFHOME(&PereinitViewP3OF);//указатель на ф-цию HOME
    532          
    533            InitFHOME(1);//переиниц
    534          }//OpenMenuViewP3OF()
    535          
    536          void PereinitViewP3OF(short flg)
    537          {
    538          //ф-ция переинит APV
    539            TxtStreamInit(CRR_TEXTSTREAM, &KadrMenuFormat_viewP3OF, NULL);//инит управл структ и формир кадра
    540            //if(flg==1)
    541            ViewDiskrMenu(typeMenuSub);//вывести окно отображения
    542          }//PereinitViewP3OF(short flg)
    543          
    544          void PereinitViewRang(short flg)
    545          {
    546          //ф-ция переинит rang
    547            TxtStreamInit(CRR_TEXTSTREAM, &KadrMenuFormat_viewRang, NULL);//инит управл структ и формир кадра
    548            //if(flg==1)
    549            ViewDiskrMenu(typeMenuSub);//вывести окно отображения
    550          }//PereinitReg()
    551          
    552          short  KadrMenuFormat_prc_editrang(void *pstr)
    553          {
    554           WorkControl *workCntr = (WorkControl *)pstr;
    555          //формирователь кадра
    556          //процесс редактирования
    557            short next = 0;
    558            short cntKadr = 0;//к-во кадров
    559          
    560            short numCloseComp = 0;//закр компоненты
    561            while (cnfCOMPONENT[next].componentEnable)   //все компоненты в конфигурации
    562            {
    563              next++;
    564            }//while
    565          
    566            cntKadr = next+ RANG_CNTOPEN_CMD-1;//к-во кадров
    567          
    568            RESET_COUNTER;//сброс счетчиков
    569            for(int i=0;; i++)
    570            {
    571          //критерий терминатора
    572              if(i==cntKadr) break;
    573              COMPARE_COUNTER
    574              {
    575                if(i<  LIGHTCLON)numCloseComp = i;
    576                if(i>( LIGHTCLON   + RANG_CNTOPEN_CMD -1)) numCloseComp = i- RANG_CNTOPEN_CMD+1;
    577                if(i<  LIGHTCLON || i>(LIGHTCLON + RANG_CNTOPEN_CMD-1))
    578                {
    579                  strcpy((char *)workCntr->twoString, cnfCOMPONENT[numCloseComp].nameComponent);
    580                  strcpy((char *)workCntr->twoString + sizeof(WorkVariantChar)/2, "    Раздел");
    581                }
    582                else{
    583                  short cmdPosition  = //позиция выбранной команды в табл ранж
    584                  i-LIGHTCLON + getOffsetIOCmdCnf(LIGHTCLON);
    585          
    586                  strcpy((char *)workCntr->twoString,
    587                  nameStatusRANGIR[
    588                    cmdPosition
    589                  ].nameIORang
    590                        );
    591          //значение бита ранжирования
    592                  if(NumBitCheckQuadro(cmdPosition,
    593                  MngRangGetPointerUVVRANGIRtoEdit(LIGHTRANGUVV)
    594                                      )) //проверка бита по его индексу
    595                  {
    596                    strcpy((char *)workCntr->twoString + sizeof(WorkVariantChar)/2, "    Вкл");
    597                  }//if
    598                  else{
    599                    strcpy((char *)workCntr->twoString + sizeof(WorkVariantChar)/2, "    Откл");
    600                  }
    601          
    602                }//else
    603          
    604          
    605                return 1;
    606              }//COMPARE_COUNTER
    607            }//for
    608          
    609            return 1;
    610          }//KadrMenuFormat_prc_editrang(WorkControl *workCntr)
    611          
    612          short  KadrMenuFormat_openEditRang(void *pstr)
    613          {
    614           WorkControl *workCntr = (WorkControl *)pstr;
    615          //формирователь кадра
    616            RESET_COUNTER;//сброс счетчиков
    617            for(int i=0;; i++)
    618            {
    619          //критерий терминатора
    620              short next = 0;
    621              while (cnfCOMPONENT[next].componentEnable)   //все компоненты в конфигурации
    622              {
    623                next++;
    624              }//while
    625              if(next==0)
    626              {
    627                strcpy((char *)workCntr->twoString, "Конфигурация");
    628                strcpy((char *)workCntr->twoString + sizeof(WorkVariantChar)/2, "пустая");
    629                if(i==1)break;
    630              }//if
    631              else
    632              {
    633                if(i==next) break;
    634              }//else
    635          
    636              COMPARE_COUNTER
    637              {
    638                if(next!=0)
    639                {
    640                  strcpy((char *)workCntr->twoString, cnfCOMPONENT[i].nameComponent);
    641                  strcpy((char *)workCntr->twoString + sizeof(WorkVariantChar)/2, "    Раздел");
    642                }//if
    643                return 1;//сравнить счетчики кадров
    644              }//COMPARE_COUNTER
    645            }//for
    646          
    647            return 1;
    648          }//KadrMenuFormat_openEditRang(WorkControl *workCntr)
    649          
    650          extern LineMenuItem sub_menu_viewDV[];
    651          
    652          void ClickOpenEditRang(UNS_32 *cmdUVV)
    653          {
    654            /*
    655          //Получить адр ArrayRANGIR конкр УВВ для редактирования
    656            short  findClon = -1; //найти клон для позиционирования
    657            UNS_32 tmp=0;
    658            for(int i=0; i<DQUADRO; i++) tmp|=cmdUVV[i];
    659          
    660            if(tmp)
    661            {
    662              //найти индекс i-й активной команды
    663              workerUniversal2 = TxtStreamIdxKadr(CRR_TEXTSTREAM);
    664              workerUniversal1 = 0;
    665              MultiBitWorkerHostQuadro(cmdUVV, &pfWorker2);
    666          
    667          //найти клон для позиционирования
    668              short next = 0;
    669              while (cnfCOMPONENT[next].componentEnable)   //все компоненты в конфигурации
    670              {
    671                if(getOffsetIOCmdCnf(next)>workerUniversal2) break;
    672                next++;
    673              }//while
    674              findClon = next-1;
    675            }//if
    676          
    677          //открыть редактирование ранжир
    678            LIGHTCLON = -1;//индекс откр компонента
    679          
    680          //ф-ция переинит rang
    681            SelectorTEXTCONTROL(&CONTROL_ERNG);//установить текущую ссылку на текстовый поток
    682          
    683          //текущий sub_menu и будет его parent
    684            sub_menu_editrng[SUBDATA].Line2 = CRR_SUBMENU;
    685          
    686             SelectorSUBMENU(sub_menu_editrng);//уcтановить текущее субменю
    687          
    688            TxtStreamInit(CRR_TEXTSTREAM, &KadrMenuFormat_openEditRang, NULL);//инит управл структ и формир кадра
    689            if(findClon>0)
    690              TxtStreamSetIdxKadr(CRR_TEXTSTREAM, findClon);//установка номера текущего кадра
    691          
    692            ViewDiskrMenu(typeMenuEditRang);//вывести окно отображения
    693            ListPStr();//размещение указателя строки
    694          
    695            FvmenuDis->TipPanel->Visible = true;
    696            ViewTipPanel(0);//панель подсказки TipPanel
    697            */
    698          }//ClickOpenEditRang(UNS_32 *cmdUVV)
    699          
    700          void ClickProcessEditRang()
    701          {
    702          //начать редактирование ранжир
    703            SelectorCRRLIGHTLINE();//найти подсвеченную строку текущего текст потока
    704          
    705            if(LIGHTCLON<0)//индекс откр компонента
    706            {
    707              LIGHTCLON = LIGHTLINEMENU;//индекс откр компонента
    708            }//if
    709            else
    710            {
    711              for(short i=0; i<1; i++)
    712              {
    713                if(
    714                  LIGHTLINEMENU<  LIGHTCLON)
    715                {
    716                  LIGHTCLON = LIGHTLINEMENU;//индекс откр компонента
    717                  break;
    718                }
    719                if(
    720                  LIGHTLINEMENU >( LIGHTCLON+ RANG_CNTOPEN_CMD-1))
    721                {
    722                  LIGHTCLON = LIGHTLINEMENU - RANG_CNTOPEN_CMD+1;
    723                  break;
    724                }
    725                short cmdPosition = RANG_BIT=//позиция выбранной команды в табл ранж
    726                                      getOffsetIOCmdCnf(LIGHTCLON) +
    727                                      LIGHTLINEMENU - LIGHTCLON;
    728                RangRedactor(cmdPosition);//редактировать ранжирование
    729                return;
    730              }//for
    731            }//else
    732          
    733            RANG_CNTOPEN_CMD = cnfCOMPONENT[LIGHTCLON].cntIOCmd;//к-во открытых строк
    734          
    735            TxtStreamInit(CRR_TEXTSTREAM, &KadrMenuFormat_prc_editrang, NULL);//инит управл структ и формир кадра
    736            TxtStreamSetIdxKadr(PNTCRR_TEXTSTREAM, LIGHTCLON);//установка номера текущего кадра
    737          
    738            ViewDiskrMenu(typeMenuEditRang);//вывести окно отображения
    739            ListPStr();//размещение указателя строки
    740          
    741            ViewTipPanel(0);//панель подсказки TipPanel
    742          }//ClickProcessEditRang()
    743          
    744          void RangRedactor(short cmdPosition)
    745          {
    746            /*
    747          //редактировать ранжирование
    748            FvmenuDis->EditRangPanel->Visible = true;
    749            FvmenuDis->ConfirmRangPanel->Visible = false;
    750            FvmenuDis->EditRangLabel->Caption =
    751              nameStatusRANGIR[
    752                cmdPosition
    753              ].nameIORang;
    754            if(NumBitCheckQuadro(cmdPosition,
    755                                 MngRangGetPointerUVVRANGIRtoEdit(LIGHTRANGUVV)
    756                                )) //проверка бита по его индексу
    757            {
    758              FvmenuDis->RangCheck->Checked = true;
    759              FvmenuDis->RangCheck->Caption = "ВКЛ";
    760            }//if
    761            else
    762            {
    763              FvmenuDis->RangCheck->Checked = false;
    764              FvmenuDis->RangCheck->Caption = "ОТКЛ";
    765            }
    766          */
    767          }//RangRedactor()
    768          
    769          void  ClickEditRangOKButton()
    770          {
    771            /*
    772          //редактировать ранжирование
    773          //индекс выбранной команды ранжирования
    774            if(FvmenuDis->RangCheck->Checked)
    775            {
    776              NumBitSettingQuadro(RANG_BIT,
    777                                  MngRangGetPointerUVVRANGIRtoEdit(LIGHTRANGUVV)
    778                                 ); //установка бита по его индексу
    779            }
    780            else
    781              NumBitClearingQuadro(RANG_BIT,
    782                                   MngRangGetPointerUVVRANGIRtoEdit(LIGHTRANGUVV)
    783                                  ); //сброс бита по его индексу
    784          
    785            ApplyDVMask(LIGHTRANGUVV);//наложить маску на DV
    786          
    787            RangRedactor(RANG_BIT);//отобразить ранжирование
    788          
    789            isRangRedactor = 1;//было ли редактировано ранжир
    790          
    791            ViewTipPanel(0);
    792          */
    793          }//ClickEditRangOKButton()
    794          
    795          void  FinishEditRang(int isOK)
    796          {
    797          //сохранить и завершить редактир ранжир
    798            isRangRedactor = 0;//было ли редактировано ранжир
    799            if(isOK){
    800               MngRangEndingEditArrayRANGIR(LIGHTRANGUVV);//Сохр изменения в массиве ранжир
    801               SaveCRCrang();//сохранить CRC ранжир
    802               PrepareBOBV();//подготовить Блок ОТКЛ, Блок ВКЛ
    803                    }//if
    804            MngRangPrepareArrayRANGIRtoEdit(LIGHTRANGUVV);
    805            TxtStreamInit(&CONTROL_VRNG, &KadrMenuFormat_viewRang, NULL);//новое к-во команд на УВВ
    806          }//FinishEditRang()
    807          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   ClickEditRangOKButton
       0   ClickOpenEditRang
       8   ClickProcessEditRang
         8   -> ListPStr
         8   -> RangRedactor
         8   -> SelectorCRRLIGHTLINE
         8   -> TxtStreamInit
         8   -> TxtStreamSetIdxKadr
         8   -> ViewDiskrMenu
         8   -> ViewTipPanel
         8   -> getOffsetIOCmdCnf
       8   FinishEditRang
         8   -> MngRangEndingEditArrayRANGIR
         8   -> MngRangPrepareArrayRANGIRtoEdit
         8   -> PrepareBOBV
         8   -> SaveCRCrang
         8   -> TxtStreamInit
      24   KadrMenuFormat_openEditRang
        24   -> strcpy
      32   KadrMenuFormat_prc_editrang
        32   -> MngRangGetPointerUVVRANGIRtoEdit
        32   -> NumBitCheckQuadro
        32   -> getOffsetIOCmdCnf
        32   -> strcpy
       8   KadrMenuFormat_viewAPV
         8   -> Universal_viewRang
       8   KadrMenuFormat_viewActual
         8   -> Universal_viewRang
       8   KadrMenuFormat_viewActualDV
         8   -> Universal_viewUVV
       8   KadrMenuFormat_viewActualRele
         8   -> Universal_viewUVV
       0   KadrMenuFormat_viewP1OF
       0   KadrMenuFormat_viewP2OF
       0   KadrMenuFormat_viewP3OF
       8   KadrMenuFormat_viewRDIS
         8   -> Universal_viewRang
       8   KadrMenuFormat_viewRang
         8   -> MngRangGetPointerUVVRANGIRtoEdit
         8   -> Universal_viewRang
       8   KadrMenuFormat_viewUROV
         8   -> Universal_viewRang
       8   OpenMenuViewAPV
         8   -> InitFHOME
         8   -> MngRangPrepareArrayRANGIRtoEdit
         8   -> SelectorFHOME
         8   -> SelectorTEXTCONTROL
         8   -> TxtStreamCorrect
       8   OpenMenuViewActual
         8   -> InitFHOME
         8   -> SelectorFHOME
         8   -> SelectorTEXTCONTROL
         8   -> TxtStreamCorrect
       8   OpenMenuViewActualDV
         8   -> InitFHOME
         8   -> SelectorFHOME
         8   -> SelectorTEXTCONTROL
         8   -> TxtStreamCorrect
       8   OpenMenuViewActualRele
         8   -> InitFHOME
         8   -> SelectorFHOME
         8   -> SelectorTEXTCONTROL
         8   -> TxtStreamCorrect
       8   OpenMenuViewP1OF
         8   -> InitFHOME
         8   -> MngRangPrepareArrayRANGIRtoEdit
         8   -> SelectorFHOME
         8   -> SelectorTEXTCONTROL
         8   -> TxtStreamCorrect
       8   OpenMenuViewP2OF
         8   -> InitFHOME
         8   -> MngRangPrepareArrayRANGIRtoEdit
         8   -> SelectorFHOME
         8   -> SelectorTEXTCONTROL
         8   -> TxtStreamCorrect
       8   OpenMenuViewP3OF
         8   -> InitFHOME
         8   -> MngRangPrepareArrayRANGIRtoEdit
         8   -> SelectorFHOME
         8   -> SelectorTEXTCONTROL
         8   -> TxtStreamCorrect
       8   OpenMenuViewRDIS
         8   -> InitFHOME
         8   -> MngRangPrepareArrayRANGIRtoEdit
         8   -> SelectorFHOME
         8   -> SelectorTEXTCONTROL
         8   -> TxtStreamCorrect
       8   OpenMenuViewRangCDI
         8   -> InitFHOME
         8   -> MngRangPrepareArrayRANGIRtoEdit
         8   -> SelectorFHOME
         8   -> SelectorTEXTCONTROL
         8   -> TxtStreamCorrect
         8   -> sprintf
       8   OpenMenuViewRangDV
         8   -> InitFHOME
         8   -> MngRangPrepareArrayRANGIRtoEdit
         8   -> SelectorFHOME
         8   -> SelectorTEXTCONTROL
         8   -> TxtStreamCorrect
         8   -> sprintf
       8   OpenMenuViewRangRele
         8   -> InitFHOME
         8   -> MngRangPrepareArrayRANGIRtoEdit
         8   -> SelectorFHOME
         8   -> SelectorTEXTCONTROL
         8   -> TxtStreamCorrect
         8   -> sprintf
       8   OpenMenuViewUROV
         8   -> InitFHOME
         8   -> MngRangPrepareArrayRANGIRtoEdit
         8   -> SelectorFHOME
         8   -> SelectorTEXTCONTROL
         8   -> TxtStreamCorrect
       8   PereinitViewAPV
         8   -> TxtStreamInit
         8   -> ViewDiskrMenu
       8   PereinitViewActual
         8   -> TxtStreamInit
         8   -> ViewDiskrMenu
       8   PereinitViewActualDV
         8   -> TxtStreamInit
         8   -> ViewDiskrMenu
       8   PereinitViewActualRele
         8   -> TxtStreamInit
         8   -> ViewDiskrMenu
       8   PereinitViewP1OF
         8   -> TxtStreamInit
         8   -> ViewDiskrMenu
       8   PereinitViewP2OF
         8   -> TxtStreamInit
         8   -> ViewDiskrMenu
       8   PereinitViewP3OF
         8   -> TxtStreamInit
         8   -> ViewDiskrMenu
       8   PereinitViewRDIS
         8   -> TxtStreamInit
         8   -> ViewDiskrMenu
       8   PereinitViewRang
         8   -> TxtStreamInit
         8   -> ViewDiskrMenu
       8   PereinitViewUROV
         8   -> TxtStreamInit
         8   -> ViewDiskrMenu
       0   RangRedactor
      24   Universal_viewRang
        24   -> MultiBitWorkerHostQuadro
        24   -> strcpy
     112   Universal_viewUVV
       112   -> MultiBitWorkerHostWord
       112   -> sprintf
       112   -> strcat
       112   -> strcpy


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable10
       4  ??DataTable21
       4  ??DataTable32
       4  ??DataTable32_1
       4  ??DataTable32_2
       4  ??DataTable32_3
       4  ??DataTable32_4
       4  ??DataTable33
       4  ??DataTable33_1
       4  ??DataTable34
       4  ??DataTable34_1
       4  ??DataTable34_10
       4  ??DataTable34_11
       4  ??DataTable34_12
       4  ??DataTable34_13
       4  ??DataTable34_14
       4  ??DataTable34_15
       4  ??DataTable34_16
       4  ??DataTable34_17
       4  ??DataTable34_18
       4  ??DataTable34_19
       4  ??DataTable34_2
       4  ??DataTable34_20
       4  ??DataTable34_21
       4  ??DataTable34_22
       4  ??DataTable34_23
       4  ??DataTable34_24
       4  ??DataTable34_25
       4  ??DataTable34_26
       4  ??DataTable34_27
       4  ??DataTable34_28
       4  ??DataTable34_29
       4  ??DataTable34_3
       4  ??DataTable34_30
       4  ??DataTable34_31
       4  ??DataTable34_32
       4  ??DataTable34_33
       4  ??DataTable34_34
       4  ??DataTable34_4
       4  ??DataTable34_5
       4  ??DataTable34_6
       4  ??DataTable34_7
       4  ??DataTable34_8
       4  ??DataTable34_9
       4  ??DataTable7
       4  ?_0
       8  ?_1
      16  ?_10
       8  ?_11
       8  ?_2
       4  ?_3
       8  ?_4
       4  ?_5
       8  ?_6
      12  ?_7
       8  ?_8
      12  ?_9
       4  ClickEditRangOKButton
       4  ClickOpenEditRang
     352  ClickProcessEditRang
      80  FinishEditRang
     264  KadrMenuFormat_openEditRang
     500  KadrMenuFormat_prc_editrang
      36  KadrMenuFormat_viewAPV
      36  KadrMenuFormat_viewActual
      40  KadrMenuFormat_viewActualDV
      40  KadrMenuFormat_viewActualRele
      20  KadrMenuFormat_viewP1OF
      20  KadrMenuFormat_viewP2OF
      20  KadrMenuFormat_viewP3OF
      36  KadrMenuFormat_viewRDIS
      48  KadrMenuFormat_viewRang
      36  KadrMenuFormat_viewUROV
      68  OpenMenuViewAPV
      44  OpenMenuViewActual
      92  OpenMenuViewActualDV
      84  OpenMenuViewActualRele
      68  OpenMenuViewP1OF
      68  OpenMenuViewP2OF
      68  OpenMenuViewP3OF
      68  OpenMenuViewRDIS
     100  OpenMenuViewRangCDI
      96  OpenMenuViewRangDV
     100  OpenMenuViewRangRele
      68  OpenMenuViewUROV
      40  PereinitViewAPV
      40  PereinitViewActual
      40  PereinitViewActualDV
      40  PereinitViewActualRele
      40  PereinitViewP1OF
      40  PereinitViewP2OF
      40  PereinitViewP3OF
      40  PereinitViewRDIS
      40  PereinitViewRang
      40  PereinitViewUROV
       4  RangRedactor
     268  Universal_viewRang
     672  Universal_viewUVV
       1  isRangRedactor
       4  selectorUVVHi
       4  selectorUVVLow
       4  selectorUVVMidd

 
    13 bytes in section .bss
   100 bytes in section .rodata
 3 984 bytes in section .text
 
 3 984 bytes of CODE  memory
   100 bytes of CONST memory
    13 bytes of DATA  memory

Errors: none
Warnings: none
