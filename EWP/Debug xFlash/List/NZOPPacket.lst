###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.2.8542/W32 for ARM        12/Oct/2015  11:05:03
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  arm
#    Endian       =  little
#    Source file  =  
#        D:\IAR projects\HR1_0100_00_I720_new2\component\NZOPPacket.c
#    Command line =  
#        "D:\IAR projects\HR1_0100_00_I720_new2\component\NZOPPacket.c" -D
#        _STATIC_MEMORY_BOOT -lcN "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\Debug xFlash\List\" -o "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\Debug xFlash\Obj\" --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=ARM926EJ-S -e
#        --fpu=VFP9-S --dlib_config "C:\Program Files\IAR Systems\Embedded
#        Workbench 7.40\arm\INC\c\DLib_Config_Normal.h" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\NXP\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\LIB\include\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\inc\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\Igor\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\mal\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\component\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\psupervisor\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\virtualMenu\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\callbackElement\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\logictimers\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\zonaVRT\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\" --cpu_mode arm -On
#        --use_c++_inline
#    List file    =  
#        D:\IAR projects\HR1_0100_00_I720_new2\EWP\Debug
#        xFlash\List\NZOPPacket.lst
#    Object file  =  
#        D:\IAR projects\HR1_0100_00_I720_new2\EWP\Debug
#        xFlash\Obj\NZOPPacket.o
#
###############################################################################

D:\IAR projects\HR1_0100_00_I720_new2\component\NZOPPacket.c
      1          /*
      2          #include <vcl.h>
      3          #include <strstrea.h>
      4          #include <math.h>
      5          #include <mem.h>
      6          #include <fstream.h>
      7          #include <strstrea.h>
      8          #include <iomanip.h>
      9          #pragma hdrstop
     10          
     11          #include "vmenuDis.h"
     12          */
     13          
     14          #include <stdio.h>
     15          #include <string.h>
     16          
     17          #include "psuperVisor\supermanager.h"
     18          
     19          #include "bazisdef.h"
     20          #include "component\componentdef.h"
     21          #include "virtualMenu\systemmenudef.h"
     22          #include "virtualMenu\ustmanagerdef.h"
     23          #include "psuperVisor\psvisor_helpdef.h"
     24          
     25          #include "virtualMenu\textstreamfnc.h"
     26          #include "virtualMenu\systemmenufnc.h"
     27          
     28          #include "virtualMenu\viewMenuList.h"
     29          #include "virtualMenu\viewmenusub.h"
     30          #include "psuperVisor\psupervisor.h"
     31          
     32          
     33          //код компонентов
     34          #define KOD_COMPONENT  NZOP_COMP1
     35          //к-во ступеней
     36          #define CNT_STUPEN_NZOP  2
     37          
     38          //массив клонов - конфигурация
     39          extern COMPONENT_OBJ  cnfCOMPONENT[];
     40          extern COMPONENT_OBJ rpzcomponent_obj;//обект компонента для репозитария
     41          extern LineMenuItem sub_menu_cnf[];
     42          extern char deleteComp[];
     43          
     44          extern char NZOP1_TITLE[];
     45          extern char NZOP2_TITLE[];
     46          
     47          StreamControl controlStruct_NZOP;//управл структура
     48          
     49          void MakePacketNZOP();
     50          char copyNZOP1ToRepozitar(char packet);
     51          char copyNZOP2ToRepozitar(char packet);
     52          
     53          char  *nameStupenNZOP[CNT_STUPEN_NZOP] = {NZOP1_TITLE,
     54                                                    NZOP2_TITLE
     55                                                   };//указатели на имена ступеней
     56          
     57          //меню NZOP
     58          LineMenuItem sub_menu_NZOP[CNT_STUPEN_NZOP+4] =
     59          {
     60            { "НЗОП", NULL},//title
     61            { &controlStruct_NZOP, sub_menu_cnf},//control_item, parent
     62            { deleteComp, (void *)&DeleteComponent1, typeMenuProg},
     63            { NULL, NULL}
     64          };
     65          
     66          char copyNZOPpacketToRepozitar(char packet)
     67          {
     68            rpzcomponent_obj.kodC   = KOD_COMPONENT; //код компонента
     69            rpzcomponent_obj.cntClon = CNT_STUPEN_NZOP;//к-во клонов
     70          
     71            if(packet)  return 1;//пакетная регистрация
     72          //найти в конфиг такой же пакет
     73            short dx=0;
     74            while(cnfCOMPONENT[dx].componentEnable)
     75            {
     76              //номер пакетного компонента
     77              if(cnfCOMPONENT[dx].packet==NZOP_PACKET) return 1;//пакетная регистрация
     78              dx++;
     79            }//while
     80          
     81            MakeEmptyTopSub_menu(&(sub_menu_cnf[0]),
     82                                 MAX_CNFCOMPONENT*sizeof(LineMenuItem));//добавить пустую запись в top sub_menu
     83          //новый клон в список
     84            sub_menu_cnf[1+SUBDATA].Line2 = sub_menu_NZOP; //меню компонента
     85            sub_menu_cnf[1+SUBDATA].TypesWin = typeMenuSub;
     86          
     87            TxtStreamInit(&CONTROL_CNF,   &KadrMenuFormat_sub, sub_menu_cnf);//инит control и формир кадра
     88          
     89          //---------NZOP2------------------------------
     90            copyNZOP1ToRepozitar(0);//зарегистрировать в репозитарии
     91            rpzcomponent_obj.twinControl[0].twin_different();//diff to NZOP2
     92            rpzcomponent_obj.packet = NZOP_PACKET;    //номер пакетного компонента
     93          
     94            MakePacketNZOP();//создать пакет NZOP
     95          
     96          //---------NZOP1------------------------------
     97            copyNZOP1ToRepozitar(0);//зарегистрировать в репозитарии NZOP1
     98            rpzcomponent_obj.packet = -CNT_STUPEN_NZOP;    //к-во клонов в пакете
     99            //добавить имя пакета
    100            strcat(rpzcomponent_obj.nameComponent, " НЗОП");
    101            short ii=0;
    102            while(rpzcomponent_obj.nameComponent[ii]!=' ')
    103            {
    104              ii++;
    105            }
    106            rpzcomponent_obj.nameComponent[ii] = 0;
    107          
    108            MakePacketNZOP();//создать пакет NZOP
    109          
    110            //имена ступеней NZOP
    111            sub_menu_NZOP[1+SUBDATA].Line1     = nameStupenNZOP[0];
    112            sub_menu_NZOP[1+1+SUBDATA].Line1   = nameStupenNZOP[1];
    113          
    114            return 1;//пакетная регистрация
    115          }//copyNZOPpacketToRepozitar()
    116          
    117          void MakePacketNZOP()
    118          {
    119          //создать пакет
    120          //копировать в тень
    121            memcpy((void*)getShadowBuf(), cnfCOMPONENT, sizeof(COMPONENT_OBJ)*MAX_CNFCOMPONENT);
    122          
    123            memcpy(&(cnfCOMPONENT[0]), &rpzcomponent_obj, sizeof(COMPONENT_OBJ));
    124          
    125          //копировать из тени
    126            memcpy(&(cnfCOMPONENT[1]), (void*)getShadowBuf(), sizeof(COMPONENT_OBJ)*(MAX_CNFCOMPONENT-1));
    127          
    128            MakeEmptyTopSub_menu(&(sub_menu_NZOP[0]), sizeof(sub_menu_NZOP));//добавить пустую запись в top sub_menu
    129          //новый клон в список
    130            sub_menu_NZOP[1+SUBDATA].Line2 = (void *)&OpenMenuComponent; //меню компонента
    131            sub_menu_NZOP[1+SUBDATA].TypesWin = typeMenuProg;
    132          
    133            TxtStreamInit(&controlStruct_NZOP, &KadrMenuFormat_sub, sub_menu_NZOP);//инит control и формир кадра
    134          //инициализировать обекты в конфигурации
    135            initCOMPONENT(INITUST_TOPCOMP);
    136          }//MakePacket()
    137          
    138          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      32   MakePacketNZOP
        32   -> MakeEmptyTopSub_menu
        32   -> TxtStreamInit
        32   -> __aeabi_memcpy
        32   -> getShadowBuf
        32   -> initCOMPONENT
      16   copyNZOPpacketToRepozitar
        16   -- Indirect call
        16   -> MakeEmptyTopSub_menu
        16   -> MakePacketNZOP
        16   -> TxtStreamInit
        16   -> copyNZOP1ToRepozitar
        16   -> strcat


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_10
       4  ??DataTable1_11
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
       4  ??DataTable1_7
       4  ??DataTable1_8
       4  ??DataTable1_9
       8  ?_0
       8  ?_1
     168  MakePacketNZOP
      40  controlStruct_NZOP
     384  copyNZOPpacketToRepozitar
       8  nameStupenNZOP
      72  sub_menu_NZOP

 
  40 bytes in section .bss
  80 bytes in section .data
  16 bytes in section .rodata
 600 bytes in section .text
 
 600 bytes of CODE  memory
  16 bytes of CONST memory
 120 bytes of DATA  memory

Errors: none
Warnings: none
