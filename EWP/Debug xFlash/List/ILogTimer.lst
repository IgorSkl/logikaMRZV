###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.2.8542/W32 for ARM        20/Oct/2015  12:49:37
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  arm
#    Endian       =  little
#    Source file  =  
#        D:\IAR projects\HR1_0100_00_I720_new2\logictimers\ILogTimer.c
#    Command line =  
#        "D:\IAR projects\HR1_0100_00_I720_new2\logictimers\ILogTimer.c" -D
#        _STATIC_MEMORY_BOOT -lcN "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\Debug xFlash\List\" -o "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\Debug xFlash\Obj\" --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=ARM926EJ-S -e
#        --fpu=VFP9-S --dlib_config "C:\Program Files\IAR Systems\Embedded
#        Workbench 7.40\arm\INC\c\DLib_Config_Normal.h" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\NXP\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\LIB\include\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\inc\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\Igor\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\mal\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\component\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\psupervisor\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\virtualMenu\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\callbackElement\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\logictimers\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\zonaVRT\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\" --cpu_mode arm -On
#        --use_c++_inline
#    List file    =  
#        D:\IAR projects\HR1_0100_00_I720_new2\EWP\Debug
#        xFlash\List\ILogTimer.lst
#    Object file  =  
#        D:\IAR projects\HR1_0100_00_I720_new2\EWP\Debug xFlash\Obj\ILogTimer.o
#
###############################################################################

D:\IAR projects\HR1_0100_00_I720_new2\logictimers\ILogTimer.c
      1          
      2          #include "bazisdef.h"
      3          #include "logictimersdef.h"
      4          #include "logictimersfnc.h"
      5          
      6          //массив EL триггеров дл€ лог таймеров
      7          extern int  elTrgOldTimer[];
      8          extern int  elTrgOutTimer[];
      9          //лог массив запуска таймеров
     10          extern int  logMassTimer[];
     11          //главный массив лог таймеров
     12          extern BAZIS_TIMER_MEM  bazisTimerMem[];
     13          
     14          extern int  elTrgOldTimer_WL[];
     15          extern int  elTrgOutTimer_WL[];
     16          //лог массив запуска таймеров
     17          extern int  logMassTimer_WL[];
     18          //главный массив лог таймеров
     19          extern BAZIS_TIMER_MEM  bazisTimerMem_WL[];
     20          
     21          //глобальный сброс всех таймеров
     22          extern int  globalTimerReset;
     23          
     24          //#define _ILOGTIMER_
     25          /**********************************************
     26          ќЅ–ј“Ќџ… ‘ќ–ћ»–ќ¬ј“≈Ћ№
     27          tNumber - номер таймера
     28          ¬ыход - флаг работы
     29          **********************************************/
     30          int ILogTimer(int tNumber) @ "Fast_function"
     31          {
     32            if (globalTimerReset)
     33            {
     34          //   return LogTimerRES(tNumber, 1, 1);
     35          //#include "logTimerRES.ci"
     36              int tmp = *bazisTimerMem[tNumber].pntInputSignal;
     37          //if (RES)
     38          //{
     39              elTrgOldTimer[tNumber] = tmp;
     40              elTrgOutTimer[tNumber] = 0;//выход триг ускор переноса
     41              bazisTimerMem[tNumber].RESET = 1;
     42          //}//if
     43          
     44          //поймать фронт
     45              if ((tmp^elTrgOldTimer[tNumber])&(tmp^1))  elTrgOutTimer[tNumber] = 1;
     46          
     47          
     48              elTrgOldTimer[tNumber] = tmp;
     49          
     50          //если таймер досчитал
     51              if (bazisTimerMem[tNumber].FINISCH)
     52              {
     53                bazisTimerMem[tNumber].RESET = 1;
     54                elTrgOutTimer[tNumber] = 0;
     55              }//if
     56              /*
     57              else
     58              {
     59                if (!RES)
     60                  bazisTimerMem[tNumber].RESET = 0;
     61              }
     62              */
     63              return elTrgOutTimer[tNumber];
     64            }//if (globalTimerReset)
     65          
     66          //  return LogTimer(tNumber, 1);
     67          //#include "logTimer.ci"
     68            int tmp = *bazisTimerMem[tNumber].pntInputSignal;
     69          //поймать фронт
     70            if ((tmp^elTrgOldTimer[tNumber])&
     71                (tmp^1)
     72               )  elTrgOutTimer[tNumber] = 1;
     73          
     74            elTrgOldTimer[tNumber] = tmp;
     75          
     76          //если таймер досчитал
     77            if (bazisTimerMem[tNumber].FINISCH)
     78            {
     79              bazisTimerMem[tNumber].RESET = 1;
     80              elTrgOutTimer[tNumber] = 0;
     81            }//if
     82            else
     83            {
     84              bazisTimerMem[tNumber].RESET = 0;
     85            }
     86            return elTrgOutTimer[tNumber];
     87          
     88          }
     89          
     90          int ILogTimer_WL(int tNumber) @ "Fast_function"
     91          {
     92            if (globalTimerReset)
     93            {
     94          //   return LogTimerRES(tNumber, 1, 1);
     95          //#include "logTimerRES.ci"
     96              int tmp = *bazisTimerMem_WL[tNumber].pntInputSignal;
     97          //if (RES)
     98          //{
     99              elTrgOldTimer_WL[tNumber] = tmp;
    100              elTrgOutTimer_WL[tNumber] = 0;//выход триг ускор переноса
    101              bazisTimerMem_WL[tNumber].RESET = 1;
    102          //}//if
    103          
    104          //поймать фронт
    105              if ((tmp^elTrgOldTimer_WL[tNumber])&(tmp^1))  elTrgOutTimer_WL[tNumber] = 1;
    106          
    107          
    108              elTrgOldTimer_WL[tNumber] = tmp;
    109          
    110          //если таймер досчитал
    111              if (bazisTimerMem_WL[tNumber].FINISCH)
    112              {
    113                bazisTimerMem_WL[tNumber].RESET = 1;
    114                elTrgOutTimer_WL[tNumber] = 0;
    115              }//if
    116              /*
    117              else
    118              {
    119                if (!RES)
    120                  bazisTimerMem[tNumber].RESET = 0;
    121              }
    122              */
    123              return elTrgOutTimer_WL[tNumber];
    124            }//if (globalTimerReset)
    125          
    126          //  return LogTimer(tNumber, 1);
    127          //#include "logTimer.ci"
    128            int tmp = *bazisTimerMem_WL[tNumber].pntInputSignal;
    129          //поймать фронт
    130            if ((tmp^elTrgOldTimer_WL[tNumber])&
    131                (tmp^1)
    132               )  elTrgOutTimer_WL[tNumber] = 1;
    133          
    134            elTrgOldTimer_WL[tNumber] = tmp;
    135          
    136          //если таймер досчитал
    137            if (bazisTimerMem_WL[tNumber].FINISCH)
    138            {
    139              bazisTimerMem_WL[tNumber].RESET = 1;
    140              elTrgOutTimer_WL[tNumber] = 0;
    141            }//if
    142            else
    143            {
    144              bazisTimerMem_WL[tNumber].RESET = 0;
    145            }
    146            return elTrgOutTimer_WL[tNumber];
    147          
    148          }//ILogTimer_WL(int tNumber)

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   ILogTimer
       0   ILogTimer_WL


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
     384  ILogTimer
     384  ILogTimer_WL

 
 796 bytes in section Fast_function
 
 796 bytes of CODE memory

Errors: none
Warnings: none
