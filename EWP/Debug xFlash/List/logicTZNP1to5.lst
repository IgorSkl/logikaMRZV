###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.2.8542/W32 for ARM        12/Oct/2015  11:05:01
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  arm
#    Endian       =  little
#    Source file  =  
#        D:\IAR projects\HR1_0100_00_I720_new2\component\logicTZNP1to5.c
#    Command line =  
#        "D:\IAR projects\HR1_0100_00_I720_new2\component\logicTZNP1to5.c" -D
#        _STATIC_MEMORY_BOOT -lcN "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\Debug xFlash\List\" -o "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\Debug xFlash\Obj\" --debug
#        --endian=little --cpu=ARM926EJ-S -e --fpu=VFP9-S --dlib_config
#        "C:\Program Files\IAR Systems\Embedded Workbench
#        7.40\arm\INC\c\DLib_Config_Normal.h" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\NXP\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\LIB\include\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\inc\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\Igor\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\mal\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\component\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\psupervisor\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\virtualMenu\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\callbackElement\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\logictimers\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\zonaVRT\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\" --cpu_mode arm -Ohs
#        --use_c++_inline
#    List file    =  
#        D:\IAR projects\HR1_0100_00_I720_new2\EWP\Debug
#        xFlash\List\logicTZNP1to5.lst
#    Object file  =  
#        D:\IAR projects\HR1_0100_00_I720_new2\EWP\Debug
#        xFlash\Obj\logicTZNP1to5.o
#
###############################################################################

D:\IAR projects\HR1_0100_00_I720_new2\component\logicTZNP1to5.c
      1          
      2          
      3          #include <stdio.h>
      4          #include <string.h>
      5          
      6          #include "bazisdef.h"
      7          #include "component\componentdef.h"
      8          #include "psuperVisor\psvisor_helpdef.h"
      9          
     10          #include "logictimers\logictimersmac.h"
     11          
     12          #include "logictimers\logictimersfnc.h"
     13          
     14          #include "..\bazis.h"
     15          
     16          #include "toSpeedOptim.h"
     17          
     18          #define _HIDE_COMPONENT
     19          #include "PRM1Component.c"
     20          #include "TZNP1Component.c"
     21          
     22          extern int GlobalPO1;
     23          extern int GlobalPO2;
     24          extern int GlobalPO3;
     25          extern int GlobalPO4;
     26          //extern int GlobalLevelI_ABC[];
     27          extern int GlobalLevel_3I0;
     28          extern int GlobalLevel_3U0;
     29          
     30          extern COMPONENT_OBJ  cnfCOMPONENT[];//конфигурация
     31          extern int  logMassTimer[];
     32          extern int  ENAcmd[];
     33          extern int   WideCmdRTBuffer[];
     34          extern int   tempLog[];
     35          extern int  spvUSTAVKI[];//текущие уставки супервизора
     36          extern int offsetIOCmdPRM1;//смещение для IO PRM1
     37          
     38          //сектора направл TZNP
     39          extern int sectorTZNP1, sectorTZNP2, sectorTZNP3, sectorTZNP4, sectorTZNP5;
     40          
     41          void  logicTZNP1to5(int idxC) @ "Fast_function"
     42          {
     43          //логика компонента
     44          
     45              int tmpOffsetT    =
     46                          cnfCOMPONENT[idxC].offsetTimers;   //таймера компонента в конфигурации
     47              int tmpOffsetIO   =
     48                          cnfCOMPONENT[idxC].offsetIOCmd;    //IO команды
     49              int tmpOffsetENA  =
     50                          cnfCOMPONENT[idxC].offsetENACmd;    //ENA команды
     51              int tmpOffsetUSpv =
     52                          cnfCOMPONENT[idxC].offsetUstSpv;    //уставки SPV
     53              int tmpOffsetTL   =
     54                          cnfCOMPONENT[idxC].offsetTLCmd;    //TL команды
     55          
     56            int numClon =    //номер клона
     57                          cnfCOMPONENT[idxC].numClon;    
     58          
     59          //сектора направл TZNP
     60           int sectorTZNP =0;
     61           switch(numClon)
     62          	{
     63          	 case 1: 
     64                         sectorTZNP =sectorTZNP1;
     65                         break;
     66          	 case 2: 
     67                         sectorTZNP =sectorTZNP2;
     68                         break;
     69          	 case 3: sectorTZNP =sectorTZNP3;break;
     70          	 case 4: sectorTZNP =sectorTZNP4;break;
     71          	 case 5: sectorTZNP =sectorTZNP5;break;
     72          	default:;
     73          	}//switch
     74          
     75           if(ENA_LOGIC(ENA4_TZNP1to5)==0 && sectorTZNP==1) sectorTZNP=0;
     76           if(ENA_LOGIC(ENA4_TZNP1to5)==0 && sectorTZNP==2) sectorTZNP=1;
     77          
     78           if(ENA_LOGIC(ENA4_TZNP1to5)==1 && sectorTZNP==1) sectorTZNP=1;
     79           if(ENA_LOGIC(ENA4_TZNP1to5)==1 && sectorTZNP==2) sectorTZNP=0;
     80          
     81            detectorLevelUP(GlobalLevel_3I0,
     82                                               tmpOffsetUSpv+SPVSRABUST_TZNP1to5_3I0,
     83                                               tmpOffsetUSpv+SPVVOZVUST_TZNP1to5_3I0,
     84                                               tmpOffsetUSpv+SPV_OUT3I0_TZNP1to5);
     85          
     86             
     87            detectorLevelUP(GlobalLevel_3U0,
     88                                               tmpOffsetUSpv+SPVSRABUST_TZNP1to5_3U0,
     89                                               tmpOffsetUSpv+SPVVOZVUST_TZNP1to5_3U0,
     90                                               tmpOffsetUSpv+SPV_OUT3U0_TZNP1to5);
     91          
     92            
     93           int LocalPO_3I0 = SPV_UST(SPV_OUT3I0_TZNP1to5);
     94           int LocalPO_3U0 = SPV_UST(SPV_OUT3U0_TZNP1to5);
     95           int LocalPO_3I03U0 = 
     96                             SPV_UST(SPV_OUT3U0_TZNP1to5) &
     97                             SPV_UST(SPV_OUT3I0_TZNP1to5) &
     98          		//сектора направл TZNP
     99          		sectorTZNP;
    100          
    101          #include "inc_usktznp1.ci"
    102          #include "inc_usktznp1_3i0.ci"
    103          
    104            //*******TZNP1********
    105            int commonTZNP1to5 =
    106              //CMD_TZNP1to5
    107              (IO_LOGIC(IOCMD1_TZNP1to5)^1);
    108          //    ENA_LOGIC(ENA1_MTZ2to5);
    109          
    110          
    111              //L1
    112            tmp1 =
    113              //TZNP1to5_PO1
    114              TL_LOGIC(TLCMD1_TZNP1to5) =
    115                //Сраб ПО ТЗНП1
    116                //CMD_TZNP1to5_PO1
    117                IO_LOGIC(IOCMD4_TZNP1to5) =
    118                  commonTZNP1to5 &
    119                  //ПО ТЗНП1
    120                  (GlobalPO1 | LocalPO_3I03U0) &
    121                  //ENA_TZNP1to5
    122                  ENA_LOGIC(ENA1_TZNP1to5);
    123          
    124          
    125            //L4
    126            //TZNP1to5_TIM1
    127            LSIGNAL_TIMER(TIMER1_TZNP1to5)  = 
    128              //RES_TZNP1to5
    129              TL_LOGIC(TLCMD6_TZNP1to5) &
    130              tmp1;
    131          
    132            //дельта таймера TZNP1to5_TIM1
    133            TL_LOGIC(TL10_TZNP1TO5) = IS_TIMER_DELTA12(TIMER1_TZNP1to5)^1;
    134          
    135              //L2
    136            tmp2 =
    137              //TZNP1to5_PO2
    138              TL_LOGIC(TLCMD2_TZNP1to5) =
    139                //Сраб ПО ТЗНП1 3I0
    140                //CMD_TZNP1to5_PO2
    141                IO_LOGIC(IOCMD6_TZNP1to5) =
    142                  commonTZNP1to5 &
    143                  //ПО ТЗНП1 3I0
    144                  (GlobalPO2 | LocalPO_3I0) &
    145                  //TZNP1to5_3I0
    146                  ENA_LOGIC(ENA2_TZNP1to5);
    147          
    148            //L5
    149            //TZNP1to5_TIM2
    150            LSIGNAL_TIMER(TIMER2_TZNP1to5)  =
    151              //RES_TZNP1to5_3I0
    152              TL_LOGIC(TLCMD6_TZNP1to5_3I0) &
    153              tmp2;
    154          
    155            //дельта таймера TZNP1to5_TIM1
    156            TL_LOGIC(TL10_TZNP1TO5_3I0) = IS_TIMER_DELTA12(TIMER2_TZNP1to5)^1;
    157          
    158              //L3
    159              //TZNP1to5_PO3
    160              TL_LOGIC(TLCMD3_TZNP1to5) =
    161              //TZNP1to5_TIM3
    162              LSIGNAL_TIMER(TIMER3_TZNP1to5)  =
    163                //Сраб ПО ТЗНП1 3U0
    164                //CMD_TZNP1to5_PO3
    165                IO_LOGIC(IOCMD8_TZNP1to5) =
    166                  commonTZNP1to5 &
    167                  //ПО ТЗНП1 3U0
    168                  (GlobalPO3 | LocalPO_3U0) &
    169                  //TZNP1to5 3U0
    170                  ENA_LOGIC(ENA3_TZNP1to5);
    171          
    172            //L6
    173            int tmp = LSIGNAL_TIMER(TIMER_BO_TZNP1to5)  =
    174                        //TZNP1to5_USKOR
    175                        TL_LOGIC(TLCMD4_TZNP1to5) |
    176                        //TZNP1to5_TIM1
    177                        PLOG_TIMER(TIMER1_TZNP1to5);
    178            
    179            //Сраб ТЗНП1
    180            //CMD_TZNP1to5
    181            IO_LOGIC(IOCMD5_TZNP1to5) =
    182              ILOG_TIMER(TIMER_BO_TZNP1to5)|tmp;
    183          
    184            //L7
    185            tmp = LSIGNAL_TIMER(TIMER_BO_TZNP1to5_3I0)  =
    186                        //TZNP1to5_3I0_USKOR
    187                        TL_LOGIC(TLCMD4_TZNP1to5_3I0) |
    188                        //TZNP1to5_TIM2
    189                        PLOG_TIMER(TIMER2_TZNP1to5);
    190          
    191            //Сраб ТЗНП1 3I0
    192            //CMD_TZNP1to5_3I0
    193            IO_LOGIC(IOCMD7_TZNP1to5) =
    194              ILOG_TIMER(TIMER_BO_TZNP1to5_3I0)|tmp;
    195          
    196            tmp = LSIGNAL_TIMER(TIMER_BO_TZNP1to5_3U0)  =
    197                        //TZNP1to5_TIM3
    198                        PLOG_TIMER(TIMER3_TZNP1to5);
    199          
    200            //Сраб ТЗНП1 3U0
    201            //CMD_TZNP1to5_3U0
    202            IO_LOGIC(IOCMD9_TZNP1to5) =
    203              ILOG_TIMER(TIMER_BO_TZNP1to5_3U0)|tmp;
    204          
    205          }//logicTZNP1to5(short idxC)
    206          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      80   logicTZNP1to5
        80   -> FLogTimer
        80   -> ILogTimer
        80   -> PLogTimer
        80   -> detectorLevelUP
        80   -> isTimerDelta


   Section sizes:

   Bytes  Function/Label
   -----  --------------
    1624  logicTZNP1to5

 
 1 624 bytes in section Fast_function
 
 1 624 bytes of CODE memory

Errors: none
Warnings: none
