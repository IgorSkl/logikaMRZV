###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.2.8542/W32 for ARM        20/Oct/2015  12:49:44
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  arm
#    Endian       =  little
#    Source file  =  
#        D:\IAR
#        projects\HR1_0100_00_I720_new2\SettingIci\SettingIci_RangirNZOP.c
#    Command line =  
#        "D:\IAR
#        projects\HR1_0100_00_I720_new2\SettingIci\SettingIci_RangirNZOP.c" -D
#        _STATIC_MEMORY_BOOT -lcN "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\Debug xFlash\List\" -o "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\Debug xFlash\Obj\" --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=ARM926EJ-S -e
#        --fpu=VFP9-S --dlib_config "C:\Program Files\IAR Systems\Embedded
#        Workbench 7.40\arm\INC\c\DLib_Config_Normal.h" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\NXP\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\LIB\include\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\inc\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\Igor\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\mal\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\component\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\psupervisor\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\virtualMenu\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\callbackElement\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\logictimers\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\zonaVRT\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\" --cpu_mode arm -On
#        --use_c++_inline
#    List file    =  
#        D:\IAR projects\HR1_0100_00_I720_new2\EWP\Debug
#        xFlash\List\SettingIci_RangirNZOP.lst
#    Object file  =  
#        D:\IAR projects\HR1_0100_00_I720_new2\EWP\Debug
#        xFlash\Obj\SettingIci_RangirNZOP.o
#
###############################################################################

D:\IAR projects\HR1_0100_00_I720_new2\SettingIci\SettingIci_RangirNZOP.c
      1          #include "lpc_types.h"
      2          #include "lpc_irq_fiq.h"
      3          #include "lpc_arm922t_cp15_driver.h"
      4          
      5          #include "lpc32xx_hstimer.h"
      6          #include "lpc32xx_ssp.h"
      7          #include "lpc32xx_gpio.h"
      8          
      9          #include "lpc32xx_intc_driver.h"
     10          #include "lpc32xx_clkpwr_driver.h"
     11          
     12          #include "arm926ej_cp15_drv.h"
     13          #include "ttbl.h"
     14          
     15          #include <stdio.h>
     16          #include <string.h>
     17          
     18          #include "psuperVisor\supermanager.h"
     19          
     20          #include "component\componentdef.h"
     21          #include "psuperVisor\psvisor_helpdef.h"
     22          
     23          #include "psuperVisor\psvisor_helpfnc.h"
     24          #include "virtualMenu\rangmanagerfnc.h"
     25          #include "virtualmenu\systemmenufnc.h"
     26          #include "SettingIci\SettingIci.h"
     27          
     28          #include "toSpeedOptim.h"
     29          #include "toSpeedDIS.h"
     30          
     31          #include "header.h"
     32          #include "ici_r_ef.h"
     33          
     34          #define _HIDE_COMPONENT
     35          #include "NZOP1Component.c"
     36          
     37          void SettingIci_RangirNZOPToDV(int nDV)
     38          {
     39            int numDV = nDV - DV1_SM;//нормировка
     40                //Блокировка ЗОП1
     41            if(isActivCmdDV(BLOCK_ZOP1_DI_IEPRF_ONB, numDV))//проверка активности команды на ДВ
     42                SetCmdToUVV(NZOP_COMP1,  1, IOCMD1_NZOP1to2, nDV);//отранж на ДВ
     43                //Блокировка ЗОП2
     44            if(isActivCmdDV(BLOCK_ZOP2_DI_IEPRF_ONB, numDV))//проверка активности команды на ДВ
     45                SetCmdToUVV(NZOP_COMP1,  2, IOCMD1_NZOP1to2, nDV);//отранж на ДВ
     46          }//SettingIci_RangirPRM2DV(int nDV)
     47          
     48          void SettingIci_RangirNZOPToRele(int nRele)
     49          {
     50          //отранж PRM1 на Реле
     51          int numRele = nRele - RELE1_SM;//нормировка
     52          //Блокировка ЗОП1
     53           if(isActivCmdRele(BLOCK_ZOP1_DI_OEPRF_ONB, numRele))//проверка активности команды на Rele
     54                SetCmdToUVV(NZOP_COMP1,  1, IOCMD1_NZOP1to2, nRele);//отранж 
     55           //Сектор НЗОП1Впер 
     56           if(isActivCmdRele(STPDEV_SECTOR_ZOP1_STAIGHT_OEPRF_ONB, numRele))//проверка активности команды на Rele
     57                SetCmdToUVV(NZOP_COMP1,  1, IOCMD6_NZOP1to2, nRele);//отранж 
     58           //Сектор НЗОП1назад
     59           if(isActivCmdRele(STPDEV_SECTOR_ZOP1_BACK_OEPRF_ONB, numRele))//проверка активности команды на Rele
     60                SetCmdToUVV(NZOP_COMP1,  1, IOCMD7_NZOP1to2, nRele);//отранж 
     61           //ПО ЗОП1
     62           if(isActivCmdRele(STPDEV_ZOP1_BORING_OEPRF_ONB, numRele))//проверка активности команды на Rele
     63                SetCmdToUVV(NZOP_COMP1,  1, IOCMD2_NZOP1to2, nRele);//отранж 
     64           //ПО НЗОП1Впер
     65           if(isActivCmdRele(STPDEV_ZOP1_STAIGHT_OEPRF_ONB, numRele))//проверка активности команды на Rele
     66                SetCmdToUVV(NZOP_COMP1,  1, IOCMD3_NZOP1to2, nRele);//отранж 
     67           //ПО НЗОП1ННазад
     68           if(isActivCmdRele(STPDEV_ZOP1_BACK_OEPRF_ONB, numRele))//проверка активности команды на Rele
     69                SetCmdToUVV(NZOP_COMP1,  1, IOCMD4_NZOP1to2, nRele);//отранж 
     70           //Сраб НЗОП1
     71           if(isActivCmdRele(ZOP1_OEPRF_ONB, numRele))//проверка активности команды на Rele
     72                SetCmdToUVV(NZOP_COMP1,  1, IOCMD5_NZOP1to2, nRele);//отранж 
     73          
     74          //Блокировка ЗОП2
     75           if(isActivCmdRele(BLOCK_ZOP2_DI_OEPRF_ONB, numRele))//проверка активности команды на Rele
     76                SetCmdToUVV(NZOP_COMP1,  2, IOCMD1_NZOP1to2, nRele);//отранж 
     77           //Сектор НЗОП2Впер 
     78           if(isActivCmdRele(STPDEV_SECTOR_ZOP2_STAIGHT_OEPRF_ONB, numRele))//проверка активности команды на Rele
     79                SetCmdToUVV(NZOP_COMP1,  2, IOCMD6_NZOP1to2, nRele);//отранж 
     80           //Сектор НЗОП2назад
     81           if(isActivCmdRele(STPDEV_SECTOR_ZOP2_BACK_OEPRF_ONB, numRele))//проверка активности команды на Rele
     82                SetCmdToUVV(NZOP_COMP1,  2, IOCMD7_NZOP1to2, nRele);//отранж 
     83           //ПО ЗОП2
     84           if(isActivCmdRele(STPDEV_ZOP2_BORING_OEPRF_ONB, numRele))//проверка активности команды на Rele
     85                SetCmdToUVV(NZOP_COMP1,  2, IOCMD2_NZOP1to2, nRele);//отранж 
     86           //ПО НЗОП2Впер
     87           if(isActivCmdRele(STPDEV_ZOP2_STAIGHT_OEPRF_ONB, numRele))//проверка активности команды на Rele
     88                SetCmdToUVV(NZOP_COMP1,  2, IOCMD3_NZOP1to2, nRele);//отранж 
     89           //ПО НЗОП2ННазад
     90           if(isActivCmdRele(STPDEV_ZOP2_BACK_OEPRF_ONB, numRele))//проверка активности команды на Rele
     91                SetCmdToUVV(NZOP_COMP1,  2, IOCMD4_NZOP1to2, nRele);//отранж 
     92           //Сраб НЗОП2
     93           if(isActivCmdRele(ZOP2_OEPRF_ONB, numRele))//проверка активности команды на Rele
     94                SetCmdToUVV(NZOP_COMP1,  2, IOCMD5_NZOP1to2, nRele);//отранж 
     95          }// SettingIci_RangirNZOPToRele(int nRele)
     96          
     97          void SettingIci_RangirNZOPToLed(int nLed)
     98          {
     99          //отранж DZ1 на СДИ
    100          int numLed = nLed - CDI1_SM;//нормировка
    101          // Блокировка UMin1
    102          // if(isActivCmdLed(BLOCK_UMIN1_DI_OEPRF_ONB, numLed))//проверка активности команды на Реле
    103            //    SetCmdToUVV(UMM_COMP1,  1, IOCMD3_UMM, nLed);//отранж 
    104          
    105          }// SettingIci_RangirPRM1ToRele(int nLed)

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   SettingIci_RangirNZOPToDV
        16   -> SetCmdToUVV
        16   -> isActivCmdDV
       0   SettingIci_RangirNZOPToLed
      16   SettingIci_RangirNZOPToRele
        16   -> SetCmdToUVV
        16   -> isActivCmdRele


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     112  SettingIci_RangirNZOPToDV
       8  SettingIci_RangirNZOPToLed
     688  SettingIci_RangirNZOPToRele

 
 808 bytes in section .text
 
 808 bytes of CODE memory

Errors: none
Warnings: 1
