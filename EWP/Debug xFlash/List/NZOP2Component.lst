###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.2.8542/W32 for ARM        12/Oct/2015  11:05:03
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  arm
#    Endian       =  little
#    Source file  =  
#        D:\IAR projects\HR1_0100_00_I720_new2\component\NZOP2Component.c
#    Command line =  
#        "D:\IAR projects\HR1_0100_00_I720_new2\component\NZOP2Component.c" -D
#        _STATIC_MEMORY_BOOT -lcN "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\Debug xFlash\List\" -o "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\Debug xFlash\Obj\" --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=ARM926EJ-S -e
#        --fpu=VFP9-S --dlib_config "C:\Program Files\IAR Systems\Embedded
#        Workbench 7.40\arm\INC\c\DLib_Config_Normal.h" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\NXP\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\LIB\include\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\inc\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\Igor\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\mal\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\component\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\psupervisor\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\virtualMenu\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\callbackElement\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\logictimers\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\zonaVRT\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\" --cpu_mode arm -On
#        --use_c++_inline
#    List file    =  
#        D:\IAR projects\HR1_0100_00_I720_new2\EWP\Debug
#        xFlash\List\NZOP2Component.lst
#    Object file  =  
#        D:\IAR projects\HR1_0100_00_I720_new2\EWP\Debug
#        xFlash\Obj\NZOP2Component.o
#
###############################################################################

D:\IAR projects\HR1_0100_00_I720_new2\component\NZOP2Component.c
      1          #ifndef _HIDE_COMPONENT
      2          /*
      3          #include <vcl.h>
      4          #include <strstrea.h>
      5          #include <math.h>
      6          #include <mem.h>
      7          #include <fstream.h>
      8          #include <strstrea.h>
      9          #include <iomanip.h>
     10          #pragma hdrstop
     11          
     12          #include "vmenuDis.h"
     13          */
     14          
     15          #include <stdio.h>
     16          #include <string.h>
     17          
     18          #include "bazisdef.h"
     19          #include "component\componentdef.h"
     20          #include "virtualMenu\systemmenudef.h"
     21          #include "virtualMenu\ustmanagerdef.h"
     22          
     23          #include "virtualMenu\textstreamfnc.h"
     24          #include "virtualMenu\systemmenufnc.h"
     25          #include "virtualMenu\ustmanagerfnc.h"
     26          #include "psuperVisor\psvisor_helpfnc.h"
     27          #include "virtualMenu\rangmanagerfnc.h"
     28          
     29          #include "virtualMenu\viewMenuList.h"
     30          
     31          #include "..\bazis.h"
     32          
     33          //код компонентов
     34          #define KOD_COMPONENT  NZOP_COMP1
     35          //к-во ступеней
     36          #define CNT_STUPEN_NZOP  2
     37          
     38          #endif // _HIDE_COMPONENT
     39          
     40          #ifndef _HIDE_COMPONENT
     41          
     42          #define _HIDE_COMPONENT
     43          #include "NZOP1Component.c"
     44          
     45          extern COMPONENT_OBJ rpzcomponent_obj;//обект компонента для репозитария
     46          extern int  tmpUSTAVKI[];
     47          
     48          extern LineMenuItem sub_menu_cnf[];
     49          extern LineMenuItem sub_menu_NZOP[];
     50          extern LineMenuItem sub_menu_tmp[];
     51          extern int  IndexUstSPV;//индекс уставок в супервизоре
     52          
     53          extern COMPONENT_OBJ  cnfCOMPONENT[];
     54          extern int  spvUSTAVKI[];//текущие уставки супервизора
     55          
     56          void PereinitUstListCompNZOP2(short flg);
     57          void UstListCompNZOP2();
     58          void ustRedactorCompNZOP2();
     59          void UstCompNZOP2();
     60          
     61          void PereinitVidListCompNZOP2(short flg);
     62          void VidListCompNZOP2();
     63          void vidRedactorCompNZOP2();
     64          void VidCompNZOP2();
     65          
     66          void PereinitUprListCompNZOP2(short flg);
     67          void UprListCompNZOP2();
     68          void uprRedactorCompNZOP2();
     69          void UprCompNZOP2();
     70          short  KadrMenuFormat_upr_compNZOP2(void *workCntr);//(WorkControl *workCntr);
     71          int  initUstNZOP2(char init);
     72          void  prepareUstNZOP1(short idxC);
     73          void  prepareUstNZOP2(short idxC);
     74          
     75          void EditUstNZOP2();
     76          void EditVidNZOP2();
     77          void EditUprNZOP2();
     78          int codecUstNZOP1(char codec, short offset, int ust);
     79          int codecUstNZOP2(char codec, short offset, int ust);
     80          int initUstNZOP1(char init);
     81          
     82          short  KadrMenuFormat_ustvidNZOP(void *workCntr);
     83          char *selectorUprStrNZOP1(short iBit, UNS_32 ustUpr);
     84          void diffNZOP2ToRepozitar();
     85          
     86          char NZOP2_TITLE[] = "НЗОП2";
     87          
     88          IONAMESTATUS_COMPONENT ionsNZOP2[IOCMD_NZOP1to2_TOTAL] =
     89          {
     90            {
     91              1,//статус iocmd1
     92              "Стат блок НЗОП2"
     93            },
     94            {
     95              1,//статус iocmd2
     96              "Сраб ПО НЗОП2"
     97            },
     98            {
     99              1,//статус iocmd3
    100              "Сраб ПО НЗОП2 ВПД"
    101            },
    102            {
    103              1,//статус iocmd4
    104              "Сраб ПО НЗОП2 НЗД"
    105            },
    106            {
    107              1,//статус iocmd5
    108              "Сраб НЗОП2"
    109            },
    110            {
    111              1,//статус iocmd6
    112              "Сектор НЗОП2 ВПД"
    113            },
    114            {
    115              1,//статус iocmd7
    116              "Сектор НЗОП2 НЗД"
    117            }
    118          };
    119          
    120          LineMenuItem sub_menu_comp_NZOP2[8] =
    121          {
    122            { NZOP2_TITLE, NULL},//title
    123            { &CONTROL1_COMP,  &sub_menu_NZOP, typeMenuSub},//control_item, parent
    124            { "Уставки НЗОП2",    (void *)&UstListCompNZOP2, typeMenuProg},
    125            { "Выдержки НЗОП2",   (void *)&VidListCompNZOP2, typeMenuProg},
    126            { "Управление НЗОП2", (void *)&UprListCompNZOP2, typeMenuProg},
    127            { NULL, NULL}
    128          };
    129          
    130          LineMenuItem sub_menu_ust_compNZOP2[] =
    131          {
    132            { "Уставки НЗОП2", NULL},//title
    133            { &CONTROL2_COMP, sub_menu_comp_NZOP2, typeMenuList},//control_item, parent
    134            { "Уст НЗОП2",        (void *)&UstCompNZOP2, typeMenuProg},
    135            { "Уст НЗОП2 вперед", (void *)&UstCompNZOP2, typeMenuProg},
    136            { "Уст НЗОП2 назад",  (void *)&UstCompNZOP2, typeMenuProg},
    137            { NULL, NULL}
    138          
    139          };
    140          
    141          LineMenuItem sub_menu_vid_compNZOP2[] =
    142          {
    143            { "Выдержки НЗОП2", NULL},//title
    144            { &CONTROL2_COMP, sub_menu_comp_NZOP2, typeMenuList},//control_item, parent
    145            { "Выдержка НЗОП2",        (void *)&VidCompNZOP2, typeMenuProg},
    146            { "Выдержка НЗОП2 вперед", (void *)&VidCompNZOP2, typeMenuProg},
    147            { "Выдержка НЗОП2 назад",  (void *)&VidCompNZOP2, typeMenuProg},
    148            { NULL, NULL}
    149          
    150          };
    151          
    152          LineMenuItem sub_menu_upr_compNZOP2[] =
    153          {
    154            { "Управл НЗОП2", NULL},//title
    155            { &CONTROL2_COMP, sub_menu_comp_NZOP2, typeMenuList},//control_item, parent
    156            { "Вид НЗОП2",           (void *)&UprCompNZOP2, typeMenuProg},
    157            { "Управл НЗОП2",        (void *)&UprCompNZOP2, typeMenuProg},
    158            { "Направл НЗОП2",       (void *)&UprCompNZOP2, typeMenuProg},
    159            { NULL, NULL}
    160          
    161          };
    162          
    163          void PereinitUstListCompNZOP2(short flg)
    164          {
    165          //переиниц
    166            //инит компонентного контроля
    167            TxtStreamInit(&CONTROL2_COMP, &KadrMenuFormat_ustvidNZOP, sub_menu_ust_compNZOP2);//инит control и формир кадра
    168            if(flg==0)//END
    169            {
    170              TxtStreamSetEnd(&CONTROL2_COMP, SIZE_PAGE_VIEW/2);//перейти на END
    171            }//if
    172          
    173            ViewDiskrMenuList();//вывести окно отображения
    174            ListPStr();//доступ к уставкам
    175          }//PereinitUstListComp3()
    176          
    177          void UstListCompNZOP2()
    178          {
    179            SelectorMNGBAZA(0);//установка базу уставок
    180          
    181            SelectorSUBMENU(sub_menu_ust_compNZOP2);//уcтановить текущее субменю
    182          
    183            SelectorTEXTCONTROL(&CONTROL2_COMP);//текущий control
    184          
    185            SelectorFHOME(&PereinitUstListCompNZOP2);//указатель на ф-цию HOME
    186            InitFHOME(1);//exe ф-цию HOME
    187          
    188            LanderUpDown();//wkl Up Down
    189          }//UstListCompNZOP2()
    190          
    191          void UstCompNZOP2()
    192          {
    193            SelectorCRRLIGHTLINE();//найти подсвеченную строку текущего текст потока
    194            PrepareEditMenu(sub_menu_ust_compNZOP2);
    195            PassWord(EditUstNZOP2);
    196          }//VidCompNZOP2()
    197          
    198          void EditUstNZOP2()
    199          {
    200          //редактировать уставку
    201            SystemEditUst(sub_menu_ust_compNZOP2);//[LIGHTLINEMENU +1+SUBDATA].Line1, LIGHTLINEMENU);
    202          }//UstCompNZOP2()
    203          
    204          //--------------------------------------------------
    205          
    206          void PereinitVidListCompNZOP2(short flg)
    207          {
    208          //переиниц
    209            //инит компонентного контроля
    210            TxtStreamInit(&CONTROL2_COMP, &KadrMenuFormat_ustvidNZOP, sub_menu_vid_compNZOP2);//инит control и формир кадра
    211            if(flg==0)//END
    212            {
    213              TxtStreamSetEnd(&CONTROL2_COMP, SIZE_PAGE_VIEW/2);//перейти на END
    214            }//if
    215          
    216            ViewDiskrMenuList();//вывести окно отображения
    217            ListPStr();//доступ к уставкам
    218          }//PereinitVidListCompNZOP2(short flg)
    219          
    220          void VidListCompNZOP2()
    221          {
    222            SelectorMNGBAZA(MNGVID_NZOP1to2);//установка базы уставок
    223          
    224            SelectorSUBMENU(sub_menu_vid_compNZOP2);//утановить текущее субменю
    225          
    226            SelectorTEXTCONTROL(&CONTROL2_COMP);//текущий control
    227          
    228            SelectorFHOME(&PereinitVidListCompNZOP2);//указатель на ф-цию HOME
    229            InitFHOME(1);//exe ф-цию HOME
    230          
    231            LanderUpDown();//wkl Up Down
    232          }//VidListCompNZOP2()
    233          
    234          void VidCompNZOP2()
    235          {
    236            SelectorCRRLIGHTLINE();//найти подсвеченную строку текущего текст потока
    237            PrepareEditMenu(sub_menu_vid_compNZOP2);
    238          //  PassWord(EditVidAPV);
    239            EditVidNZOP2();
    240          }//VidCompNZOP2()
    241          
    242          void EditVidNZOP2()
    243          {
    244          //редактировать уставку
    245            SystemEditUst(sub_menu_vid_compNZOP2);//[LIGHTLINEMENU +1+SUBDATA].Line1, LIGHTLINEMENU);
    246          }//
    247          
    248          //--------------------------------------------------
    249          
    250          void PereinitUprListCompNZOP2(short flg)
    251          {
    252          //переиниц
    253            //инит компонентного контроля
    254            TxtStreamInit(&CONTROL2_COMP, &KadrMenuFormat_upr_compNZOP2, NULL);//инит control и формир кадра
    255            if(flg==0)//END
    256            {
    257              TxtStreamSetEnd(&CONTROL2_COMP, SIZE_PAGE_VIEW/2);//перейти на END
    258            }//if
    259          
    260            ViewDiskrMenuList();//вывести окно отображения
    261            ListPStr();//доступ к уставкам
    262          }//PereinitUstListComp2()
    263          
    264          void UprListCompNZOP2()
    265          {
    266            SelectorMNGBAZA(MNGUPR_NZOP1to2);//установка базы уставок
    267          
    268            SelectorSUBMENU(sub_menu_upr_compNZOP2);//утановить текущее субменю
    269          
    270            SelectorTEXTCONTROL(&CONTROL2_COMP);//текущий control
    271          
    272            SelectorFHOME(&PereinitUprListCompNZOP2);//указатель на ф-цию HOME
    273            InitFHOME(1);//exe ф-цию HOME
    274          
    275            LanderUpDown();//wkl Up Down
    276          }//VidListCompNZOP2()
    277          
    278          void UprCompNZOP2()
    279          {
    280            SelectorCRRLIGHTLINE();//найти подсвеченную строку текущего текст потока
    281            PrepareEditMenu(sub_menu_upr_compNZOP2);
    282            PassWord(EditUprNZOP2);
    283          
    284          }//UprCompNZOP2()
    285          
    286          void EditUprNZOP2()
    287          {
    288          //редактировать уставку упр
    289            char *nameUpr = (char *)sub_menu_upr_compNZOP2[LIGHTLINEMENU +1+SUBDATA].Line1;
    290            UpravlRedactor(nameUpr, LIGHTLINEMENU, &selectorUprStrNZOP1);//редактировать уставку управления
    291          }//EditUprNZOP2()
    292          
    293          short  KadrMenuFormat_upr_compNZOP2(void *pstr)//(WorkControl *workCntr)
    294          {
    295           WorkControl *workCntr = (WorkControl *)pstr;
    296          //формирователь кадра
    297            RESET_COUNTER;//сброс счетчиков
    298            for(int i=0;; i++)
    299            {
    300          //критерий терминатора
    301              char *nameUpr = (char *)sub_menu_upr_compNZOP2[i+1+SUBDATA].Line1;
    302              if(nameUpr==NULL) break;
    303          
    304              COMPARE_COUNTER
    305              {
    306                strcpy((char *)workCntr->twoString, nameUpr);
    307          
    308                //    UpravlViewerInKadr(nameUpr, i, workCntr);//отобразить уставку управления в кадре
    309                strcpy((char *)workCntr->twoString + sizeof(WorkVariantChar)/2,
    310                selectorUprStrNZOP1(i, getCurrentMngUSTAVKI()));
    311          
    312                return 1;//сравнить счетчики кадров
    313              }
    314            }//for
    315          
    316            return 1;
    317          }//KadrMenuFormat_upr_compNZOP2(WorkControl *workCntr)
    318          
    319          int initUstNZOP2(char init)
    320          {
    321           return initUstNZOP1(init);
    322          }//initUstMTZ1(short mngUst, char init)
    323          
    324          void  prepareUstNZOP2(short idxC)
    325          {
    326            prepareUstNZOP1(idxC);
    327          }//prepareUstMTZ3(short idxC)
    328          
    329          int codecUstNZOP2(char codec, short offset, int ust)
    330          //codec=0-кодировать
    331          //codec=1-раскодировать
    332          {
    333            //кодировать-раскодировать уставку
    334            return codecUstNZOP1(codec, offset, ust);
    335          }//codecUstNZOP1(char *buf, short offset, int ust)
    336          
    337          void diffNZOP2ToRepozitar()
    338          {
    339          //копировать изменения компонента в репозитарий
    340            rpzcomponent_obj.componentEnable = 1;//разрешение компонента
    341            rpzcomponent_obj.kodC   = KOD_COMPONENT;         //код компонента
    342            rpzcomponent_obj.permanent = 0; //перманентный компонент
    343          
    344            strcpy(rpzcomponent_obj.nameComponent,  NZOP2_TITLE);       //имя компонента
    345            rpzcomponent_obj.sub_menu_component =  sub_menu_comp_NZOP2;//sub_menu_component;
    346          
    347            rpzcomponent_obj.cntClon     = CNT_STUPEN_NZOP;   //max к-во клонов
    348            rpzcomponent_obj.numClon     = 2;//номер клона
    349            rpzcomponent_obj.workToSignal = 0; //Работа на сигнал
    350          
    351            rpzcomponent_obj.initUstMng     = initUstNZOP2;    //инициал уставок
    352            rpzcomponent_obj.prepareUstSpv  = prepareUstNZOP2;//подготовка уставок
    353          
    354            rpzcomponent_obj.nameStatusIO = ionsNZOP2;          //имена и статус команд IO
    355          
    356            rpzcomponent_obj.codecUst = codecUstNZOP2;   //кодировать-раскодировать уставку
    357          
    358          }//
    359          
    360          #endif // _HIDE_COMPONENT
    361          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   EditUprNZOP2
         8   -> UpravlRedactor
       8   EditUstNZOP2
         8   -> SystemEditUst
       8   EditVidNZOP2
         8   -> SystemEditUst
      24   KadrMenuFormat_upr_compNZOP2
        24   -> getCurrentMngUSTAVKI
        24   -> selectorUprStrNZOP1
        24   -> strcpy
       8   PereinitUprListCompNZOP2
         8   -> ListPStr
         8   -> TxtStreamInit
         8   -> TxtStreamSetEnd
         8   -> ViewDiskrMenuList
       8   PereinitUstListCompNZOP2
         8   -> ListPStr
         8   -> TxtStreamInit
         8   -> TxtStreamSetEnd
         8   -> ViewDiskrMenuList
       8   PereinitVidListCompNZOP2
         8   -> ListPStr
         8   -> TxtStreamInit
         8   -> TxtStreamSetEnd
         8   -> ViewDiskrMenuList
       8   UprCompNZOP2
         8   -> PassWord
         8   -> PrepareEditMenu
         8   -> SelectorCRRLIGHTLINE
       8   UprListCompNZOP2
         8   -> InitFHOME
         8   -> LanderUpDown
         8   -> SelectorFHOME
         8   -> SelectorMNGBAZA
         8   -> SelectorSUBMENU
         8   -> SelectorTEXTCONTROL
       8   UstCompNZOP2
         8   -> PassWord
         8   -> PrepareEditMenu
         8   -> SelectorCRRLIGHTLINE
       8   UstListCompNZOP2
         8   -> InitFHOME
         8   -> LanderUpDown
         8   -> SelectorFHOME
         8   -> SelectorMNGBAZA
         8   -> SelectorSUBMENU
         8   -> SelectorTEXTCONTROL
       8   VidCompNZOP2
         8   -> EditVidNZOP2
         8   -> PrepareEditMenu
         8   -> SelectorCRRLIGHTLINE
       8   VidListCompNZOP2
         8   -> InitFHOME
         8   -> LanderUpDown
         8   -> SelectorFHOME
         8   -> SelectorMNGBAZA
         8   -> SelectorSUBMENU
         8   -> SelectorTEXTCONTROL
      16   codecUstNZOP2
        16   -> codecUstNZOP1
       8   diffNZOP2ToRepozitar
         8   -> strcpy
       8   initUstNZOP2
         8   -> initUstNZOP1
       8   prepareUstNZOP2
         8   -> prepareUstNZOP1


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable13
       4  ??DataTable13_1
       4  ??DataTable13_10
       4  ??DataTable13_11
       4  ??DataTable13_2
       4  ??DataTable13_3
       4  ??DataTable13_4
       4  ??DataTable13_5
       4  ??DataTable13_6
       4  ??DataTable13_7
       4  ??DataTable13_8
       4  ??DataTable13_9
      16  ?_0
      16  ?_1
      12  ?_10
      20  ?_11
      16  ?_12
      16  ?_13
      24  ?_14
      24  ?_15
      16  ?_16
      12  ?_17
      16  ?_18
      20  ?_2
      20  ?_3
      12  ?_4
      20  ?_5
      20  ?_6
      16  ?_7
      16  ?_8
      20  ?_9
      52  EditUprNZOP2
      16  EditUstNZOP2
      16  EditVidNZOP2
     160  KadrMenuFormat_upr_compNZOP2
       8  NZOP2_TITLE
      68  PereinitUprListCompNZOP2
      68  PereinitUstListCompNZOP2
      68  PereinitVidListCompNZOP2
      28  UprCompNZOP2
      52  UprListCompNZOP2
      28  UstCompNZOP2
      52  UstListCompNZOP2
      24  VidCompNZOP2
      52  VidListCompNZOP2
      48  codecUstNZOP2
     152  diffNZOP2ToRepozitar
      24  initUstNZOP2
      56  ionsNZOP2
      28  prepareUstNZOP2
      96  sub_menu_comp_NZOP2
      72  sub_menu_upr_compNZOP2
      72  sub_menu_ust_compNZOP2
      72  sub_menu_vid_compNZOP2

 
 376 bytes in section .data
 332 bytes in section .rodata
 984 bytes in section .text
 
 984 bytes of CODE  memory
 332 bytes of CONST memory
 376 bytes of DATA  memory

Errors: none
Warnings: none
