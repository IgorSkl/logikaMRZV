###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.2.8542/W32 for ARM        20/Oct/2015  12:49:36
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  arm
#    Endian       =  little
#    Source file  =  
#        D:\IAR projects\HR1_0100_00_I720_new2\dataEEPROM\cicloGrammaEEPROM2.c
#    Command line =  
#        "D:\IAR
#        projects\HR1_0100_00_I720_new2\dataEEPROM\cicloGrammaEEPROM2.c" -D
#        _STATIC_MEMORY_BOOT -lcN "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\Debug xFlash\List\" -o "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\Debug xFlash\Obj\" --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=ARM926EJ-S -e
#        --fpu=VFP9-S --dlib_config "C:\Program Files\IAR Systems\Embedded
#        Workbench 7.40\arm\INC\c\DLib_Config_Normal.h" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\NXP\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\LIB\include\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\inc\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\Igor\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\mal\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\component\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\psupervisor\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\virtualMenu\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\callbackElement\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\logictimers\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\zonaVRT\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\" --cpu_mode arm -On
#        --use_c++_inline
#    List file    =  
#        D:\IAR projects\HR1_0100_00_I720_new2\EWP\Debug
#        xFlash\List\cicloGrammaEEPROM2.lst
#    Object file  =  
#        D:\IAR projects\HR1_0100_00_I720_new2\EWP\Debug
#        xFlash\Obj\cicloGrammaEEPROM2.o
#
###############################################################################

D:\IAR projects\HR1_0100_00_I720_new2\dataEEPROM\cicloGrammaEEPROM2.c
      1          
      2          #include "callbackelement\callbackelementdef.h"
      3          #include "callbackelement\ustrangEEPROMdef.h"
      4          #include "dataEEPROM\dataEEPROMdef.h"
      5          
      6          #include "callbackelement\callbackelementfnc.h"
      7          #include "dataEEPROM\dataEEPROM.h"
      8          
      9          extern int eeprom_status;//статусный регистр EEPROM
     10          extern int alterEEPROM;//байты alter ext устaвок и ранжир EEPROM
     11          extern int maskaAlterEEPROM;//маска для alter ext устaвок и ранжир EEPROM
     12          extern int ratingEEPROM;//кратность чтения EEPROM
     13          
     14          int eepromCicling_DEVICE2 = UST_NOWORK;//циклы работы с EEPROM
     15          int missionCicling_DEVICE2;//циклы одинаковых миссий
     16          
     17          void cicloGrammaEEPROM_DEVICE2() @ "Fast_function"
     18          {
     19          //доступ к данным EEPROM
     20          //исполнение пошаговых миссий для DEVICE2
     21            switch(isActivStepElementDEVICE2())//активность пошагового элемента
     22            {
     23             case -1:
     24             {
     25             //авария EEPROM
     26             //отказ EEPROM при записи уст
     27             //установить статус _FAIL
     28              eeprom_status |= (1<<EEPROM_FAIL);//статусный регистр EEPROM
     29             } break;
     30             case 1:
     31             {
     32             //миссия закончилась
     33              switch(eepromCicling_DEVICE2)//циклы работы с EEPROM
     34              {
     35              case SAVE_EXT_BUSY://процесс записи ext занят
     36                eepromCicling_DEVICE2 = stepElementSaveEXTtoEEPROM_DEVICE2(alterEEPROM^EXTALTER_MASKA);//запись ext EEPROM в другой блок
     37                break;
     38              case WRITE_EXTALTER_BUSY://процесс записи alter ext занят
     39                eepromCicling_DEVICE2 = stepElementEXTALTERtoEEPROM_DEVICE2();//запись alter ext EEPROM
     40                break;
     41              default:
     42                ;
     43              }//switch
     44            } break;//
     45          
     46          //  else
     47             case 2:
     48            {
     49               //миссии не было
     50              switch(eepromCicling_DEVICE2)//циклы работы с EEPROM
     51              {
     52              case SAVE_EXT_COMPLETE: //процесс записи ext завершен
     53                if(controlSaveExt())//контроль результ записи ext
     54                {
     55                  //отказ EEPROM при записи ранж
     56                  //установить статус _FAIL
     57                  eeprom_status |= (1<<EEPROM_FAIL);//статусный регистр EEPROM
     58                  return;//контроль результ записи
     59                }//if
     60                alterEEPROM ^= EXTALTER_MASKA;//перекл ext на другой блок
     61                writeEXTALTERtoEEPROM_DEVICE2(alterEEPROM);//записать alter ext в EEPROM
     62                break;
     63              case WRITE_EXTALTER_COMPLETE://процесс записи alter ext завершен
     64                eepromCicling_DEVICE2 = UST_NOWORK;//циклы работы с EEPROM
     65                if(controlWriteEXTALTER())//контроль результ записи alter ext
     66                {
     67                  //отказ EEPROM при записи alter
     68                  //установить статус _FAIL
     69                  eeprom_status |= (1<<EEPROM_FAIL);//статусный регистр EEPROM
     70                  return;//контроль результ записи
     71                }//if
     72                
     73                if(ratingEEPROM == 0){ //кратность чтения-записи EEPROM
     74                   //повторное сохранение
     75                   saveEXTtoEEPROM(alterEEPROM^EXTALTER_MASKA);//сохранить ext в EEPROM
     76                   ratingEEPROM++;//кратность чтения-записи EEPROM
     77                }//if
     78                else {
     79                //сбросить статус EXT_BUSY
     80                eeprom_status &= ~(1<<EEPROMEXT_BUSY);//статусный регистр EEPROM
     81                eeprom_status &= ~(1<<EEPROMEXT_ATTEMPT);
     82                //сбросить статус EXT_CRC
     83                eeprom_status &= ~(1<<EEPROMEXT_CRC);
     84                ratingEEPROM=0;//кратность чтения-записи EEPROM
     85                }
     86                
     87                break;
     88              default:
     89                ;
     90              }//switch
     91            } break;//
     92           }//switch
     93          
     94          }//cicloGrammaEEPROM_DEVICE2()
     95          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   cicloGrammaEEPROM_DEVICE2
         8   -> controlSaveExt
         8   -> controlWriteEXTALTER
         8   -> isActivStepElementDEVICE2
         8   -> saveEXTtoEEPROM
         8   -> stepElementEXTALTERtoEEPROM_DEVICE2
         8   -> stepElementSaveEXTtoEEPROM_DEVICE2
         8   -> writeEXTALTERtoEEPROM_DEVICE2


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     424  cicloGrammaEEPROM_DEVICE2
       4  eepromCicling_DEVICE2
       4  missionCicling_DEVICE2

 
   4 bytes in section .bss
   4 bytes in section .data
 424 bytes in section Fast_function
 
 424 bytes of CODE memory
   8 bytes of DATA memory

Errors: none
Warnings: none
