###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.2.8542/W32 for ARM        12/Oct/2015  11:05:05
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  arm
#    Endian       =  little
#    Source file  =  
#        D:\IAR projects\HR1_0100_00_I720_new2\SettingIci\SettingIci_NZOP.c
#    Command line =  
#        "D:\IAR projects\HR1_0100_00_I720_new2\SettingIci\SettingIci_NZOP.c"
#        -D _STATIC_MEMORY_BOOT -lcN "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\Debug xFlash\List\" -o "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\Debug xFlash\Obj\" --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=ARM926EJ-S -e
#        --fpu=VFP9-S --dlib_config "C:\Program Files\IAR Systems\Embedded
#        Workbench 7.40\arm\INC\c\DLib_Config_Normal.h" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\NXP\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\LIB\include\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\inc\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\Igor\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\mal\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\component\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\psupervisor\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\virtualMenu\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\callbackElement\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\logictimers\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\zonaVRT\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\" --cpu_mode arm -On
#        --use_c++_inline
#    List file    =  
#        D:\IAR projects\HR1_0100_00_I720_new2\EWP\Debug
#        xFlash\List\SettingIci_NZOP.lst
#    Object file  =  
#        D:\IAR projects\HR1_0100_00_I720_new2\EWP\Debug
#        xFlash\Obj\SettingIci_NZOP.o
#
###############################################################################

D:\IAR projects\HR1_0100_00_I720_new2\SettingIci\SettingIci_NZOP.c
      1          #include "lpc_types.h"
      2          #include "lpc_irq_fiq.h"
      3          #include "lpc_arm922t_cp15_driver.h"
      4          
      5          #include "lpc32xx_hstimer.h"
      6          #include "lpc32xx_ssp.h"
      7          #include "lpc32xx_gpio.h"
      8          
      9          #include "lpc32xx_intc_driver.h"
     10          #include "lpc32xx_clkpwr_driver.h"
     11          
     12          #include "arm926ej_cp15_drv.h"
     13          #include "ttbl.h"
     14          
     15          #include <stdio.h>
     16          #include <string.h>
     17          
     18          #include "psuperVisor\supermanager.h"
     19          
     20          #include "component\componentdef.h"
     21          #include "psuperVisor\psvisor_helpdef.h"
     22          
     23          #include "psuperVisor\psvisor_helpfnc.h"
     24          #include "SettingIci\SettingIci.h"
     25          #include "virtualmenu\systemmenufnc.h"
     26          
     27          #include "toSpeedOptim.h"
     28          #include "toSpeedDIS.h"
     29          
     30          #include "header.h"
     31          #include "ici_r_ef.h"
     32          
     33          #define _HIDE_COMPONENT
     34          #include "NZOP1Component.c"
     35          
     36          extern char chProtectTableComeIn;
     37          extern char chResultCallGetMeasPrt;
     38          //extern tic long lDemo_IA,lDemo_IB,lDemo_IC;
     39          extern  long lMtz1,lMtz1Tmr,lSt1,lSt2, lst3, lst4;
     40          extern __MEASUREMENT_TO_PROTECTION TestMeasProtection;
     41          
     42          void  SettingIci_NZOP()
     43          {
     44          /*
     45          unsigned int ov_range_Zop_s_I2;
     46          //. уставка по току ПО НЗОП прям
     47          //. 1 ед = 1 мA
     48          unsigned int ov_range_Zop_s_U2;
     49          //. уставка по напряжению ПО НЗОП  прям
     50          //. 1 ед = 1 мA
     51          
     52          unsigned int ov_range_Zop_b_I2;
     53          //. уставка по току ПО НЗОП обр
     54          //. 1 ед = 1 мA
     55          unsigned int ov_range_Zop_b_U2;
     56          */
     57          
     58          //установки ICI NZOP
     59          //-------------NZOP1-----------------------    
     60              lMtz1 = brCfgTbl.arPckpStpmStngStore[0].ownrStage1NspPickupStoreDsc.ov_range_Zop_s_I2;
     61              SetUstToClon(NZOP_COMP1,  1, MNGUST_ICM_NZOP1to2_V, lMtz1);//уставка по ICM НЗОП1 ВПД
     62          
     63              lMtz1 = brCfgTbl.arPckpStpmStngStore[0].ownrStage1NspPickupStoreDsc.ov_range_Zop_b_I2;
     64              SetUstToClon(NZOP_COMP1,  1, MNGUST_ICM_NZOP1to2_N, lMtz1);//уставка по ICM НЗОП НЗД
     65          
     66              lMtz1 = brCfgTbl.arPckpStpmStngStore[0].ownrStage1NspPickupStoreDsc.ov_range_Zop_s_U2;
     67              SetUstToClon(NZOP_COMP1,  1, MNGUST_UCM_NZOP1to2_V, lMtz1);//уставка по UCM НЗОП1 ВПД
     68          
     69              lMtz1 = brCfgTbl.arPckpStpmStngStore[0].ownrStage1NspPickupStoreDsc.ov_range_Zop_b_U2;
     70              SetUstToClon(NZOP_COMP1,  1, MNGUST_UCM_NZOP1to2_N, lMtz1);//уставка по UCM НЗОП НЗД
     71          
     72          /*
     73          unsigned short time_stage_Zop;   //- выдержка ЗОП
     74          unsigned short time_stage_Zop_s;    //- выдержка T вперед ЗOП 
     75          unsigned short time_stage_Zop_b;    //- выдержка T назад ЗOП 
     76          */
     77              lMtz1Tmr = brCfgTbl.arPckpStpmStngStore[0].ownrStage1NspStageParamStoreDsc.time_stage_Zop;
     78            SetUstToClon(NZOP_COMP1,  1, MNGVID_NZOP1to2, lMtz1Tmr*10);//выдержка НЗОП1 
     79              lMtz1Tmr = brCfgTbl.arPckpStpmStngStore[0].ownrStage1NspStageParamStoreDsc.time_stage_Zop_s;
     80            SetUstToClon(NZOP_COMP1,  1, MNGVID_NZOP1to2_V, lMtz1Tmr*10);//выдержка НЗОП1 ВПД
     81              lMtz1Tmr = brCfgTbl.arPckpStpmStngStore[0].ownrStage1NspStageParamStoreDsc.time_stage_Zop_b;
     82            SetUstToClon(NZOP_COMP1,  1, MNGVID_NZOP1to2_N, lMtz1Tmr*10);//выдержка НЗОП1 НЗД
     83          
     84          /*
     85          unsigned char select_prt_zop;//Селектор зоп
     86          //меню  выбор рабоы защиты ЗОП Пуск(Работа) 
     87          //по направленности Пуск(Работа) по напряжению
     88          //.	Состояние
     89          //.	0 - Простая
     90          //.	1 - Пуск по направленности
     91          
     92          unsigned char state_dir_zop;
     93          //.	Состояние
     94          //.	1 -вкл
     95          //.	0 - выкл
     96          unsigned char select_dir_zop;
     97          //.	Состояние
     98          //.	1 - прямая
     99          //.	0 - обратная
    100          */
    101          
    102            int uprNZOP1=0;
    103            //меню Вид NZOP1
    104          //.	Состояние
    105          //.	0 - Простая
    106          //.	1 - Пуск по направленности
    107              lSt1 = brCfgTbl.ownrStg1NspMng.select_prt_zop;
    108            if(lSt1>0) uprNZOP1 |= 1; //NZOP1  WKL
    109            else  uprNZOP1 &= ~1; //NZOP1  OTKL 
    110            //меню  Состояние NZOP1
    111          //.	Состояние
    112          //.	1 -вкл
    113          //.	0 - выкл
    114              lSt1 = brCfgTbl.ownrStg1NspMng.state_dir_zop;
    115            if(lSt1>0) uprNZOP1 |= 2; //NZOP1 
    116            else  uprNZOP1 &= ~2; //NZOP1  
    117          
    118            //меню Направление NZOP1
    119          //.	Состояние
    120          //.	1 - прямая
    121          //.	0 - обратная
    122              lSt1 = brCfgTbl.ownrStg1NspMng.select_dir_zop;
    123            if(lSt1>0) uprNZOP1 |= 4; //NZOP1  
    124            else  uprNZOP1 &= ~4; 
    125          
    126            SetUstToClon(NZOP_COMP1,  1, MNGUPR_NZOP1to2, uprNZOP1);//управление NZOP1
    127          
    128          //-------------NZOP2-----------------------    
    129              lMtz1 = brCfgTbl.arPckpStpmStngStore[0].ownrStage2NspPickupStoreDsc.ov_range_Zop_s_I2;
    130              SetUstToClon(NZOP_COMP1,  2, MNGUST_ICM_NZOP1to2_V, lMtz1);//уставка по ICM НЗОП1 ВПД
    131          
    132              lMtz1 = brCfgTbl.arPckpStpmStngStore[0].ownrStage2NspPickupStoreDsc.ov_range_Zop_b_I2;
    133              SetUstToClon(NZOP_COMP1,  2, MNGUST_ICM_NZOP1to2_N, lMtz1);//уставка по ICM НЗОП НЗД
    134          
    135              lMtz1 = brCfgTbl.arPckpStpmStngStore[0].ownrStage2NspPickupStoreDsc.ov_range_Zop_s_U2;
    136              SetUstToClon(NZOP_COMP1,  2, MNGUST_UCM_NZOP1to2_V, lMtz1);//уставка по UCM НЗОП1 ВПД
    137          
    138              lMtz1 = brCfgTbl.arPckpStpmStngStore[0].ownrStage2NspPickupStoreDsc.ov_range_Zop_b_U2;
    139              SetUstToClon(NZOP_COMP1,  2, MNGUST_UCM_NZOP1to2_N, lMtz1);//уставка по UCM НЗОП НЗД
    140          /*
    141          unsigned short time_stage_Zop;   //- выдержка ЗОП
    142          unsigned short time_stage_Zop_s;    //- выдержка T вперед ЗOП 
    143          unsigned short time_stage_Zop_b;    //- выдержка T назад ЗOП 
    144          */
    145              lMtz1Tmr = brCfgTbl.arPckpStpmStngStore[0].ownrStage2NspStageParamStoreDsc.time_stage_Zop;
    146            SetUstToClon(NZOP_COMP1,  2, MNGVID_NZOP1to2, lMtz1Tmr*10);//выдержка НЗОП2 
    147              lMtz1Tmr = brCfgTbl.arPckpStpmStngStore[0].ownrStage2NspStageParamStoreDsc.time_stage_Zop_s;
    148            SetUstToClon(NZOP_COMP1,  2, MNGVID_NZOP1to2_V, lMtz1Tmr*10);//выдержка НЗОП2 ВПД
    149              lMtz1Tmr = brCfgTbl.arPckpStpmStngStore[0].ownrStage2NspStageParamStoreDsc.time_stage_Zop_b;
    150            SetUstToClon(NZOP_COMP1,  2, MNGVID_NZOP1to2_N, lMtz1Tmr*10);//выдержка НЗОП2 НЗД
    151          
    152          /*
    153          unsigned char select_prt_zop;//Селектор зоп
    154          //меню  выбор рабоы защиты ЗОП Пуск(Работа) 
    155          //по направленности Пуск(Работа) по напряжению
    156          //.	Состояние
    157          //.	0 - Простая
    158          //.	1 - Пуск по направленности
    159          
    160          unsigned char state_dir_zop;
    161          //.	Состояние
    162          //.	1 -вкл
    163          //.	0 - выкл
    164          unsigned char select_dir_zop;
    165          //.	Состояние
    166          //.	1 - прямая
    167          //.	0 - обратная
    168          */
    169          
    170            int uprNZOP2=0;
    171            //меню Вид NZOP2
    172          //.	Состояние
    173          //.	0 - Простая
    174          //.	1 - Пуск по направленности
    175              lSt1 = brCfgTbl.ownrStg2NspMng.select_prt_zop;
    176            if(lSt1>0) uprNZOP2 |= 1; //NZOP2  WKL
    177            else  uprNZOP2 &= ~1; //NZOP2  OTKL 
    178            //меню  Состояние NZOP2
    179          //.	Состояние
    180          //.	1 -вкл
    181          //.	0 - выкл
    182              lSt1 = brCfgTbl.ownrStg2NspMng.state_dir_zop;
    183            if(lSt1>0) uprNZOP2 |= 2; //NZOP2 
    184            else  uprNZOP2 &= ~2; //NZOP2
    185          
    186            //меню Направление NZOP2
    187          //.	Состояние
    188          //.	1 - прямая
    189          //.	0 - обратная
    190              lSt1 = brCfgTbl.ownrStg2NspMng.select_dir_zop;
    191            if(lSt1>0) uprNZOP2 |= 4; //NZOP2
    192            else  uprNZOP2 &= ~4; 
    193          
    194            SetUstToClon(NZOP_COMP1,  2, MNGUPR_NZOP1to2, uprNZOP2);//управление NZOP
    195          
    196          }//
    197          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   SettingIci_NZOP
        16   -> SetUstToClon


   Section sizes:

   Bytes  Function/Label
   -----  --------------
    1020  SettingIci_NZOP

 
 1 020 bytes in section .text
 
 1 020 bytes of CODE memory

Errors: none
Warnings: none
