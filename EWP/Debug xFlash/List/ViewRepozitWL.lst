###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.2.8542/W32 for ARM        20/Oct/2015  12:49:49
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  arm
#    Endian       =  little
#    Source file  =  
#        D:\IAR projects\HR1_0100_00_I720_new2\virtualMenu\ViewRepozitWL.c
#    Command line =  
#        "D:\IAR projects\HR1_0100_00_I720_new2\virtualMenu\ViewRepozitWL.c" -D
#        _STATIC_MEMORY_BOOT -lcN "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\Debug xFlash\List\" -o "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\Debug xFlash\Obj\" --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=ARM926EJ-S -e
#        --fpu=VFP9-S --dlib_config "C:\Program Files\IAR Systems\Embedded
#        Workbench 7.40\arm\INC\c\DLib_Config_Normal.h" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\NXP\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\LIB\include\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\inc\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\Igor\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\mal\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\component\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\psupervisor\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\virtualMenu\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\callbackElement\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\logictimers\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\zonaVRT\" -I "D:\IAR
#        projects\HR1_0100_00_I720_new2\EWP\..\" --cpu_mode arm -On
#        --use_c++_inline
#    List file    =  
#        D:\IAR projects\HR1_0100_00_I720_new2\EWP\Debug
#        xFlash\List\ViewRepozitWL.lst
#    Object file  =  
#        D:\IAR projects\HR1_0100_00_I720_new2\EWP\Debug
#        xFlash\Obj\ViewRepozitWL.o
#
###############################################################################

D:\IAR projects\HR1_0100_00_I720_new2\virtualMenu\ViewRepozitWL.c
      1          /*
      2          #include <vcl.h>
      3          #include <strstrea.h>
      4          #include <math.h>
      5          #include <mem.h>
      6          #include <fstream.h>
      7          #include <strstrea.h>
      8          #include <iomanip.h>
      9          #pragma hdrstop
     10          
     11          #include "vmenuDis.h"
     12          */
     13          
     14          #include <stdio.h>
     15          #include <string.h>
     16          
     17          #include "bazisdef.h"
     18          #include "psuperVisor\supermanager.h"
     19          #include "virtualMenu\systemmenudef.h"
     20          #include "component\componentdef.h"
     21          #include "virtualMenu\repozitdef.h"
     22          
     23          #include "virtualMenu\systemmenufnc.h"
     24          #include "virtualMenu\textstreamfnc.h"
     25          #include "virtualMenu\repozitfnc.h"
     26          
     27          #include "virtualMenu\viewMenuCnf.h"
     28          #include "virtualMenu\viewMenuSub.h"
     29          #include "virtualMenu\viewMenuWideLog.h"
     30          
     31          #include "..\bazis.h"
     32          
     33          extern LineMenuItem sub_menu_cnfwl[];
     34          
     35          extern COMPONENT_OBJ rpzcomponent_obj;//обект компонента для репозитария
     36          
     37          char copyOFToRepozitar(char packet);
     38          char copyPFToRepozitar(char packet);
     39          
     40          //доступные компоненты
     41          LineMenuItem sub_menu_rpzWL[MAX_WLCOMPONENT+3] =
     42          {
     43            { "Репозитарий РЛ", NULL},//title
     44            { NULL, NULL}
     45          };
     46          
     47          
     48          //репозитарий компонентов РЛ
     49          ELEMENT_RPZ  rpzCOMPONENT_WL[] =
     50          {
     51          
     52            {
     53              //OF
     54              1,
     55              &copyOFToRepozitar,
     56              {OF_COMP1}
     57            },
     58          
     59            {
     60              //PF
     61              1,
     62              &copyPFToRepozitar,
     63              {PF_COMP1}
     64            },
     65          
     66            {
     67              //NULL
     68              0
     69            }
     70          };
     71          
     72          void  RpzComponentWL()
     73          {
     74          //доступные компоненты
     75          //допустить все компоненты
     76            short i=0;
     77            while(rpzCOMPONENT_WL[i].componentEnable)
     78            {
     79              rpzCOMPONENT_WL[i].componentPermission = 1;//компонент допущен
     80              i++;
     81            }//while
     82          
     83          //допуск по к-ву клонов
     84            i=0;
     85            short kC;         //код компонента
     86            short cntC;//к-во клонов компонента
     87            while(rpzCOMPONENT_WL[i].componentEnable)
     88            {
     89              rpzCOMPONENT_WL[i].load2RPZ(1);//заглянуть в репозитарий
     90              kC = rpzcomponent_obj.kodC;         //код компонента
     91          //искать в cnf к-во клонов данного компонента
     92              cntC = SearchCnfClonComponent(kC);
     93              if(cntC>=rpzcomponent_obj.cntClon)
     94                rpzCOMPONENT_WL[i].componentPermission = 0;//нет допуска
     95              i++;
     96            }//while
     97          
     98          //отобразить только допущенные компоненты
     99          //обзор репозитария
    100            short rpzI=0;
    101            short mnI=0;
    102            while(rpzCOMPONENT_WL[rpzI].componentEnable)
    103            {
    104              if(rpzCOMPONENT_WL[rpzI].load2RPZ(1));//заглянуть в репозитарий
    105              else strcpy(rpzCOMPONENT_WL[rpzI].rpzKodName.rpzNameComponent, rpzcomponent_obj.nameComponent);
    106          
    107                sub_menu_rpzWL[mnI+1+SUBDATA].Line1 = rpzCOMPONENT_WL[rpzI].rpzKodName.rpzNameComponent;//name
    108                sub_menu_rpzWL[mnI+1+SUBDATA].Line2 = (void *)&ConfigMakerWL;//добавить в конфиг РЛ
    109                sub_menu_rpzWL[mnI+1+SUBDATA].TypesWin = typeMenuProg;
    110                mnI++;
    111          
    112              rpzI++;
    113            }//while
    114          
    115            sub_menu_rpzWL[mnI+1+SUBDATA].Line1 = NULL;
    116            sub_menu_rpzWL[mnI+1+SUBDATA].Line2 = NULL;
    117          
    118            sub_menu_rpzWL[SUBDATA].Line1 = &CONTROL_RPZ;//control
    119            sub_menu_rpzWL[SUBDATA].Line2 = sub_menu_cnfwl;//parent
    120            sub_menu_rpzWL[SUBDATA].TypesWin = typeMenuSub;
    121          
    122          //  CRR_SUBMENU = sub_menu_rpzWL;//текущее субменю
    123            SelectorSUBMENU(sub_menu_rpzWL);//уcтановить текущее субменю
    124          
    125          //  CRR_TEXTSTREAM = &CONTROL_RPZ;//текущий control
    126            SelectorTEXTCONTROL(&CONTROL_RPZ);//установить текущую ссылку на текстовый поток
    127          
    128            PereinitRpzWL(1);//переиниц
    129          //  CRR_FHOME = &PereinitRpzWL;//указатель на ф-цию HOME
    130            SelectorFHOME(&PereinitRpzWL);//указатель на ф-цию HOME
    131          
    132          }//RpzComponentWL()
    133          
    134          void PereinitRpzWL(short flg)
    135          {
    136          //переиниц
    137            TxtStreamInit(&CONTROL_RPZ, &KadrMenuFormat_sub, sub_menu_rpzWL);//инит control и формир кадра
    138            if(flg==0)//END
    139            {
    140              TxtStreamSetEnd(&CONTROL_RPZ, SIZE_PAGE_VIEW);//перейти на END
    141            }//if
    142            ViewDiskrMenu(typeMenuSub);//вывести окно отображения
    143            LanderPStr();//размещение указателя строки
    144          }//PereinitRpzWL()
    145          
    146          short GetOffsetClonRpzWL(short numK)
    147          {
    148          //получить смещение репозитария по коду компонента
    149            short i=0;
    150            while(rpzCOMPONENT_WL[i].componentEnable)
    151            {
    152              if(rpzCOMPONENT_WL[i].rpzKodName.kodC==numK)
    153                return i;
    154              i++;
    155            }//while
    156            return 0;
    157          }//GetOffsetClonRpzWL(short numK)
    158          
    159          
    160          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   GetOffsetClonRpzWL
       8   PereinitRpzWL
         8   -> LanderPStr
         8   -> TxtStreamInit
         8   -> TxtStreamSetEnd
         8   -> ViewDiskrMenu
      24   RpzComponentWL
        24   -- Indirect call
        24   -> PereinitRpzWL
        24   -> SearchCnfClonComponent
        24   -> SelectorFHOME
        24   -> SelectorSUBMENU
        24   -> SelectorTEXTCONTROL
        24   -> strcpy


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
       4  ??DataTable2_6
       4  ??DataTable2_7
      16  ?_0
      96  GetOffsetClonRpzWL
      72  PereinitRpzWL
     544  RpzComponentWL
     132  rpzCOMPONENT_WL
     156  sub_menu_rpzWL

 
 288 bytes in section .data
  16 bytes in section .rodata
 744 bytes in section .text
 
 744 bytes of CODE  memory
  16 bytes of CONST memory
 288 bytes of DATA  memory

Errors: none
Warnings: none
