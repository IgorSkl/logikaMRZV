/*------------------------------------------------------------------------------
* Created (c) 2014 - Factory “KyivPrylad”
* 
* Permission to use, copy, modify, and distribute this software for any
* purpose with or without fee is hereby granted, provided that the above
* copyright notice and this permission notice appear in all copies.
* 
* THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
* WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
* MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
* ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
* WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
* ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
* OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
* 
*------------------------------------------------------------------------------
*
* Processor       : Lpc_3240
* File Name       : var_r_ef.h
* Description     : Variables exchange  on 
                    BM BR 
					  external function & data for  BR

*  Version        : 1.00
*
*       +----- (NEW | MODify | ADD | DELete)
*       |
*  No   |   When       Who                What
*-----+---+----------+------------------+--------------------------------------
* 000  NEW  21/08/14   Markovsky A       Creation
*----------------------------------------------------------------------------*/
#ifndef	VAR_R_EF_H
#define	VAR_R_EF_H


//""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

#include "hv_df.h"
//""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
extern CfgTblDsc brCfgTbl;//Main CfgTbl on BR


extern char chbrCfgTblState;
#define BR_CFG_TBL_USED_BIT         (1)
//-Бит указывающий что ресурс занят и меняется
#define BR_CFG_TBL_ICI_MF_BIT       (2)
//-Бит указывающий что ресурс был изменен системой межпроцессорного обмена
#define BR_CFG_TBL_APCS_MF_BIT       (3)
//-Бит указывающий что ресурс был изменен системой обслуживания EEPROM
#define BR_CFG_TBL_WR_EPR_BIT       (4)
//-Бит запроса на запись к  системе обслуживания EEPROM
#define BR_CFG_TBL_RD_EPR_BIT       (5)
//--Бит запроса на чтение к  системе обслуживания EEPROM

/*
При получении ресурса из БС, перед изменением  система межпроцессорного обмена
уведомляет о изменении ресурса битом BR_CFG_TBL_USED_BIT(Означает brCfgTbl). 
Система обслуживания EEPROM недолжна модифицировать ресурс если бит установлен.
Система обслуживания EEPROM, перед началом каких-либо операций, 
должна взводить BR_CFG_TBL_USED_BIT, указывая, что она заняла ресурс(brCfgTbl) 
до окончания операции.

После изменения ресурса(brCfgTbl) системой межпроцессорного обмена взводится бит
BR_CFG_TBL_ICI_MF_BIT -Указывая, что система межпроцессорного обмена поменяла ресурс(brCfgTbl). 


Бит BR_CFG_TBL_ICI_MF_BIT очищается системой  межпроцессорного обмена при завершения анализа
результата опрерации записи или чтения.

При необходимости записи она взводит бит BR_CFG_TBL_WR_EPR_BIT.
По окончании операции записи система обслуживания EEPROM должна
очистить BR_CFG_TBL_WR_EPR_BIT. Информируя, о завершении.
Результат операции(ошибки) необходимо помещать в отдельную переменную.

При необходимости считывания ресурса(brCfgTbl) системой межпроцессорного обмена взводится бит
BR_CFG_TBL_RD_EPR_BIT Указывая, что система межпроцессорного обмена 
ожидает считывания данных из  EEPROM

Если система межпроцессорного обмена должна прочитать ресурс(brCfgTbl), то она
взводит бит BR_CFG_TBL_RD_EPR_BIT.
По окончании операции чтения из EEPROM в  ресурс(brCfgTbl) система обслуживания EEPROM должна
очистить  BR_CFG_TBL_RD_EPR_BIT.
Это сигнал для системы межпроцессорного обмена передавать  ресурс(brCfgTbl) в БС.

BR_CFG_TBL_APCS_MF_BIT - зарезервирован пока, для необходимости инициирования
Процесса передачи ресурса из релейного в сервисный процессор. 

Бит BR_CFG_TBL_ICI_MF_BIT очистится системой  межпроцессорного обмена также и при выполнении
операции чтения ресурса (brCfgTbl) в БС.Это пока не заработает системе обслуживания EEPROM.
*/

/*

extern char chbrCfgTblState;
#define BR_CFG_TBL_USED_BIT         (1)
//-Бит указывающий что ресурс занят и меняется
#define BR_CFG_TBL_ICI_MF_BIT       (2)
//-Бит указывающий что ресурс был изменен системой межпроцессорного обмена 
//этот бит взводится тем кто перед этим использовал BR_CFG_TBL_USED_BIT
//и является индикатором завершения операции
#define BR_CFG_TBL_APCS_MF_BIT       (3)
//-Бит указывающий что ресурс был изменен системой защит и автоматики
//этот бит взводится тем кто перед этим использовал BR_CFG_TBL_USED_BIT
//и является индикатором завершения операции
#define BR_CFG_TBL_WR_EPR_BIT       (4)
//-Бит индикатор  записи к  системе обслуживания EEPROM
#define BR_CFG_TBL_RD_EPR_BIT       (5)
//--Бит индикатор  чтения к  системе обслуживания EEPROM

#define BS_WR_END_PRT_TBL_MF_BIT       (6)
//-Бит указывающий что ресурс был записан системой обслуживания  EEPROM
//Bit succesful writing
#define BS_RD_END_PRT_TBL_MF_BIT       (7)
//-Бит указывающий что ресурс был считан системой обслуживания  EEPROM




extern short shbrRQChangeCfgTablesState;
//взял в работу бит и сбросил
#define RQ_BR_CFG_TBL_RD_EPR_BIT       (1)
//-Бит запроса на запись к  системе обслуживания EEPROM
#define RQ_BR_CFG_TBL_WR_EPR_BIT       (2)
//--Бит запроса на чтение к  системе обслуживания EEPROM
//#define RQ_WR_MIN_CFG_    (8)
//--Бит запроса на установку мин параметров EEPROM





*/


//Interface to EEPROM & APCS 
//

//""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
//~~~       Перечень констант которые возвращают функции                      ~~~~~
//~~~       обработки запросов                        ~~~~~
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
//""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
//``````````````````````````````````````````````````````````````````````````````````
#define START_EXEC        1 
#define STATE_EXEC        2
#define SUCCESS_EXEC      3
#define ERROR_EXEC        4
//``````````````````````````````````````````````````````````````````````````````````
//~~~   возврат START_EXEC    - Запрос успешно принят 
//~~~   возврат STATE_EXEC    - Идет обработка предыдущего запроса
//~~~   возврат SUCCESS_EXEC  - Запрос успешно обработан
//~~~   возврат ERROR_EXEC    - Ошибка при приеме запроса
//..................................................................................
#define ERROR 4
#define OK    3

//""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
//---
extern long GetMeasPrt(void *pvMeasAddr);
//..................................................................................
//""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
//~~~     функция запроса/получения  __MEASUREMENT_TO_PROTECTION             ~~~~~
//~~~                                                                  ~~~~~
//~~~                                                                          ~~~~~
//~~~    Возвращаемое значение                                                 ~~~~~
//~~~    1 - команда начала выполняться                                        ~~~~~
//~~~    2 - система МПО(межпроцесорного обмена)  находится                     ~~~
//~~~         в состоянии выполнении запроса                                   ~~~~~
//~~~    3 - команда выполнена успешно                                         ~~~~~
//~~~    4 - возникла  ошибка при старте, передаче,                            ~~~~~
//~~~     или данные недостоверны                                              ~~~~~
 
//``````````````````````````````````````````````````````````````````````````````````
//~~~   pvMeasAddr  - По данному адресу в случае успеха будут помещены        ~~~~~
//~~~   данные  __MEASUREMENT_TO_PROTECTION                      ~~~~~
//``````````````````````````````````````````````````````````````````````````````````
//~~~  Описание __MEASUREMENT_TO_PROTECTION    должно находиться в файле       ~~~~~
//~~~   .hvps29_07_14\HR1_0100_00_I670\doc\Таблица структуры защит.docx        ~~~~~
//``````````````````````````````````````````````````````````````````````````````````
//~~~  Для указателя pvMeasAddr                                                ~~~~~
//~~~ !!ПАМЯТЬ НЕОБХОДИМО РАЗМЕЩАТЬ ПО ВЫРОВНЕННЫМ НА ГРАНИЦУ 32 БИТА СЛОВАМ !!! ~~~
//``````````````````````````````````````````````````````````````````````````````````
//~~~   __MEASUREMENT_TO_PROTECTION locMeasProtection;                                      ~~~~~
//~~~  int res;                                                                ~~~~~
//~~~  res =  GetMeasPrt(&locMeasProtection);                                  ~~~~~
//~~~   активировать передачу массива                                          ~~~~~
//~~~                                                                          ~~~~~
//~~~                                                                          ~~~~~
//``````````````````````````````````````````````````````````````````````````````````
//~~~   res =  GetMeasPrt(&locMeasProtection);                                 ~~~~~
//~~~   опрос состояния обработки данных                                       ~~~~~
//~~~   STATE_EXEC  -- Wait                                                    ~~~~~
//~~~   SUCCESS_EXEC -- Ok                                                     ~~~~~
//~~~   возврат ERROR_EXEC - Ошибка при приеме данных                          ~~~~~
//,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
//""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""





#endif